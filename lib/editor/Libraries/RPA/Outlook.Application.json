{
  "specversion": 2,
  "name": "Camunda.Outlook.Application",
  "doc": "<div class=\"document\">\n<p><cite>Outlook.Application</cite> is a library for controlling the Outlook application.</p>\n<p><strong>About Email Filtering</strong></p>\n<p>Emails can be filtered according to specification set by Restrict method of the\nItem class <a class=\"reference external\" href=\"https://docs.microsoft.com/en-us/office/vba/api/outlook.items.restrict\">https://docs.microsoft.com/en-us/office/vba/api/outlook.items.restrict</a>.</p>\n<p>Couple of examples:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Get Emails</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">   </span><span class=\"c\">email_filter=[Subject]='test email'</span><span class=\"p\">\n\n</span><span class=\"c\">Move Emails</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">   </span><span class=\"c\">email_filter=[SenderEmailAddress]='hello&#64;gmail.com'</span>\n</pre>\n<p><strong>Examples</strong></p>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Settings ***</span><span class=\"p\">\n</span><span class=\"kn\">Library</span><span class=\"p\">                 </span><span class=\"nn\">Camunda.Outlook.Application</span><span class=\"p\">\n</span><span class=\"kn\">Task Setup</span><span class=\"p\">              </span><span class=\"nf\">Open Application</span><span class=\"p\">\n</span><span class=\"kn\">Suite Teardown</span><span class=\"p\">          </span><span class=\"nf\">Quit Application</span><span class=\"p\">\n\n</span><span class=\"gh\">*** Variables ***</span><span class=\"p\">\n${</span><span class=\"nv\">RECIPIENT</span><span class=\"p\">}            </span><span class=\"s\">address&#64;domain.com</span><span class=\"p\">\n\n</span><span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Send email</span><span class=\"p\">\n    </span><span class=\"nf\">Send Email</span><span class=\"p\">         </span><span class=\"s\">recipients=</span><span class=\"p\">${</span><span class=\"nv\">RECIPIENT</span><span class=\"p\">}\n    ...                </span><span class=\"s\">subject=This is the subject</span><span class=\"p\">\n    ...                </span><span class=\"s\">body=This is the message body</span><span class=\"p\">\n    </span><span class=\"nf\">..</span><span class=\"p\">                 </span><span class=\"s\">attachments=approved.png</span>\n</pre>\n<p><strong>Python</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"kn\">from</span> <span class=\"nn\">Camunda.Outlook.Application</span> <span class=\"kn\">import</span> <span class=\"n\">Application</span><span class=\"w\">\n\n</span><span class=\"k\">def</span> <span class=\"nf\">send_email</span><span class=\"p\">():</span><span class=\"w\">\n</span>    <span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Application</span><span class=\"p\">()</span><span class=\"w\">\n</span>    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">open_application</span><span class=\"p\">()</span><span class=\"w\">\n</span>    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">send_email</span><span class=\"p\">(</span><span class=\"w\">\n</span>        <span class=\"n\">recipients</span><span class=\"o\">=</span><span class=\"s1\">'EMAILADDRESS_1, EMAILADDRESS_2'</span><span class=\"p\">,</span><span class=\"w\">\n</span>        <span class=\"n\">subject</span><span class=\"o\">=</span><span class=\"s1\">'email subject'</span><span class=\"p\">,</span><span class=\"w\">\n</span>        <span class=\"n\">body</span><span class=\"o\">=</span><span class=\"s1\">'email body message'</span><span class=\"p\">,</span><span class=\"w\">\n</span>        <span class=\"n\">attachments</span><span class=\"o\">=</span><span class=\"s1\">'../orders.csv'</span>\n</pre>\n<p>For more information, see: <a class=\"reference external\" href=\"https://docs.microsoft.com/en-us/previous-versions/office/developer/office-2007/bb219950(v=office.12\">https://docs.microsoft.com/en-us/previous-versions/office/developer/office-2007/bb219950(v=office.12</a>)</p>\n<p><strong>Caveats</strong></p>\n<p>This library works on a Windows operating system with UI enabled only, and you must\nensure that you open the app first with <tt class=\"docutils literal\">Open Application</tt> before running any\nother relevant keyword which requires to operate on an open app. The application is\nautomatically closed at the end of the task execution, so this can be changed by\nimporting the library with the <cite>autoexit=${False}</cite> setting.</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Settings ***</span><span class=\"p\">\n</span><span class=\"kn\">Library</span><span class=\"p\">     </span><span class=\"nn\">Camunda.Excel|Outlook|Word.Application</span><span class=\"p\">    </span><span class=\"s\">autoexit=</span><span class=\"p\">${</span><span class=\"nv\">False</span><span class=\"p\">}</span>\n</pre>\n<p>If you're running the Process by Control Room through a custom self-hosted Worker\nservice, then please make sure that you enable an RDP session by ticking &quot;Use\nDesktop Connection&quot; under the Step configuration.</p>\n<p>If you still encounter issues with opening a document, please ensure that file can\nbe opened first manually and dismiss any alert potentially blocking the process.</p>\n<p>Check the documentation below for more info:</p>\n<ul class=\"simple\">\n<li><a class=\"reference external\" href=\"https://robocorp.com/docs/control-room/unattended/worker-setups/windows-desktop\">https://robocorp.com/docs/control-room/unattended/worker-setups/windows-desktop</a></li>\n<li><a class=\"reference external\" href=\"https://robocorp.com/docs/faq/windows-server-2016\">https://robocorp.com/docs/faq/windows-server-2016</a></li>\n</ul>\n</div>\n",
  "version": "",
  "generated": "2025-02-03T13:00:04+00:00",
  "type": "LIBRARY",
  "scope": "GLOBAL",
  "docFormat": "HTML",
  "source": "/home/stamm/Develop/RPA/worker/runtime/.venv/lib/python3.10/site-packages/RPA/Outlook/Application.py",
  "lineno": 18,
  "tags": [],
  "inits": [
    {
      "name": "__init__",
      "args": [
        {
          "name": "autoexit",
          "type": {
            "name": "bool",
            "typedoc": "boolean",
            "nested": [],
            "union": false
          },
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "True",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "autoexit: bool = True"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Initialize the library instance by wrapping the COM Windows app.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param autoexit:</th><td class=\"field-body\">Automatically close the app when the process finishes.</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Initialize the library instance by wrapping the COM Windows app.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/runtime/.venv/lib/python3.10/site-packages/RPA/application.py",
      "lineno": 116
    }
  ],
  "keywords": [
    {
      "name": "Close Document",
      "args": [
        {
          "name": "save_changes",
          "type": {
            "name": "bool",
            "typedoc": "boolean",
            "nested": [],
            "union": false
          },
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "save_changes: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Close the active document and app (if open).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param save_changes:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Enable changes saving on quit. (<cite>False</cite> by default)</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Close the active document and app (if open).",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/runtime/.venv/lib/python3.10/site-packages/RPA/application.py",
      "lineno": 179
    },
    {
      "name": "Get Emails",
      "args": [
        {
          "name": "account_name",
          "type": {
            "name": "Union",
            "typedoc": null,
            "nested": [
              {
                "name": "str",
                "typedoc": "string",
                "nested": [],
                "union": false
              },
              {
                "name": "None",
                "typedoc": "None",
                "nested": [],
                "union": false
              }
            ],
            "union": true
          },
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "account_name: str | None = None"
        },
        {
          "name": "folder_name",
          "type": {
            "name": "Union",
            "typedoc": null,
            "nested": [
              {
                "name": "str",
                "typedoc": "string",
                "nested": [],
                "union": false
              },
              {
                "name": "None",
                "typedoc": "None",
                "nested": [],
                "union": false
              }
            ],
            "union": true
          },
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "folder_name: str | None = None"
        },
        {
          "name": "email_filter",
          "type": {
            "name": "Union",
            "typedoc": null,
            "nested": [
              {
                "name": "str",
                "typedoc": "string",
                "nested": [],
                "union": false
              },
              {
                "name": "None",
                "typedoc": "None",
                "nested": [],
                "union": false
              }
            ],
            "union": true
          },
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "email_filter: str | None = None"
        },
        {
          "name": "save_attachments",
          "type": {
            "name": "bool",
            "typedoc": "boolean",
            "nested": [],
            "union": false
          },
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "save_attachments: bool = False"
        },
        {
          "name": "attachment_folder",
          "type": {
            "name": "Union",
            "typedoc": null,
            "nested": [
              {
                "name": "str",
                "typedoc": "string",
                "nested": [],
                "union": false
              },
              {
                "name": "None",
                "typedoc": "None",
                "nested": [],
                "union": false
              }
            ],
            "union": true
          },
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "attachment_folder: str | None = None"
        },
        {
          "name": "sort",
          "type": {
            "name": "bool",
            "typedoc": "boolean",
            "nested": [],
            "union": false
          },
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "sort: bool = False"
        },
        {
          "name": "sort_key",
          "type": {
            "name": "Union",
            "typedoc": null,
            "nested": [
              {
                "name": "str",
                "typedoc": "string",
                "nested": [],
                "union": false
              },
              {
                "name": "None",
                "typedoc": "None",
                "nested": [],
                "union": false
              }
            ],
            "union": true
          },
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "sort_key: str | None = None"
        },
        {
          "name": "sort_descending",
          "type": {
            "name": "bool",
            "typedoc": "boolean",
            "nested": [],
            "union": false
          },
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "True",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "sort_descending: bool = True"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Get emails from a specified email folder. Can be used to save attachments.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param account_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">needs to be given if there are shared accounts in use,\ndefaults to None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param folder_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">target folder where to get emails from, default Inbox</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param email_filter:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">how to filter email, default no filter,\nie. all emails in folder</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param save_attachments:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">if attachments should be saved, defaults to False</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param attachment_folder:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">target folder where attachments are saved,\ndefaults to current directory</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param sort:</th><td class=\"field-body\">if emails should be sorted, defaults to False</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param sort_key:</th><td class=\"field-body\">needs to be given if emails are to be sorted</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param sort_descending:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">set to False for ascending sort, defaults to True</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">list of emails (list of dictionaries)</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${emails}=</span><span class=\"p\">  </span><span class=\"c\">Get Emails</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">email_folder=priority</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">email_filter=[Subject]='incoming order'</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">save_attachments=True</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">attachment_folder=%{ROBOT_ROOT}${/}attachments</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">sort=True</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">sort_key=Received</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">sort_descending=False</span>\n</pre>\n</div>\n",
      "shortdoc": "Get emails from a specified email folder. Can be used to save attachments.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/runtime/.venv/lib/python3.10/site-packages/RPA/Outlook/Application.py",
      "lineno": 279
    },
    {
      "name": "Mark Email As Read",
      "args": [
        {
          "name": "email",
          "type": {
            "name": "Any",
            "typedoc": "Any",
            "nested": [],
            "union": false
          },
          "types": [
            "Any"
          ],
          "typedocs": {
            "Any": "Any"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "email: Any"
        },
        {
          "name": "read",
          "type": {
            "name": "bool",
            "typedoc": "boolean",
            "nested": [],
            "union": false
          },
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "True",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "read: bool = True"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Mark email 'read' property. Can be used to mark email as unread.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param email:</th><td class=\"field-body\">target email</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param read:</th><td class=\"field-body\">True marks email as Read, False as Unread</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${emails}=</span><span class=\"p\">  </span><span class=\"c\">Get Emails</span><span class=\"p\">\n</span><span class=\"c\"># Mark all as read\nFOR</span><span class=\"p\">  </span><span class=\"c\">${email}</span><span class=\"p\">  </span><span class=\"c\">IN</span><span class=\"p\">  </span><span class=\"c\">&#64;{emails}</span><span class=\"p\">\n    </span><span class=\"c\">Mark Email As Read</span><span class=\"p\">  </span><span class=\"c\">${email}</span><span class=\"p\">\n</span><span class=\"c\">END</span><span class=\"p\">\n\n</span><span class=\"c\"># Mark all as unread\nFOR</span><span class=\"p\">  </span><span class=\"c\">${email}</span><span class=\"p\">  </span><span class=\"c\">IN</span><span class=\"p\">  </span><span class=\"c\">&#64;{emails}</span><span class=\"p\">\n    </span><span class=\"c\">Mark Email As Read</span><span class=\"p\">  </span><span class=\"c\">${email}</span><span class=\"p\">  </span><span class=\"c\">False</span><span class=\"p\">\n</span><span class=\"c\">END</span>\n</pre>\n</div>\n",
      "shortdoc": "Mark email 'read' property. Can be used to mark email as unread.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/runtime/.venv/lib/python3.10/site-packages/RPA/Outlook/Application.py",
      "lineno": 427
    },
    {
      "name": "Move Emails",
      "args": [
        {
          "name": "account_name",
          "type": {
            "name": "Union",
            "typedoc": null,
            "nested": [
              {
                "name": "str",
                "typedoc": "string",
                "nested": [],
                "union": false
              },
              {
                "name": "None",
                "typedoc": "None",
                "nested": [],
                "union": false
              }
            ],
            "union": true
          },
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "account_name: str | None = None"
        },
        {
          "name": "source_folder",
          "type": {
            "name": "Union",
            "typedoc": null,
            "nested": [
              {
                "name": "str",
                "typedoc": "string",
                "nested": [],
                "union": false
              },
              {
                "name": "None",
                "typedoc": "None",
                "nested": [],
                "union": false
              }
            ],
            "union": true
          },
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "source_folder: str | None = None"
        },
        {
          "name": "email_filter",
          "type": {
            "name": "Union",
            "typedoc": null,
            "nested": [
              {
                "name": "Any",
                "typedoc": "Any",
                "nested": [],
                "union": false
              },
              {
                "name": "None",
                "typedoc": "None",
                "nested": [],
                "union": false
              }
            ],
            "union": true
          },
          "types": [
            "Any",
            "None"
          ],
          "typedocs": {
            "Any": "Any",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "email_filter: Any | None = None"
        },
        {
          "name": "target_folder",
          "type": {
            "name": "Union",
            "typedoc": null,
            "nested": [
              {
                "name": "str",
                "typedoc": "string",
                "nested": [],
                "union": false
              },
              {
                "name": "None",
                "typedoc": "None",
                "nested": [],
                "union": false
              }
            ],
            "union": true
          },
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "target_folder: str | None = None"
        },
        {
          "name": "mark_as_read",
          "type": {
            "name": "bool",
            "typedoc": "boolean",
            "nested": [],
            "union": false
          },
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "True",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "mark_as_read: bool = True"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Move emails from source folder to target folder.</p>\n<p>Use of &quot;account_name&quot; is recommended if there are shared accounts in use.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param account_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">needs to be given if there are shared accounts in use,\ndefaults to None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param source_folder:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">folder where source emails exist</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param email_filter:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">how to filter email, default no filter,\nie. all emails in folder</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param target_folder:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">folder where emails are moved into</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param mark_as_read:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">mark emails as read after move, defaults to True</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">True if move operation was success, False if not</td>\n</tr>\n</tbody>\n</table>\n<p>Python example.</p>\n<pre class=\"code python literal-block\">\n<span class=\"n\">outlook</span> <span class=\"o\">=</span> <span class=\"n\">RPA</span><span class=\"o\">.</span><span class=\"n\">Outlook</span><span class=\"o\">.</span><span class=\"n\">Application</span><span class=\"p\">()</span><span class=\"w\">\n\n</span><span class=\"c1\"># moving messages from Inbox to target_folder</span><span class=\"w\">\n</span><span class=\"n\">outlook</span><span class=\"o\">.</span><span class=\"n\">move_emails</span><span class=\"p\">(</span><span class=\"w\">\n</span>    <span class=\"n\">target_folder</span><span class=\"o\">=</span><span class=\"s1\">'Processed Invoices'</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"n\">email_filter</span><span class=\"o\">=</span><span class=\"s2\">&quot;[Subject]='incoming invoice'&quot;</span><span class=\"w\">\n</span><span class=\"p\">)</span><span class=\"w\">\n\n</span><span class=\"c1\"># moving messages from source_folder to target_folder</span><span class=\"w\">\n</span><span class=\"n\">outlook</span><span class=\"o\">.</span><span class=\"n\">move_emails</span><span class=\"p\">(</span><span class=\"w\">\n</span>    <span class=\"n\">source_folder</span><span class=\"o\">=</span><span class=\"s1\">'Incoming Invoices'</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"n\">target_folder</span><span class=\"o\">=</span><span class=\"s1\">'Processed Invoices'</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"n\">email_filter</span><span class=\"o\">=</span><span class=\"s2\">&quot;[Subject]='incoming invoice'&quot;</span><span class=\"w\">\n</span><span class=\"p\">)</span><span class=\"w\">\n\n</span><span class=\"c1\"># move message objects from <span class=\"name\">get_emails</span> result</span><span class=\"w\">\n</span><span class=\"n\">emails</span> <span class=\"o\">=</span> <span class=\"n\">outlook</span><span class=\"o\">.</span><span class=\"n\">get_emails</span><span class=\"p\">(</span><span class=\"s2\">&quot;[Subject]='incoming invoice'&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"n\">outlook</span><span class=\"o\">.</span><span class=\"n\">move_emails</span><span class=\"p\">(</span><span class=\"w\">\n</span>    <span class=\"n\">target_folder</span><span class=\"o\">=</span><span class=\"s1\">'Processed Invoices'</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"n\">email_filter</span><span class=\"o\">=</span><span class=\"n\">emails</span><span class=\"w\">\n</span><span class=\"p\">)</span>\n</pre>\n<p>Robot Framework example.</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\"># moving messages from Inbox to target_folder\nMove Emails</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">target_folder=Processed Invoices</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">email_filter=[Subject]='incoming invoice'</span><span class=\"p\">\n\n</span><span class=\"c\"># moving messages from source_folder to target_folder\nMove Emails</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">source_folder=Incoming Invoices</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">target_folder=Processed Invoices</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">email_filter=[Subject]='incoming invoice'</span><span class=\"p\">\n\n</span><span class=\"c\"># moving message objects from <a href=\"#Get%20Emails\" class=\"name\">Get Emails</a> result\n${emails}=</span><span class=\"p\">    </span><span class=\"c\">Get Emails</span><span class=\"p\">    </span><span class=\"c\">[Subject]='incoming invoice'</span><span class=\"p\">\n</span><span class=\"c\">Move Emails</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">target_folder=Processed Invoices</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">email_filter=${emails}</span>\n</pre>\n</div>\n",
      "shortdoc": "Move emails from source folder to target folder.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/runtime/.venv/lib/python3.10/site-packages/RPA/Outlook/Application.py",
      "lineno": 456
    },
    {
      "name": "Open Application",
      "args": [
        {
          "name": "visible",
          "type": {
            "name": "bool",
            "typedoc": "boolean",
            "nested": [],
            "union": false
          },
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "visible: bool = False"
        },
        {
          "name": "display_alerts",
          "type": {
            "name": "bool",
            "typedoc": "boolean",
            "nested": [],
            "union": false
          },
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "display_alerts: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Open the application.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param visible:</th><td class=\"field-body\">Show the window on opening. (<cite>False</cite> by default)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param display_alerts:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Display alert popups. (<cite>False</cite> by default)</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Open the application.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/runtime/.venv/lib/python3.10/site-packages/RPA/application.py",
      "lineno": 140
    },
    {
      "name": "Quit Application",
      "args": [
        {
          "name": "save_changes",
          "type": {
            "name": "bool",
            "typedoc": "boolean",
            "nested": [],
            "union": false
          },
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "save_changes: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Quit the application.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param save_changes:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Enable to save changes on quit. (<cite>False</cite> by default)</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Quit the application.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/runtime/.venv/lib/python3.10/site-packages/RPA/application.py",
      "lineno": 204
    },
    {
      "name": "Save Email Attachments",
      "args": [
        {
          "name": "attachments",
          "type": {
            "name": "Any",
            "typedoc": "Any",
            "nested": [],
            "union": false
          },
          "types": [
            "Any"
          ],
          "typedocs": {
            "Any": "Any"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "attachments: Any"
        },
        {
          "name": "attachment_folder",
          "type": {
            "name": "str",
            "typedoc": "string",
            "nested": [],
            "union": false
          },
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "attachment_folder: str"
        },
        {
          "name": "overwrite",
          "type": {
            "name": "bool",
            "typedoc": "boolean",
            "nested": [],
            "union": false
          },
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "overwrite: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Save email attachments.</p>\n<p>Note. Keyword &quot;Get Emails&quot; can be also used to save attachments.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param attachments:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">all attachments from email or single attachment</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param attachment_folder:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">target folder where attachments are saved,\ndefaults to current directory</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param overwrite:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">overwrite existing file if True, defaults to False</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${emails} =</span><span class=\"p\">  </span><span class=\"c\">Get Emails</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">email_folder=priority</span><span class=\"p\">\n</span><span class=\"c\">FOR</span><span class=\"p\">  </span><span class=\"c\">${email}</span><span class=\"p\">  </span><span class=\"c\">IN</span><span class=\"p\">   </span><span class=\"c\">&#64;{emails}</span><span class=\"p\">\n    </span><span class=\"c\">FOR</span><span class=\"p\">  </span><span class=\"c\">${attachment}</span><span class=\"p\">  </span><span class=\"c\">IN</span><span class=\"p\">  </span><span class=\"c\">&#64;{email}[Attachments]</span><span class=\"p\">\n        </span><span class=\"c\">IF</span><span class=\"p\">  </span><span class=\"c\">${attachment}[size] &lt; 100000</span><span class=\"p\">   </span><span class=\"c\"># bytes\n</span><span class=\"p\">            </span><span class=\"c\">Save Email Attachments</span><span class=\"p\">\n            </span><span class=\"c\">...</span><span class=\"p\">  </span><span class=\"c\">${attachment}</span><span class=\"p\">\n            </span><span class=\"c\">...</span><span class=\"p\">  </span><span class=\"c\">${CURDIR}${/}attachments</span><span class=\"p\">\n        </span><span class=\"c\">ELSE IF</span><span class=\"p\">  </span><span class=\"c\">&quot;.pdf&quot; in &quot;${attachment}[filename]&quot;</span><span class=\"p\">\n            </span><span class=\"c\">Save Email Attachments</span><span class=\"p\">\n            </span><span class=\"c\">...</span><span class=\"p\">  </span><span class=\"c\">${attachment}</span><span class=\"p\">\n            </span><span class=\"c\">...</span><span class=\"p\">  </span><span class=\"c\">${CURDIR}${/}attachments${/}pdf</span><span class=\"p\">\n        </span><span class=\"c\">END</span><span class=\"p\">\n    </span><span class=\"c\">END</span><span class=\"p\">\n</span><span class=\"c\">END</span>\n</pre>\n</div>\n",
      "shortdoc": "Save email attachments.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/runtime/.venv/lib/python3.10/site-packages/RPA/Outlook/Application.py",
      "lineno": 384
    },
    {
      "name": "Send Email",
      "args": [
        {
          "name": "recipients",
          "type": {
            "name": "Union",
            "typedoc": null,
            "nested": [
              {
                "name": "str",
                "typedoc": "string",
                "nested": [],
                "union": false
              },
              {
                "name": "List",
                "typedoc": "list",
                "nested": [
                  {
                    "name": "str",
                    "typedoc": "string",
                    "nested": [],
                    "union": false
                  }
                ],
                "union": false
              }
            ],
            "union": true
          },
          "types": [
            "str",
            "List[str]"
          ],
          "typedocs": {
            "str": "string",
            "List": "list"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "recipients: str | List[str]"
        },
        {
          "name": "subject",
          "type": {
            "name": "str",
            "typedoc": "string",
            "nested": [],
            "union": false
          },
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "subject: str"
        },
        {
          "name": "body",
          "type": {
            "name": "str",
            "typedoc": "string",
            "nested": [],
            "union": false
          },
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "body: str"
        },
        {
          "name": "html_body",
          "type": {
            "name": "bool",
            "typedoc": "boolean",
            "nested": [],
            "union": false
          },
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "html_body: bool = False"
        },
        {
          "name": "attachments",
          "type": {
            "name": "Union",
            "typedoc": null,
            "nested": [
              {
                "name": "str",
                "typedoc": "string",
                "nested": [],
                "union": false
              },
              {
                "name": "List",
                "typedoc": "list",
                "nested": [
                  {
                    "name": "str",
                    "typedoc": "string",
                    "nested": [],
                    "union": false
                  }
                ],
                "union": false
              },
              {
                "name": "None",
                "typedoc": "None",
                "nested": [],
                "union": false
              }
            ],
            "union": true
          },
          "types": [
            "str",
            "List[str]",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "List": "list",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "attachments: str | List[str] | None = None"
        },
        {
          "name": "save_as_draft",
          "type": {
            "name": "bool",
            "typedoc": "boolean",
            "nested": [],
            "union": false
          },
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "save_as_draft: bool = False"
        },
        {
          "name": "cc_recipients",
          "type": {
            "name": "Union",
            "typedoc": null,
            "nested": [
              {
                "name": "str",
                "typedoc": "string",
                "nested": [],
                "union": false
              },
              {
                "name": "List",
                "typedoc": "list",
                "nested": [
                  {
                    "name": "str",
                    "typedoc": "string",
                    "nested": [],
                    "union": false
                  }
                ],
                "union": false
              },
              {
                "name": "None",
                "typedoc": "None",
                "nested": [],
                "union": false
              }
            ],
            "union": true
          },
          "types": [
            "str",
            "List[str]",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "List": "list",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "cc_recipients: str | List[str] | None = None"
        },
        {
          "name": "bcc_recipients",
          "type": {
            "name": "Union",
            "typedoc": null,
            "nested": [
              {
                "name": "str",
                "typedoc": "string",
                "nested": [],
                "union": false
              },
              {
                "name": "List",
                "typedoc": "list",
                "nested": [
                  {
                    "name": "str",
                    "typedoc": "string",
                    "nested": [],
                    "union": false
                  }
                ],
                "union": false
              },
              {
                "name": "None",
                "typedoc": "None",
                "nested": [],
                "union": false
              }
            ],
            "union": true
          },
          "types": [
            "str",
            "List[str]",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "List": "list",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "bcc_recipients: str | List[str] | None = None"
        },
        {
          "name": "reply_to",
          "type": {
            "name": "Union",
            "typedoc": null,
            "nested": [
              {
                "name": "str",
                "typedoc": "string",
                "nested": [],
                "union": false
              },
              {
                "name": "List",
                "typedoc": "list",
                "nested": [
                  {
                    "name": "str",
                    "typedoc": "string",
                    "nested": [],
                    "union": false
                  }
                ],
                "union": false
              },
              {
                "name": "None",
                "typedoc": "None",
                "nested": [],
                "union": false
              }
            ],
            "union": true
          },
          "types": [
            "str",
            "List[str]",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "List": "list",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "reply_to: str | List[str] | None = None"
        },
        {
          "name": "check_names",
          "type": {
            "name": "bool",
            "typedoc": "boolean",
            "nested": [],
            "union": false
          },
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "check_names: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Send email with Outlook</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param recipients:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">list of addresses</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param subject:</th><td class=\"field-body\">email subject</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param body:</th><td class=\"field-body\">email body</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param html_body:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">True if body contains HTML, defaults to False</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param attachments:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">list of filepaths to include in the email, defaults to []</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param save_as_draft:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">email is saved as draft when <cite>True</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param cc_recipients:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">list of addresses for CC field, default None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param bcc_recipients:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">list of addresses for BCC field, default None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param reply_to:</th><td class=\"field-body\">list of addresses for changing email's reply-to field,\ndefault None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param check_names:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">all recipients are checked if the email address is\nrecognized on <cite>True</cite>, default <cite>False</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\"><cite>True</cite> if there were no errors</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code python literal-block\">\n<span class=\"n\">library</span> <span class=\"o\">=</span> <span class=\"n\">Outlook</span><span class=\"p\">()</span><span class=\"w\">\n</span><span class=\"n\">library</span><span class=\"o\">.</span><span class=\"n\">open_application</span><span class=\"p\">()</span><span class=\"w\">\n</span><span class=\"n\">cc_recipients</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;recipient3&#64;domain.com&quot;</span><span class=\"p\">,</span><span class=\"s2\">&quot;recipient4&#64;domain.com&quot;</span><span class=\"p\">]</span><span class=\"w\">\n</span><span class=\"n\">library</span><span class=\"o\">.</span><span class=\"n\">send_email</span><span class=\"p\">(</span><span class=\"w\">\n</span>    <span class=\"n\">recipients</span><span class=\"o\">=</span><span class=\"s2\">&quot;recipient1&#64;domain.com&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"n\">cc_recipients</span><span class=\"o\">=</span><span class=\"n\">cc_recipients</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"n\">bcc_recipients</span><span class=\"o\">=</span><span class=\"s2\">&quot;recipient3&#64;domain.com;recipient4&#64;domain.com&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"n\">subject</span><span class=\"o\">=</span><span class=\"s2\">&quot;hello from Outlook&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"n\">body</span><span class=\"o\">=</span><span class=\"s2\">&quot;empty body&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"n\">attachments</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">curdir</span><span class=\"p\">,</span> <span class=\"s2\">&quot;example.xslx&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"p\">)</span>\n</pre>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${cc}=</span><span class=\"p\">  </span><span class=\"c\">Create List</span><span class=\"p\">   </span><span class=\"c\">recipient3&#64;domain.com</span><span class=\"p\">   </span><span class=\"c\">recipient4&#64;domain.com</span><span class=\"p\">\n</span><span class=\"c\">Send Email</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">recipients=recipient1&#64;domain.com</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">cc_repients=${cc}</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">bcc_repients=recipient5&#64;domain.com;recipient6&#64;domain.com</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">subject=hello from Outlook</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">body=empty body</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">attachments=${CURDIR}${/}example.xlsx</span>\n</pre>\n</div>\n",
      "shortdoc": "Send email with Outlook",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/runtime/.venv/lib/python3.10/site-packages/RPA/Outlook/Application.py",
      "lineno": 78
    },
    {
      "name": "Set Object Property",
      "args": [
        {
          "name": "object_instance",
          "type": null,
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "object_instance"
        },
        {
          "name": "property_name",
          "type": {
            "name": "str",
            "typedoc": "string",
            "nested": [],
            "union": false
          },
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "property_name: str"
        },
        {
          "name": "value",
          "type": {
            "name": "str",
            "typedoc": "string",
            "nested": [],
            "union": false
          },
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "value: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Set the property of any object.</p>\n<p>This is a utility keyword for Robot Framework syntax to set object\nproperty values.</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${new_value}=</span><span class=\"p\">    </span><span class=\"c\">Replace String</span><span class=\"p\">    </span><span class=\"c\">${value}</span><span class=\"p\">    </span><span class=\"c\">10.132.</span><span class=\"p\">    </span><span class=\"c\">5511.11.</span><span class=\"p\">\n</span><span class=\"c\">Set Object Property</span><span class=\"p\">    </span><span class=\"c\">${result}</span><span class=\"p\">    </span><span class=\"c\">Value</span><span class=\"p\">    </span><span class=\"c\">${new_value}</span>\n</pre>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param object_instance:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">object instance to set the property</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param property_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">property name to set</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param value:</th><td class=\"field-body\">value to set</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Set the property of any object.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/runtime/.venv/lib/python3.10/site-packages/RPA/application.py",
      "lineno": 219
    },
    {
      "name": "Wait For Email",
      "args": [
        {
          "name": "criterion",
          "type": {
            "name": "Union",
            "typedoc": null,
            "nested": [
              {
                "name": "str",
                "typedoc": "string",
                "nested": [],
                "union": false
              },
              {
                "name": "None",
                "typedoc": "None",
                "nested": [],
                "union": false
              }
            ],
            "union": true
          },
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "criterion: str | None = None"
        },
        {
          "name": "timeout",
          "type": {
            "name": "float",
            "typedoc": "float",
            "nested": [],
            "union": false
          },
          "types": [
            "float"
          ],
          "typedocs": {
            "float": "float"
          },
          "defaultValue": "5.0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "timeout: float = 5.0"
        },
        {
          "name": "interval",
          "type": {
            "name": "float",
            "typedoc": "float",
            "nested": [],
            "union": false
          },
          "types": [
            "float"
          ],
          "typedocs": {
            "float": "float"
          },
          "defaultValue": "1.0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "interval: float = 1.0"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Wait for email matching <cite>criterion</cite> to arrive into mailbox.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param criterion:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">email filter to wait for, defaults to &quot;&quot;</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param timeout:</th><td class=\"field-body\">total time in seconds to wait for email, defaults to 5.0</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param interval:</th><td class=\"field-body\">time in seconds for new check, defaults to 1.0</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">list of messages or False</td>\n</tr>\n</tbody>\n</table>\n<p>Possible wait criterias are: SUBJECT, SENDER and BODY</p>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Wait for Email</span><span class=\"p\">     </span><span class=\"c\">SUBJECT:rpa task calling</span><span class=\"p\">    </span><span class=\"c\">timeout=300</span><span class=\"p\">    </span><span class=\"c\">interval=10</span>\n</pre>\n</div>\n",
      "shortdoc": "Wait for email matching `criterion` to arrive into mailbox.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/runtime/.venv/lib/python3.10/site-packages/RPA/Outlook/Application.py",
      "lineno": 237
    }
  ],
  "dataTypes": {
    "enums": [],
    "typedDicts": []
  },
  "typedocs": [
    {
      "type": "Standard",
      "name": "Any",
      "doc": "<p>Any value is accepted. No conversion is done.</p>",
      "usages": [
        "Mark Email As Read",
        "Move Emails",
        "Save Email Attachments"
      ],
      "accepts": [
        "Any"
      ]
    },
    {
      "type": "Standard",
      "name": "boolean",
      "doc": "<p>Strings <code>TRUE</code>, <code>YES</code>, <code>ON</code> and <code>1</code> are converted to Boolean <code>True</code>, the empty string as well as strings <code>FALSE</code>, <code>NO</code>, <code>OFF</code> and <code>0</code> are converted to Boolean <code>False</code>, and the string <code>NONE</code> is converted to the Python <code>None</code> object. Other strings and other accepted values are passed as-is, allowing keywords to handle them specially if needed. All string comparisons are case-insensitive.</p>\n<p>Examples: <code>TRUE</code> (converted to <code>True</code>), <code>off</code> (converted to <code>False</code>), <code>example</code> (used as-is)</p>",
      "usages": [
        "__init__",
        "Close Document",
        "Get Emails",
        "Mark Email As Read",
        "Move Emails",
        "Open Application",
        "Quit Application",
        "Save Email Attachments",
        "Send Email"
      ],
      "accepts": [
        "string",
        "integer",
        "float",
        "None"
      ]
    },
    {
      "type": "Standard",
      "name": "float",
      "doc": "<p>Conversion is done using Python's <a href=\"https://docs.python.org/library/functions.html#float\">float</a> built-in function.</p>\n<p>Starting from RF 4.1, spaces and underscores can be used as visual separators for digit grouping purposes.</p>\n<p>Examples: <code>3.14</code>, <code>2.9979e8</code>, <code>10 000.000 01</code></p>",
      "usages": [
        "Wait For Email"
      ],
      "accepts": [
        "string",
        "Real"
      ]
    },
    {
      "type": "Standard",
      "name": "list",
      "doc": "<p>Strings must be Python <a href=\"https://docs.python.org/library/stdtypes.html#list\">list</a> literals. They are converted to actual lists using the <a href=\"https://docs.python.org/library/ast.html#ast.literal_eval\">ast.literal_eval</a> function. They can contain any values <code>ast.literal_eval</code> supports, including lists and other containers.</p>\n<p>If the type has nested types like <code>list[int]</code>, items are converted to those types automatically. This in new in Robot Framework 6.0.</p>\n<p>Examples: <code>['one', 'two']</code>, <code>[('one', 1), ('two', 2)]</code></p>",
      "usages": [
        "Send Email"
      ],
      "accepts": [
        "string",
        "Sequence"
      ]
    },
    {
      "type": "Standard",
      "name": "None",
      "doc": "<p>String <code>NONE</code> (case-insensitive) is converted to Python <code>None</code> object. Other values cause an error.</p>",
      "usages": [
        "Get Emails",
        "Move Emails",
        "Send Email",
        "Wait For Email"
      ],
      "accepts": [
        "string"
      ]
    },
    {
      "type": "Standard",
      "name": "string",
      "doc": "<p>All arguments are converted to Unicode strings.</p>",
      "usages": [
        "Get Emails",
        "Move Emails",
        "Save Email Attachments",
        "Send Email",
        "Set Object Property",
        "Wait For Email"
      ],
      "accepts": [
        "Any"
      ]
    }
  ]
}