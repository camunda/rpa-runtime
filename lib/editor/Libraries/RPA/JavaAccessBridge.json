{
  "specversion": 1,
  "name": "RPA.JavaAccessBridge",
  "doc": "<div class=\"document\">\n<p>Java application UI automation library using <a class=\"reference external\" href=\"https://www.oracle.com/java/technologies/javase/javase-tech-access-bridge.html\">Java Access Bridge technology</a>.</p>\n<p>The library utilizes <a class=\"reference external\" href=\"https://github.com/robocorp/java-access-bridge-wrapper\">java-access-bridge-wrapper</a> package to interact with\nJava UI. Currently only the 64-bit Windows OS is supported.</p>\n<p><strong>Inspecting elements</strong></p>\n<p>We have built an <a class=\"reference external\" href=\"https://github.com/robocorp/working-with-java\">Assistant</a> for working with Java application's element structure and <a class=\"reference external\" href=\"https://robocorp.com/docs/development-guide/locators#java-locators\">Java locators</a>.\nThe Assistant provides copy-paste-able locators for each element and also allows testing locators against\nselected application.</p>\n<p>If our tools fail to pick the locator from your target application, there is always the\n<a class=\"reference external\" href=\"https://github.com/google/access-bridge-explorer\">Access Bridge Explorer</a> from Google that enables you to see the raw view. Please note that\nAccess Bridge Explorer repository has been archived on July 27, 2022 and is no longer actively\nmaintained.</p>\n<p>The <a class=\"reference external\" href=\"https://accessibilityinsights.io/en/downloads/\">Accessibility Insights for Windows</a> can show element properties if application framework\nsupports Windows UI Automation (UIA), see more at <a class=\"reference external\" href=\"https://accessibilityinsights.io/docs/en/windows/reference/faq/#can-i-use-accessibility-insights-for-windows-on-a-windows-app-written-with-java\">using Accessibility Insights</a>. Then the recommended\nlibrary would be <a class=\"reference external\" href=\"https://robocorp.com/docs/libraries/rpa-framework/rpa-windows\">RPA.Windows</a> library.</p>\n<p><strong>Steps to enable</strong></p>\n<blockquote>\n<ol class=\"arabic simple\">\n<li>Enable the Java Access Bridge in Windows</li>\n<li>Set environment variable <cite>RC_JAVA_ACCESS_BRIDGE_DLL</cite> as an absolute path to <cite>WindowsAccessBridge-64.dll</cite>.\nIt is also possible to give DLL location as library initialization parameter <cite>access_bridge_path</cite>.</li>\n</ol>\n<pre class=\"code console literal-block\">\n<span class=\"go\">C:\\path\\to\\java\\bin\\jabswitch -enable\nset RC_JAVA_ACCESS_BRIDGE_DLL=C:\\path\\to\\Java\\bin\\WindowsAccessBridge-64.dll</span>\n</pre>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Settings ***</span><span class=\"p\">\n</span><span class=\"kn\">Library</span><span class=\"p\">   </span><span class=\"nn\">RPA.JavaAccessBridge</span><span class=\"p\">   </span><span class=\"s\">access_bridge_path=C:\\path\\to\\Java\\bin\\WindowsAccessBridge-64.dll</span>\n</pre>\n</blockquote>\n<p><strong>About Java wrapper callbacks and actions</strong></p>\n<p>There might be a compatibility issue with callbacks and actions on target Java application. Possible reasons:</p>\n<ul class=\"simple\">\n<li>target application is executed with 32-bit Java</li>\n<li>target application does not support callbacks and/or actions</li>\n</ul>\n<p>Workaround for this situation is to initialize <cite>JavaAccessBridge</cite> library with parameter <cite>ignore_callbacks=True</cite>.\nThen application's element information is still accessible and any actions on those elements can be performed\nwith <cite>RPA.Desktop</cite> library. Keep in mind that you can still manuall refresh an element with <tt class=\"docutils literal\">Refresh Element</tt>.</p>\n<p><em>Note.</em> There are still keywords, for example. <tt class=\"docutils literal\">Call Element Action</tt>, which will cause error if used in this\nsituation.</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Settings ***</span><span class=\"p\">\n</span><span class=\"kn\">Library</span><span class=\"p\">   </span><span class=\"nn\">RPA.JavaAccessBridge</span><span class=\"p\">   </span><span class=\"s\">ignore_callbacks=True</span>\n</pre>\n<p><strong>Controlling the Java window</strong></p>\n<p>Keyword for this purpose is <tt class=\"docutils literal\">Select Window</tt>. Window selection is based on the <tt class=\"docutils literal\">title</tt> parameter, which can be\ngiven as a regular expressions to match the correct window. The keyword brings the window into focus and initially\nreads window's element structure.</p>\n<p><strong>Locating elements</strong></p>\n<p>To automate actions on the Java application, the robot needs locations to various elements\nusing a feature called <a class=\"reference external\" href=\"https://robocorp.com/docs/development-guide/locators#java-locators\">Java locators</a>. Locator describes properties of an element.</p>\n<p>At the moment library contains basic level support for locators.</p>\n<p>The common locator types are <tt class=\"docutils literal\">name</tt> and <tt class=\"docutils literal\">role</tt>.</p>\n<p>To identify element with more than one property <cite>and</cite> can be used, for example:</p>\n<blockquote>\n<pre class=\"code console literal-block\">\n<span class=\"go\">role:push button and name:Clear</span>\n</pre>\n</blockquote>\n<p>To address element within parent element <cite>&gt;</cite> can be used, for example:</p>\n<blockquote>\n<pre class=\"code console literal-block\">\n<span class=\"go\">name:Find Purchase Orders &gt; name:NumberField</span>\n</pre>\n</blockquote>\n<p>Some keywords accept element as an parameter in place of locator.</p>\n<p>New locator type <cite>strict</cite> has been added in rpaframework==12.5.0. Currently\nproperty values of string type have been evaluated with <cite>startsWith</cite> which\ncan match several property values. With <cite>strict</cite> set in the locator string,\nall locator on the right side of this definition will be matched using\nstrict (equal matching), example:</p>\n<blockquote>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\"># without strict, name can be 'Type', 'Type1', 'Type of'...\nGet Elements</span><span class=\"p\">   </span><span class=\"c\">role:push button and name:Type</span><span class=\"p\">\n</span><span class=\"c\"># name must be equal to 'Type'\nGet Elements</span><span class=\"p\">  </span><span class=\"c\">role:push button and strict:True and name:Type</span>\n</pre>\n</blockquote>\n<p>Keyword <tt class=\"docutils literal\">Get Elements</tt> has extra parameter <tt class=\"docutils literal\">strict</tt>, which when set to\n<tt class=\"docutils literal\">True</tt> forces all locator value matches to be strict, example:</p>\n<blockquote>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\"># without strict, name can be 'Type', 'Type1', 'Type of'...\nGet Elements</span><span class=\"p\">  </span><span class=\"c\">role:push button and name:Type</span><span class=\"p\">\n</span><span class=\"c\"># name must be equal to 'Type' and role must be equal to 'text'\nGet Elements</span><span class=\"p\">  </span><span class=\"c\">role:text and name:Type</span><span class=\"p\">  </span><span class=\"c\">strict=True</span>\n</pre>\n</blockquote>\n<p><strong>About JavaElement object</strong></p>\n<p>The <tt class=\"docutils literal\">JavaElement</tt> was added in rpaframework==12.3.0 for easy access into\n<tt class=\"docutils literal\">ContextNode</tt> objects which have been returned by <tt class=\"docutils literal\">Get Elements</tt> keyword.</p>\n<p>Keyword <tt class=\"docutils literal\">Get Elements</tt> still returns <tt class=\"docutils literal\">ContextNode</tt> objects, but with parameter\n<tt class=\"docutils literal\">java_elements=True</tt> the keyword returns <tt class=\"docutils literal\">JavaElement</tt> objects instead (they\nstill contain reference to <tt class=\"docutils literal\">ContextNode</tt> object via <tt class=\"docutils literal\">node</tt> property, e.g.\nJavaObject.node).</p>\n<p>Properties and methods included in the JavaElement:</p>\n<ul class=\"simple\">\n<li>name: str</li>\n<li>role: str</li>\n<li>description: str</li>\n<li>states: list            # list presentation of states (string)</li>\n<li>ancestry: int           # you can set the maximum depth based on this</li>\n<li>checked: bool</li>\n<li>selected: bool</li>\n<li>visible: bool</li>\n<li>enabled: bool</li>\n<li>showing: bool</li>\n<li>focusable: bool</li>\n<li>states_string: str</li>\n<li>x: int                  # left coordinate of the element</li>\n<li>y: int                  # top coordinate of the element</li>\n<li>width: int</li>\n<li>height: int</li>\n<li>node: ContextNode       # original ContextNode</li>\n<li>row: int                # table row, -1 if element is not member of table</li>\n<li>col: int                # table column, -1 if element is not member of table</li>\n<li>text: str               # text content of the element</li>\n<li>column_count: int       # table column count</li>\n<li>visible_children: list  # visible children elements of this element</li>\n<li>visible_children_count: int</li>\n<li>index_in_parent: int    # position in the parent</li>\n<li>click()                 # method for clicking element center</li>\n<li>type_text()             # method for typing text into element (if possible)</li>\n</ul>\n<p><strong>Interacting with elements</strong></p>\n<p>By default application elements are interacted with Actions supported by the element.\nMost common example is <cite>click</cite> action supported by an button element.</p>\n<p>But because application and technology support for the actions might be limited, it is also\npossible to opt for interaction elements by their coordinates by giving keyword parameter\n<tt class=\"docutils literal\">action=False</tt> if parameter is available.</p>\n<p><strong>Examples</strong></p>\n<p><em>robotframework</em></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Settings ***</span><span class=\"p\">\n</span><span class=\"kn\">Library</span><span class=\"p\">   </span><span class=\"nn\">RPA.JavaAccessBridge</span><span class=\"p\">\n</span><span class=\"kn\">Library</span><span class=\"p\">   </span><span class=\"nn\">Process</span><span class=\"p\">\n\n</span><span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Write text into Swing application</span><span class=\"p\">\n    </span><span class=\"nf\">Start Process</span><span class=\"p\">    </span><span class=\"s\">java -jar BasicSwing.jar</span><span class=\"p\">\n    ...              </span><span class=\"s\">shell=</span><span class=\"p\">${</span><span class=\"nv\">TRUE</span><span class=\"p\">}\n    ...              </span><span class=\"s\">cwd=</span><span class=\"p\">${</span><span class=\"nv\">CURDIR</span><span class=\"p\">}\n    </span><span class=\"nf\">Select Window</span><span class=\"p\">    </span><span class=\"s\">Chat Frame</span><span class=\"p\">\n    </span><span class=\"nf\">Type Text</span><span class=\"p\">    </span><span class=\"s\">role:text</span><span class=\"p\">\n    ...          </span><span class=\"s\">text for the textarea</span><span class=\"p\">\n    </span><span class=\"nf\">Type Text</span><span class=\"p\">    </span><span class=\"s\">role:text</span><span class=\"p\">\n    ...          </span><span class=\"s\">text for the input field</span><span class=\"p\">\n    ...          </span><span class=\"s\">index=1</span><span class=\"p\">\n    ...          </span><span class=\"s\">clear=</span><span class=\"p\">${</span><span class=\"nv\">TRUE</span><span class=\"p\">}\n    </span><span class=\"nf\">Click Element</span><span class=\"p\">    </span><span class=\"s\">role:push button and name:Send</span>\n</pre>\n<p><em>Python</em></p>\n<pre class=\"code python literal-block\">\n<span class=\"kn\">from</span> <span class=\"nn\">RPA.JavaAccessBridge</span> <span class=\"kn\">import</span> <span class=\"n\">JavaAccessBridge</span><span class=\"w\">\n</span><span class=\"kn\">import</span> <span class=\"nn\">subprocess</span><span class=\"w\">\n\n</span><span class=\"n\">jab</span> <span class=\"o\">=</span> <span class=\"n\">JavaAccessBridge</span><span class=\"p\">()</span><span class=\"w\">\n\n</span><span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">Popen</span><span class=\"p\">(</span><span class=\"w\">\n</span>    <span class=\"p\">[</span><span class=\"s2\">&quot;java&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;-jar&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BasicSwing.jar&quot;</span><span class=\"p\">],</span><span class=\"w\">\n</span>    <span class=\"n\">shell</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"n\">cwd</span><span class=\"o\">=</span><span class=\"s2\">&quot;.&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"n\">close_fds</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"w\">\n</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"n\">jab</span><span class=\"o\">.</span><span class=\"n\">select_window</span><span class=\"p\">(</span><span class=\"s2\">&quot;Chat Frame&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"n\">jab</span><span class=\"o\">.</span><span class=\"n\">type_text</span><span class=\"p\">(</span><span class=\"w\">\n</span>    <span class=\"s2\">&quot;role:text&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"s2\">&quot;text for the textarea&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"n\">enter</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"w\">\n</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"n\">jab</span><span class=\"o\">.</span><span class=\"n\">type_text</span><span class=\"p\">(</span><span class=\"w\">\n</span>    <span class=\"s2\">&quot;role:text&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"s2\">&quot;text for the input field&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"n\">index</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"n\">clear</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"w\">\n</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"n\">jab</span><span class=\"o\">.</span><span class=\"n\">click_element</span><span class=\"p\">(</span><span class=\"s2\">&quot;role:push button and name:Send&quot;</span><span class=\"p\">)</span>\n</pre>\n</div>\n",
  "version": "",
  "generated": "2024-10-30 10:10:05",
  "type": "LIBRARY",
  "scope": "GLOBAL",
  "docFormat": "HTML",
  "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
  "lineno": 214,
  "tags": [],
  "inits": [
    {
      "name": "__init__",
      "args": [
        {
          "name": "ignore_callbacks",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "ignore_callbacks: bool = False"
        },
        {
          "name": "access_bridge_path",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "access_bridge_path: str | None = None"
        },
        {
          "name": "max_depth",
          "types": [
            "int",
            "None"
          ],
          "typedocs": {
            "int": "integer",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "max_depth: int | None = None"
        },
        {
          "name": "disable_refresh",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "disable_refresh: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>If library is not given <tt class=\"docutils literal\">access_bridge_path</tt> then path needs to be given\nby the environment variable <tt class=\"docutils literal\">RC_JAVA_ACCESS_BRIDGE_DLL</tt>.</p>\n<p>The <tt class=\"docutils literal\">ignore_callbacks</tt> can be set to <tt class=\"docutils literal\">True</tt> if the target application\ndoes not support Java callback feature (property value change listeners).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param ignore_callbacks:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">set to <cite>True</cite> if application does not support\nJava callback feature, defaults to False</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param access_bridge_path:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">absolute filepath to the DLL, defaults to None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param max_depth:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">limit the height of the element tree (how deep the search\ngoes); by default every element is taken into account and the tree of\nelements is built until reaching the last leaf (which might be\ntime-consuming)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param disable_refresh:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">disables automatic app/element refresh when this is\n<cite>True</cite> (saves time); by default, automatic app/element refreshes are\ntriggered with keywords like <tt class=\"docutils literal\">Read Table</tt>, <tt class=\"docutils literal\">Wait Until Element Exists</tt></td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "If library is not given ``access_bridge_path`` then path needs to be given by the environment variable ``RC_JAVA_ACCESS_BRIDGE_DLL``.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
      "lineno": 439
    }
  ],
  "keywords": [
    {
      "name": "Application Refresh",
      "args": [],
      "doc": "<div class=\"document\">\n<p>Refresh application element tree</p>\n<p>Might be required action after application element\nstructure changes after window refresh.</p>\n</div>\n",
      "shortdoc": "Refresh application element tree",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
      "lineno": 965
    },
    {
      "name": "Call Element Action",
      "args": [
        {
          "name": "locator",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "locator: str"
        },
        {
          "name": "action",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "action: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Call element action</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param locator:</th><td class=\"field-body\">target element</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param action:</th><td class=\"field-body\">name of the element action to call</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Call element action",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
      "lineno": 899
    },
    {
      "name": "Click Coordinates",
      "args": [
        {
          "name": "x",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "x: int"
        },
        {
          "name": "y",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "y: int"
        },
        {
          "name": "click_type",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "click",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "click_type: str = click"
        },
        {
          "name": "delay",
          "types": [
            "float"
          ],
          "typedocs": {
            "float": "float"
          },
          "defaultValue": "0.5",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "delay: float = 0.5"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Keyword to mouse click at specific coordinates.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param x:</th><td class=\"field-body\">horizontal coordinate</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param y:</th><td class=\"field-body\">vertical coordinates</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param click_type:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">default <cite>click</cite>, see <cite>RPA.Desktop</cite> for different\nclick options</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param delay:</th><td class=\"field-body\">how much in seconds to delay after click, defaults to 0.5</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Keyword to mouse click at specific coordinates.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
      "lineno": 927
    },
    {
      "name": "Click Element",
      "args": [
        {
          "name": "locator",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "locator: str"
        },
        {
          "name": "index",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": "0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "index: int = 0"
        },
        {
          "name": "action",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "True",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "action: bool = True"
        },
        {
          "name": "timeout",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": "10",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "timeout: int = 10"
        },
        {
          "name": "click_type",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "click",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "click_type: str = click"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Click element</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param locator:</th><td class=\"field-body\">element to click</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param index:</th><td class=\"field-body\">target element index if multiple are returned</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param action:</th><td class=\"field-body\">call click action on element (default), or use coordinates</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param timeout:</th><td class=\"field-body\">timeout in seconds to find element</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param click_type:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">default <cite>click</cite>, see <cite>RPA.Desktop</cite> for different\nclick options</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Click element",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
      "lineno": 861
    },
    {
      "name": "Click Push Button",
      "args": [
        {
          "name": "button_name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "button_name: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Click element of role <cite>push button</cite></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param button_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">name of the button to click</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Click element of role `push button`",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
      "lineno": 1051
    },
    {
      "name": "Close Java Window",
      "args": [],
      "doc": "<div class=\"document\">\n<p>Close active Java window which has been accessed\nvia <tt class=\"docutils literal\">`Select Window</tt> keyword.</p>\n</div>\n",
      "shortdoc": "Close active Java window which has been accessed via ```Select Window`` keyword.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
      "lineno": 1137
    },
    {
      "name": "Get Element Actions",
      "args": [
        {
          "name": "locator",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "locator: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Get list of possible element actions</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param locator:</th><td class=\"field-body\">target element</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Get list of possible element actions",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
      "lineno": 817
    },
    {
      "name": "Get Element Text",
      "args": [
        {
          "name": "locator",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "locator: str"
        },
        {
          "name": "index",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": "0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "index: int = 0"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Get element text</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param locator:</th><td class=\"field-body\">target element</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param index:</th><td class=\"field-body\">target element index if multiple are returned</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Get element text",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
      "lineno": 778
    },
    {
      "name": "Get Elements",
      "args": [
        {
          "name": "locator",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "locator: str"
        },
        {
          "name": "java_elements",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "java_elements: bool = False"
        },
        {
          "name": "strict",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "strict: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Get matching elements</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param locator:</th><td class=\"field-body\">elements to get</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param java_elements:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">if True will return elements as <tt class=\"docutils literal\">JavaElement</tt>\non False will return Java ContextNodes</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param strict:</th><td class=\"field-body\">on True all locator matches need to match exactly, on\nFalse will be using startsWith matching on non-integer properties</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">list of ContextNodes or JavaElements</td>\n</tr>\n</tbody>\n</table>\n<p>Python example.</p>\n<pre class=\"code python literal-block\">\n<span class=\"n\">elements</span> <span class=\"o\">=</span> <span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">get_elements</span><span class=\"p\">(</span><span class=\"s2\">&quot;name:common&quot;</span><span class=\"p\">,</span> <span class=\"n\">java_elements</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"k\">for</span> <span class=\"n\">e</span> <span class=\"ow\">in</span> <span class=\"n\">elements</span><span class=\"p\">:</span><span class=\"w\">\n</span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"k\">if</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"k\">else</span> <span class=\"s2\">&quot;EMPTY&quot;</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">visible</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">y</span><span class=\"p\">)</span><span class=\"w\">\n</span>    <span class=\"k\">if</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">role</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;check box&quot;</span><span class=\"p\">:</span><span class=\"w\">\n</span>        <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">click</span><span class=\"p\">()</span><span class=\"w\">\n</span>    <span class=\"k\">else</span><span class=\"p\">:</span><span class=\"w\">\n</span>        <span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">type_text</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"s2\">&quot;new content&quot;</span><span class=\"p\">,</span> <span class=\"n\">clear</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span><span class=\"w\">\n\n</span><span class=\"c1\"># following does NOT return anything because search is strict</span><span class=\"w\">\n</span><span class=\"c1\"># and there are no 'push butto' role</span><span class=\"w\">\n</span><span class=\"n\">elements</span> <span class=\"o\">=</span> <span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">get_elements</span><span class=\"p\">(</span><span class=\"s2\">&quot;role:push butto&quot;</span><span class=\"p\">,</span> <span class=\"n\">strict</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Robotframework  example.</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${elements}=</span><span class=\"p\">    </span><span class=\"c\">Get Elements</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">role:push button and name:Send</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">java_elements=True</span><span class=\"p\">\n</span><span class=\"c\">Evaluate</span><span class=\"p\">   </span><span class=\"c\">$elements[0].click()</span><span class=\"p\">\n</span><span class=\"c\">Click Element</span><span class=\"p\">    </span><span class=\"c\">${elements}[0]</span><span class=\"p\">    </span><span class=\"c\">action=False</span><span class=\"p\">\n</span><span class=\"c\">Type Text</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">${elements}[0]</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">moretext</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">clear=True</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">typing=False</span>\n</pre>\n</div>\n",
      "shortdoc": "Get matching elements",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
      "lineno": 664
    },
    {
      "name": "Get Locator Tree",
      "args": [],
      "doc": "<div class=\"document\">\n<p>Return Java locator tree as list of objects.</p>\n<p>Mostly relevant object properties are:</p>\n<blockquote>\n<ul class=\"simple\">\n<li>ancestry</li>\n<li>role</li>\n<li>name</li>\n<li>description</li>\n<li>indexInParent</li>\n</ul>\n</blockquote>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">list of objects</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Return Java locator tree as list of objects.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
      "lineno": 1001
    },
    {
      "name": "Get Version Info",
      "args": [],
      "doc": "<div class=\"document\">\n<p>Get Java Access Bridge version information</p>\n</div>\n",
      "shortdoc": "Get Java Access Bridge version information",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
      "lineno": 1065
    },
    {
      "name": "Highlight Element",
      "args": [
        {
          "name": "locator",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "locator: str"
        },
        {
          "name": "index",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": "0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "index: int = 0"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Highlight an element</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param locator:</th><td class=\"field-body\">element to highlight</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param index:</th><td class=\"field-body\">target element index if multiple are returned</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Highlight an element",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
      "lineno": 836
    },
    {
      "name": "List Java Windows",
      "args": [],
      "doc": "<div class=\"document\">\n<p>List all available Java windows.</p>\n<p><cite>JavaWindow</cite> object contains following properties:</p>\n<blockquote>\n<ul class=\"simple\">\n<li>Java process id (pid)</li>\n<li>Java window title</li>\n<li>Java window handle (hwnd)</li>\n</ul>\n</blockquote>\n<p>The pid and title can be used to get control of the\nJava process by.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">list of <cite>JavaWindow</cite> objects</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Python example.</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"n\">window_list</span> <span class=\"o\">=</span> <span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">list_java_windows</span><span class=\"p\">()</span><span class=\"w\">\n</span><span class=\"c1\"># By looping window list</span><span class=\"w\">\n</span><span class=\"k\">for</span> <span class=\"n\">window</span> <span class=\"ow\">in</span> <span class=\"n\">window_list</span><span class=\"p\">:</span><span class=\"w\">\n</span>    <span class=\"k\">if</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;my java window title&quot;</span><span class=\"p\">:</span><span class=\"w\">\n</span>        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Java window found&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span>        <span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">select_window_by_pid</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">pid</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"c1\"># Directly accessing</span><span class=\"w\">\n</span><span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">window_list</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\">\n</span>    <span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">select_window_by_pid</span><span class=\"p\">(</span><span class=\"n\">window_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">pid</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Robot Framework example.</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">&#64;{window_list}=</span><span class=\"p\">    </span><span class=\"c\">List Java Windows</span><span class=\"p\">\n</span><span class=\"c\">FOR</span><span class=\"p\">    </span><span class=\"c\">${window}</span><span class=\"p\">    </span><span class=\"c\">IN</span><span class=\"p\">    </span><span class=\"c\">&#64;{window_list}</span><span class=\"p\">\n    </span><span class=\"c\">IF</span><span class=\"p\">    </span><span class=\"c\">&quot;${window.title}&quot; == &quot;my java window title&quot;</span><span class=\"p\">\n        </span><span class=\"c\">Select Window By PID</span><span class=\"p\">    </span><span class=\"c\">${window.pid}</span><span class=\"p\">\n    </span><span class=\"c\">END</span><span class=\"p\">\n</span><span class=\"c\">END</span><span class=\"p\">\n</span><span class=\"c\">IF</span><span class=\"p\">    </span><span class=\"c\">len($window_list)==1</span><span class=\"p\">\n    </span><span class=\"c\">Select Window By PID</span><span class=\"p\">    </span><span class=\"c\">${window_list[0].pid}</span><span class=\"p\">\n</span><span class=\"c\">END</span>\n</pre>\n</div>\n",
      "shortdoc": "List all available Java windows.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
      "lineno": 1146
    },
    {
      "name": "Press Keys",
      "args": [
        {
          "name": "keys",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_POSITIONAL",
          "required": false,
          "repr": "*keys"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Press multiple keys down simultaneously</p>\n<p>See <a class=\"reference external\" href=\"https://rpaframework.org/libraries/desktop/index.html\">Desktop</a> library documentation for supported keys</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param keys:</th><td class=\"field-body\">keys to press</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Press multiple keys down simultaneously",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
      "lineno": 974
    },
    {
      "name": "Print Element Tree",
      "args": [
        {
          "name": "filename",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "filename: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Print current element into log and possibly into a file</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param filename:</th><td class=\"field-body\">filepath to save element tree</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">element tree</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Print current element into log and possibly into a file",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
      "lineno": 986
    },
    {
      "name": "Print Locator Tree",
      "args": [
        {
          "name": "filename",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "filename: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Print current Java window locator list into log and possibly\ninto a file.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param filename:</th><td class=\"field-body\">filepath to save locator tree</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">locator tree</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Print current Java window locator list into log and possibly into a file.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
      "lineno": 1017
    },
    {
      "name": "Read Table",
      "args": [
        {
          "name": "locator",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "locator: str"
        },
        {
          "name": "visible_only",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "True",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "visible_only: bool = True"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Return Java table as list of lists (rows containing columns).</p>\n<p>Each cell element is represented by <tt class=\"docutils literal\">JavaElement</tt> class.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param locator:</th><td class=\"field-body\">locator to match element with type of table</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param visible_only:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">return all the children when this is <cite>False</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">list of lists</td>\n</tr>\n</tbody>\n</table>\n<p>Example.</p>\n<pre class=\"code python literal-block\">\n<span class=\"n\">table</span> <span class=\"o\">=</span> <span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">read_table</span><span class=\"p\">(</span><span class=\"n\">locator_table</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">table</span><span class=\"p\">:</span><span class=\"w\">\n</span>    <span class=\"k\">for</span> <span class=\"n\">cell</span> <span class=\"ow\">in</span> <span class=\"n\">row</span><span class=\"p\">:</span><span class=\"w\">\n</span>        <span class=\"k\">if</span> <span class=\"n\">cell</span><span class=\"o\">.</span><span class=\"n\">role</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;check box&quot;</span><span class=\"p\">:</span><span class=\"w\">\n</span>            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">cell</span><span class=\"o\">.</span><span class=\"n\">row</span><span class=\"p\">,</span> <span class=\"n\">cell</span><span class=\"o\">.</span><span class=\"n\">col</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">cell</span><span class=\"o\">.</span><span class=\"n\">checked</span><span class=\"p\">))</span><span class=\"w\">\n</span>        <span class=\"k\">else</span><span class=\"p\">:</span><span class=\"w\">\n</span>            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">cell</span><span class=\"o\">.</span><span class=\"n\">row</span><span class=\"p\">,</span> <span class=\"n\">cell</span><span class=\"o\">.</span><span class=\"n\">col</span><span class=\"p\">,</span> <span class=\"n\">cell</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n</pre>\n</div>\n",
      "shortdoc": "Return Java table as list of lists (rows containing columns).",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
      "lineno": 1078
    },
    {
      "name": "Refresh Element",
      "args": [
        {
          "name": "locator",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "locator: str"
        },
        {
          "name": "index",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": "0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "index: int = 0"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Refresh an element alone.</p>\n<p>This will ensure the latest data is available in the targeted element, thus\ngaining speed when dealing with big apps that won't require an entire global\nrefresh. The obtained Java element is returned.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param locator:</th><td class=\"field-body\">element to refresh</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param index:</th><td class=\"field-body\">target element index if multiple are returned</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">returns:</th><td class=\"field-body\">the Java element found by the passed locator</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Refresh an element alone.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
      "lineno": 1318
    },
    {
      "name": "Select Menu",
      "args": [
        {
          "name": "menu",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "menu: str"
        },
        {
          "name": "menuitem",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "menuitem: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Select menu by clicking menu elements</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param menu:</th><td class=\"field-body\">name of the menu</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param menuitem:</th><td class=\"field-body\">name of the menu item</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Select menu by clicking menu elements",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
      "lineno": 1041
    },
    {
      "name": "Select Window",
      "args": [
        {
          "name": "title",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "title: str"
        },
        {
          "name": "bring_foreground",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "True",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "bring_foreground: bool = True"
        },
        {
          "name": "timeout",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": "30",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "timeout: int = 30"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Selects Java application window as target for the automation using\nJava window title.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param title:</th><td class=\"field-body\">application window title</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param bring_foreground:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">if application is brought to foreground or not</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param timeout:</th><td class=\"field-body\">selection timeout</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Selects Java application window as target for the automation using Java window title.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
      "lineno": 540
    },
    {
      "name": "Select Window By Pid",
      "args": [
        {
          "name": "pid",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "pid: int"
        },
        {
          "name": "bring_foreground",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "True",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "bring_foreground: bool = True"
        },
        {
          "name": "timeout",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": "30",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "timeout: int = 30"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Selects Java application window as target for the automation using\nJava process ID (pid).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param pid:</th><td class=\"field-body\">application process id</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param bring_foreground:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">if application is brought to foreground or not</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param timeout:</th><td class=\"field-body\">selection timeout</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Selects Java application window as target for the automation using Java process ID (pid).",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
      "lineno": 1209
    },
    {
      "name": "Select Window By Title",
      "args": [
        {
          "name": "title",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "title: str"
        },
        {
          "name": "bring_foreground",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "True",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "bring_foreground: bool = True"
        },
        {
          "name": "timeout",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": "30",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "timeout: int = 30"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Selects Java application window as target for the automation using\nJava window title.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param title:</th><td class=\"field-body\">application window title</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param bring_foreground:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">if application is brought to foreground or not</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param timeout:</th><td class=\"field-body\">selection timeout</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Selects Java application window as target for the automation using Java window title.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
      "lineno": 1194
    },
    {
      "name": "Set Display Scale Factor",
      "args": [
        {
          "name": "factor",
          "types": [
            "float"
          ],
          "typedocs": {
            "float": "float"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "factor: float"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Override library display scale factor.</p>\n<p>Keyword returns previous value.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param factor:</th><td class=\"field-body\">value for the new display scale factor</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">previous display scale factor value</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Override library display scale factor.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
      "lineno": 527
    },
    {
      "name": "Set Mouse Position",
      "args": [
        {
          "name": "element",
          "types": [
            "object"
          ],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "element: object"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Set mouse position to element center</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param element:</th><td class=\"field-body\">target element</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Set mouse position to element center",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
      "lineno": 612
    },
    {
      "name": "Shutdown Jab",
      "args": [],
      "doc": "<div class=\"document\">\n<p>Call Java Access Bridge process shutdown</p>\n</div>\n",
      "shortdoc": "Call Java Access Bridge process shutdown",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
      "lineno": 1060
    },
    {
      "name": "Toggle Drop Down",
      "args": [
        {
          "name": "locator",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "locator: str"
        },
        {
          "name": "index",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": "0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "index: int = 0"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Toggle dropdown action on element</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param locator:</th><td class=\"field-body\">element locator</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param index:</th><td class=\"field-body\">target element index if multiple are returned</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Toggle dropdown action on element",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
      "lineno": 943
    },
    {
      "name": "Type Text",
      "args": [
        {
          "name": "locator",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "locator: str"
        },
        {
          "name": "text",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "text: str"
        },
        {
          "name": "index",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": "0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "index: int = 0"
        },
        {
          "name": "clear",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "clear: bool = False"
        },
        {
          "name": "enter",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "enter: bool = False"
        },
        {
          "name": "typing",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "True",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "typing: bool = True"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Type text into coordinates defined by locator</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param locator:</th><td class=\"field-body\">target element</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param text:</th><td class=\"field-body\">text to write</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param index:</th><td class=\"field-body\">target element if multiple are returned</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param clear:</th><td class=\"field-body\">should element be cleared before typing</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param enter:</th><td class=\"field-body\">should enter key be pressed after typing</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param typing:</th><td class=\"field-body\">if True (default) will use Desktop().type_text()\nif False will use Desktop().press_keys()</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Type text into coordinates defined by locator",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
      "lineno": 624
    },
    {
      "name": "Wait Until Element Exists",
      "args": [
        {
          "name": "locator",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "locator: str"
        },
        {
          "name": "timeout",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": "10",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "timeout: int = 10"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Wait until element(s) matching the locator are found within\ngiven timeout or raises <tt class=\"docutils literal\">ElementNotFound</tt> exception.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param locator:</th><td class=\"field-body\">locator to match element</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param timeout:</th><td class=\"field-body\">timeout in seconds to find element</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">element(s) if found</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Wait until element(s) matching the locator are found within given timeout or raises ``ElementNotFound`` exception.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
      "lineno": 1291
    },
    {
      "name": "Wait Until Element Is Focused",
      "args": [
        {
          "name": "locator",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "locator: str"
        },
        {
          "name": "index",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": "0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "index: int = 0"
        },
        {
          "name": "timeout",
          "types": [
            "float"
          ],
          "typedocs": {
            "float": "float"
          },
          "defaultValue": "0.5",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "timeout: float = 0.5"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Wait until element is focused</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param locator:</th><td class=\"field-body\">target element</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param index:</th><td class=\"field-body\">target element index if multiple are returned</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param timeout:</th><td class=\"field-body\">timeout in seconds to wait, default 0.5 seconds</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Wait until element is focused",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
      "lineno": 757
    },
    {
      "name": "Wait Until Element Text Contains",
      "args": [
        {
          "name": "locator",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "locator: str"
        },
        {
          "name": "text",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "text: str"
        },
        {
          "name": "index",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": "0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "index: int = 0"
        },
        {
          "name": "timeout",
          "types": [
            "float"
          ],
          "typedocs": {
            "float": "float"
          },
          "defaultValue": "0.5",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "timeout: float = 0.5"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Wait until element text contains expected text</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param locator:</th><td class=\"field-body\">target element</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param text:</th><td class=\"field-body\">element text should contain this</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param index:</th><td class=\"field-body\">target element index if multiple are returned</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param timeout:</th><td class=\"field-body\">timeout in seconds to wait, default 0.5 seconds</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Wait until element text contains expected text",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
      "lineno": 715
    },
    {
      "name": "Wait Until Element Text Equals",
      "args": [
        {
          "name": "locator",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "locator: str"
        },
        {
          "name": "text",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "text: str"
        },
        {
          "name": "index",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": "0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "index: int = 0"
        },
        {
          "name": "timeout",
          "types": [
            "float"
          ],
          "typedocs": {
            "float": "float"
          },
          "defaultValue": "0.5",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "timeout: float = 0.5"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Wait until element text equals expected text</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param locator:</th><td class=\"field-body\">target element</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param text:</th><td class=\"field-body\">element text should match this</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param index:</th><td class=\"field-body\">target element index if multiple are returned</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param timeout:</th><td class=\"field-body\">timeout in seconds to wait, default 0.5 seconds</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Wait until element text equals expected text",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/JavaAccessBridge.py",
      "lineno": 736
    }
  ],
  "dataTypes": {
    "enums": [],
    "typedDicts": []
  },
  "typedocs": [
    {
      "type": "Standard",
      "name": "boolean",
      "doc": "<p>Strings <code>TRUE</code>, <code>YES</code>, <code>ON</code> and <code>1</code> are converted to Boolean <code>True</code>, the empty string as well as strings <code>FALSE</code>, <code>NO</code>, <code>OFF</code> and <code>0</code> are converted to Boolean <code>False</code>, and the string <code>NONE</code> is converted to the Python <code>None</code> object. Other strings and other accepted values are passed as-is, allowing keywords to handle them specially if needed. All string comparisons are case-insensitive.</p>\n<p>Examples: <code>TRUE</code> (converted to <code>True</code>), <code>off</code> (converted to <code>False</code>), <code>example</code> (used as-is)</p>",
      "usages": [
        "__init__",
        "Click Element",
        "Get Elements",
        "Read Table",
        "Select Window",
        "Select Window By Pid",
        "Select Window By Title",
        "Type Text"
      ],
      "accepts": [
        "string",
        "integer",
        "float",
        "None"
      ]
    },
    {
      "type": "Standard",
      "name": "float",
      "doc": "<p>Conversion is done using Python's <a href=\"https://docs.python.org/library/functions.html#float\">float</a> built-in function.</p>\n<p>Starting from RF 4.1, spaces and underscores can be used as visual separators for digit grouping purposes.</p>\n<p>Examples: <code>3.14</code>, <code>2.9979e8</code>, <code>10 000.000 01</code></p>",
      "usages": [
        "Click Coordinates",
        "Set Display Scale Factor",
        "Wait Until Element Is Focused",
        "Wait Until Element Text Contains",
        "Wait Until Element Text Equals"
      ],
      "accepts": [
        "string",
        "Real"
      ]
    },
    {
      "type": "Standard",
      "name": "integer",
      "doc": "<p>Conversion is done using Python's <a href=\"https://docs.python.org/library/functions.html#int\">int</a> built-in function. Floating point numbers are accepted only if they can be represented as integers exactly. For example, <code>1.0</code> is accepted and <code>1.1</code> is not.</p>\n<p>Starting from RF 4.1, it is possible to use hexadecimal, octal and binary numbers by prefixing values with <code>0x</code>, <code>0o</code> and <code>0b</code>, respectively.</p>\n<p>Starting from RF 4.1, spaces and underscores can be used as visual separators for digit grouping purposes.</p>\n<p>Examples: <code>42</code>, <code>-1</code>, <code>0b1010</code>, <code>10 000 000</code>, <code>0xBAD_C0FFEE</code></p>",
      "usages": [
        "__init__",
        "Click Coordinates",
        "Click Element",
        "Get Element Text",
        "Highlight Element",
        "Refresh Element",
        "Select Window",
        "Select Window By Pid",
        "Select Window By Title",
        "Toggle Drop Down",
        "Type Text",
        "Wait Until Element Exists",
        "Wait Until Element Is Focused",
        "Wait Until Element Text Contains",
        "Wait Until Element Text Equals"
      ],
      "accepts": [
        "string",
        "float"
      ]
    },
    {
      "type": "Standard",
      "name": "None",
      "doc": "<p>String <code>NONE</code> (case-insensitive) is converted to Python <code>None</code> object. Other values cause an error.</p>",
      "usages": [
        "__init__",
        "Print Element Tree",
        "Print Locator Tree"
      ],
      "accepts": [
        "string"
      ]
    },
    {
      "type": "Standard",
      "name": "string",
      "doc": "<p>All arguments are converted to Unicode strings.</p>",
      "usages": [
        "__init__",
        "Call Element Action",
        "Click Coordinates",
        "Click Element",
        "Click Push Button",
        "Get Element Actions",
        "Get Element Text",
        "Get Elements",
        "Highlight Element",
        "Print Element Tree",
        "Print Locator Tree",
        "Read Table",
        "Refresh Element",
        "Select Menu",
        "Select Window",
        "Select Window By Title",
        "Toggle Drop Down",
        "Type Text",
        "Wait Until Element Exists",
        "Wait Until Element Is Focused",
        "Wait Until Element Text Contains",
        "Wait Until Element Text Equals"
      ],
      "accepts": [
        "Any"
      ]
    }
  ]
}