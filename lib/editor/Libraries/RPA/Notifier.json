{
  "specversion": 1,
  "name": "RPA.Notifier",
  "doc": "<div class=\"document\">\n<p><cite>Notifier</cite> is a library interfacting with different notification providers.</p>\n<p><strong>Supported providers</strong></p>\n<ul class=\"simple\">\n<li>email</li>\n<li>gmail</li>\n<li>pushover</li>\n<li>slack</li>\n<li>telegram</li>\n<li>twilio</li>\n</ul>\n<p><strong>Providers not supported yet via specific keywords</strong></p>\n<ul class=\"simple\">\n<li>gitter</li>\n<li>join</li>\n<li>mailgun</li>\n<li>pagerduty</li>\n<li>popcornnotify</li>\n<li>pushbullet</li>\n<li>simplepush</li>\n<li>statuspage</li>\n<li>zulip</li>\n</ul>\n<p>There is a keyword <tt class=\"docutils literal\">Generic Notify</tt> which can be used\nto call above services, for example.</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Generic Notify</span><span class=\"p\">\n    </span><span class=\"c\">provider_name=gitter</span><span class=\"p\">\n    </span><span class=\"c\">message=Hello from Robot</span><span class=\"p\">\n    </span><span class=\"c\">token=TOKEN</span><span class=\"p\">\n    </span><span class=\"c\">room_id=ID_OF_THE_GITTER_ROOM</span>\n</pre>\n<p>Parameters for different providers can be read from the\n<strong>Notifiers</strong> documents (link below).</p>\n<p>Read more at <a class=\"reference external\" href=\"https://notifiers.readthedocs.io/en/latest/\">https://notifiers.readthedocs.io/en/latest/</a></p>\n<p><strong>About kwargs</strong></p>\n<p>The <cite>**kwargs</cite> is a term for any extra named parameters, which\ncan be included in the same way as already named arguments,\ne.g. <tt class=\"docutils literal\">Notify Email</tt> could be called with <cite>subject=my email subject</cite>\nwhich will be passed through <cite>**kwargs</cite>.</p>\n<p>Notifier documentation contains information about all possible\narguments that different providers support.</p>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">&amp;{account}=</span><span class=\"p\">    </span><span class=\"c\">Create Dictionary</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">host=smtp.office365.com</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">username=ACCOUNT_USERNAME</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">password=ACCOUNT_PASSWORD</span><span class=\"p\">\n</span><span class=\"c\">Notify Email</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">to=RECIPIENT_EMAIL</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">from_=SENDER_ADDRESS</span><span class=\"p\">            </span><span class=\"c\"># passed via kwargs\n...</span><span class=\"p\">    </span><span class=\"c\">subject=Hello from the Robot</span><span class=\"p\">    </span><span class=\"c\"># passed via kwargs\n...</span><span class=\"p\">    </span><span class=\"c\">message=Hello from the Robot</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">&amp;{account}</span><span class=\"p\">                      </span><span class=\"c\"># passed via kwargs</span>\n</pre>\n<pre class=\"code python literal-block\">\n<span class=\"n\">notifier</span> <span class=\"o\">=</span> <span class=\"n\">Notifier</span><span class=\"p\">()</span><span class=\"w\">\n</span><span class=\"n\">account</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"w\">\n</span>    <span class=\"s2\">&quot;host&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;smtp.office365.com&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"s2\">&quot;username&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;EMAIL_USERNAME&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"s2\">&quot;password&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;EMAIL_PASSWORD&quot;</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"n\">notifier</span><span class=\"o\">.</span><span class=\"n\">email_notify</span><span class=\"p\">(</span><span class=\"w\">\n</span>    <span class=\"n\">to</span><span class=\"o\">=</span><span class=\"s2\">&quot;RECIPIENT_EMAIL&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"n\">from_</span><span class=\"o\">=</span><span class=\"s2\">&quot;SENDER_EMAIL&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"n\">subject</span><span class=\"o\">=</span><span class=\"s2\">&quot;Hello from the Python Robot&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"s2\">&quot;Hello from the Python RObot&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"o\">**</span><span class=\"n\">account</span><span class=\"w\">\n</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Examples</strong></p>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Settings ***</span><span class=\"p\">\n</span><span class=\"kn\">Library</span><span class=\"p\">  </span><span class=\"nn\">RPA.Notifier</span><span class=\"p\">\n\n</span><span class=\"gh\">*** Variables ***</span><span class=\"p\">\n${</span><span class=\"nv\">SLACK_WEBHOOK</span><span class=\"p\">}   </span><span class=\"s\">https://hooks.slack.com/services/WEBHOOKDETAILS</span><span class=\"p\">\n${</span><span class=\"nv\">CHANNEL</span><span class=\"p\">}         </span><span class=\"s\">notification-channel</span><span class=\"p\">\n\n</span><span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Lets notify</span><span class=\"p\">\n   </span><span class=\"nf\">Notify Slack</span><span class=\"p\">   </span><span class=\"s\">message from robot</span><span class=\"p\">  </span><span class=\"s\">channel=</span><span class=\"p\">${</span><span class=\"nv\">CHANNEL</span><span class=\"p\">}  </span><span class=\"s\">webhook_url=</span><span class=\"p\">${</span><span class=\"nv\">SLACK_WEBHOOK</span><span class=\"p\">}</span>\n</pre>\n<p><strong>Python</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"kn\">from</span> <span class=\"nn\">RPA.Notifier</span> <span class=\"kn\">import</span> <span class=\"n\">Notifier</span><span class=\"w\">\n\n</span><span class=\"n\">library</span> <span class=\"o\">=</span> <span class=\"n\">Notifier</span><span class=\"p\">()</span><span class=\"w\">\n\n</span><span class=\"n\">slack_attachments</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"w\">\n</span>   <span class=\"p\">{</span><span class=\"w\">\n</span>      <span class=\"s2\">&quot;title&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;attachment 1&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span>      <span class=\"s2\">&quot;fallback&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;liverpool logo&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span>      <span class=\"s2\">&quot;image_url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;https://upload.wikimedia.org/wikipedia/fi/thumb/c/cd/Liverpool_FC-n_logo.svg/1200px-Liverpool_FC-n_logo.svg.png&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span>   <span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"p\">]</span><span class=\"w\">\n\n</span><span class=\"n\">library</span><span class=\"o\">.</span><span class=\"n\">notify_slack</span><span class=\"p\">(</span><span class=\"w\">\n</span>   <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"s1\">'message for the Slack'</span><span class=\"p\">,</span><span class=\"w\">\n</span>   <span class=\"n\">channel</span><span class=\"o\">=</span><span class=\"s2\">&quot;notification-channel&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span>   <span class=\"n\">webhook_url</span><span class=\"o\">=</span><span class=\"n\">slack_webhook_url</span><span class=\"p\">,</span><span class=\"w\">\n</span>   <span class=\"n\">attachments</span><span class=\"o\">=</span><span class=\"n\">slack_attachments</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"p\">)</span>\n</pre>\n</div>\n",
  "version": "",
  "generated": "2024-10-30 10:10:06",
  "type": "LIBRARY",
  "scope": "GLOBAL",
  "docFormat": "HTML",
  "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Notifier.py",
  "lineno": 5,
  "tags": [],
  "inits": [],
  "keywords": [
    {
      "name": "Generic Notify",
      "args": [
        {
          "name": "provider_name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "provider_name: str"
        },
        {
          "name": "kwargs",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_NAMED",
          "required": false,
          "repr": "**kwargs"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Generic keyword to use with any notifier provider.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param provider_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">name of the notifier service</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param kwargs:</th><td class=\"field-body\">see library documentation</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">True if notification was successful, False if not</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Generic keyword to use with any notifier provider.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Notifier.py",
      "lineno": 314
    },
    {
      "name": "Notify Email",
      "args": [
        {
          "name": "message",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "message: str | None = None"
        },
        {
          "name": "to",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "to: str | None = None"
        },
        {
          "name": "username",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "username: str | None = None"
        },
        {
          "name": "password",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "password: str | None = None"
        },
        {
          "name": "host",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "host: str | None = None"
        },
        {
          "name": "port",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": "587",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "port: int = 587"
        },
        {
          "name": "tls",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "True",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "tls: bool = True"
        },
        {
          "name": "kwargs",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_NAMED",
          "required": false,
          "repr": "**kwargs"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Notify using email provider</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param message:</th><td class=\"field-body\">notification message</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param to:</th><td class=\"field-body\">target of email message</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param username:</th><td class=\"field-body\">email account username</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param password:</th><td class=\"field-body\">email account password</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param host:</th><td class=\"field-body\">email SMTP host name</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param port:</th><td class=\"field-body\">email SMTP host port number</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param tls:</th><td class=\"field-body\">should TLS be used (default True)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param kwargs:</th><td class=\"field-body\">see library documentation</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">True if notification was successful, False if not</td>\n</tr>\n</tbody>\n</table>\n<p>Example.</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\"># Notify with Outlook account\nNotify Email</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">   </span><span class=\"c\">message=Message from the Robot</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">   </span><span class=\"c\">to=RECIPIENT_EMAIL_ADDRESS</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">   </span><span class=\"c\">username=OUTLOOK_USERNAME</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">   </span><span class=\"c\">password=OUTLOOK_PASSWORD</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">   </span><span class=\"c\">host=smtp.office365.com</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">   </span><span class=\"c\">subject=Subject of the Message</span>\n</pre>\n</div>\n",
      "shortdoc": "Notify using email provider",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Notifier.py",
      "lineno": 233
    },
    {
      "name": "Notify Gmail",
      "args": [
        {
          "name": "message",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "message: str | None = None"
        },
        {
          "name": "to",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "to: str | None = None"
        },
        {
          "name": "username",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "username: str | None = None"
        },
        {
          "name": "password",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "password: str | None = None"
        },
        {
          "name": "kwargs",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_NAMED",
          "required": false,
          "repr": "**kwargs"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Notify using Gmail provider</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param message:</th><td class=\"field-body\">notification message</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param to:</th><td class=\"field-body\">target of email message</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param username:</th><td class=\"field-body\">GMail account username</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param password:</th><td class=\"field-body\">GMail account password</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param kwargs:</th><td class=\"field-body\">see library documentation</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">True if notification was successful, False if not</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Notify using Gmail provider",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Notifier.py",
      "lineno": 205
    },
    {
      "name": "Notify Pushover",
      "args": [
        {
          "name": "message",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "message: str | None = None"
        },
        {
          "name": "user",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "user: str | None = None"
        },
        {
          "name": "token",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "token: str | None = None"
        },
        {
          "name": "kwargs",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_NAMED",
          "required": false,
          "repr": "**kwargs"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Notify using Pushover provider</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param message:</th><td class=\"field-body\">notification message</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param user:</th><td class=\"field-body\">target user for the notification</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param token:</th><td class=\"field-body\">service token</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param kwargs:</th><td class=\"field-body\">see library documentation</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">True if notification was successful, False if not</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Notify using Pushover provider",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Notifier.py",
      "lineno": 134
    },
    {
      "name": "Notify Slack",
      "args": [
        {
          "name": "message",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "message: str | None = None"
        },
        {
          "name": "channel",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "channel: str | None = None"
        },
        {
          "name": "webhook_url",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "webhook_url: str | None = None"
        },
        {
          "name": "kwargs",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_NAMED",
          "required": false,
          "repr": "**kwargs"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Notify using Slack provider</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param message:</th><td class=\"field-body\">notification message</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param channel:</th><td class=\"field-body\">target channel for the notification</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param webhook_url:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Slack webhook url</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param kwargs:</th><td class=\"field-body\">see library documentation</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">True if notification was successful, False if not</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Notify using Slack provider",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Notifier.py",
      "lineno": 155
    },
    {
      "name": "Notify Telegram",
      "args": [
        {
          "name": "message",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "message: str | None = None"
        },
        {
          "name": "chat_id",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "chat_id: str | None = None"
        },
        {
          "name": "token",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "token: str | None = None"
        },
        {
          "name": "kwargs",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_NAMED",
          "required": false,
          "repr": "**kwargs"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Notify using Telegram provider</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param message:</th><td class=\"field-body\">notification message</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param chat_id:</th><td class=\"field-body\">target chat id for the notification</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param token:</th><td class=\"field-body\">service token</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param kwargs:</th><td class=\"field-body\">see library documentation</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">True if notification was successful, False if not</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Notify using Telegram provider",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Notifier.py",
      "lineno": 180
    },
    {
      "name": "Notify Twilio",
      "args": [
        {
          "name": "message",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "message: str | None = None"
        },
        {
          "name": "number_from",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "number_from: str | None = None"
        },
        {
          "name": "number_to",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "number_to: str | None = None"
        },
        {
          "name": "account_sid",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "account_sid: str | None = None"
        },
        {
          "name": "token",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "token: str | None = None"
        },
        {
          "name": "kwargs",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_NAMED",
          "required": false,
          "repr": "**kwargs"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Notify using Twilio provider</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param message:</th><td class=\"field-body\">notification message</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param number_from:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">number where the message comes from</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param number_to:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">number where the messages goes to</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param account_sid:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Twilio account SID</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param token:</th><td class=\"field-body\">Twilio account token</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param kwargs:</th><td class=\"field-body\">see library documentation</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">True if notification was successful, False if not</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Notify using Twilio provider",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Notifier.py",
      "lineno": 283
    }
  ],
  "dataTypes": {
    "enums": [],
    "typedDicts": []
  },
  "typedocs": [
    {
      "type": "Standard",
      "name": "boolean",
      "doc": "<p>Strings <code>TRUE</code>, <code>YES</code>, <code>ON</code> and <code>1</code> are converted to Boolean <code>True</code>, the empty string as well as strings <code>FALSE</code>, <code>NO</code>, <code>OFF</code> and <code>0</code> are converted to Boolean <code>False</code>, and the string <code>NONE</code> is converted to the Python <code>None</code> object. Other strings and other accepted values are passed as-is, allowing keywords to handle them specially if needed. All string comparisons are case-insensitive.</p>\n<p>Examples: <code>TRUE</code> (converted to <code>True</code>), <code>off</code> (converted to <code>False</code>), <code>example</code> (used as-is)</p>",
      "usages": [
        "Notify Email"
      ],
      "accepts": [
        "string",
        "integer",
        "float",
        "None"
      ]
    },
    {
      "type": "Standard",
      "name": "integer",
      "doc": "<p>Conversion is done using Python's <a href=\"https://docs.python.org/library/functions.html#int\">int</a> built-in function. Floating point numbers are accepted only if they can be represented as integers exactly. For example, <code>1.0</code> is accepted and <code>1.1</code> is not.</p>\n<p>Starting from RF 4.1, it is possible to use hexadecimal, octal and binary numbers by prefixing values with <code>0x</code>, <code>0o</code> and <code>0b</code>, respectively.</p>\n<p>Starting from RF 4.1, spaces and underscores can be used as visual separators for digit grouping purposes.</p>\n<p>Examples: <code>42</code>, <code>-1</code>, <code>0b1010</code>, <code>10 000 000</code>, <code>0xBAD_C0FFEE</code></p>",
      "usages": [
        "Notify Email"
      ],
      "accepts": [
        "string",
        "float"
      ]
    },
    {
      "type": "Standard",
      "name": "None",
      "doc": "<p>String <code>NONE</code> (case-insensitive) is converted to Python <code>None</code> object. Other values cause an error.</p>",
      "usages": [
        "Notify Email",
        "Notify Gmail",
        "Notify Pushover",
        "Notify Slack",
        "Notify Telegram",
        "Notify Twilio"
      ],
      "accepts": [
        "string"
      ]
    },
    {
      "type": "Standard",
      "name": "string",
      "doc": "<p>All arguments are converted to Unicode strings.</p>",
      "usages": [
        "Generic Notify",
        "Notify Email",
        "Notify Gmail",
        "Notify Pushover",
        "Notify Slack",
        "Notify Telegram",
        "Notify Twilio"
      ],
      "accepts": [
        "Any"
      ]
    }
  ]
}