{
  "specversion": 1,
  "name": "RPA.Salesforce",
  "doc": "<div class=\"document\">\n<p><cite>Salesforce</cite> is a library for accessing Salesforce using REST API.\nThe library extends <a class=\"reference external\" href=\"https://github.com/simple-salesforce/simple-salesforce\">simple-salesforce library</a>.</p>\n<p>More information available at <a class=\"reference external\" href=\"https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/intro_what_is_rest_api.htm\">Salesforce REST API Developer Guide</a>.</p>\n<p><strong>Dataloader</strong></p>\n<p>The keyword <cite>execute_dataloader_import</cite> can be used to mimic\n<a class=\"reference external\" href=\"https://developer.salesforce.com/docs/atlas.en-us.dataLoader.meta/dataLoader/data_loader.htm\">Salesforce Dataloader</a> import behaviour.</p>\n<p><cite>input_object</cite> can be given in different formats. Below is an example where\ninput is in <cite>RPA.Table</cite> format in <strong>method a</strong> and list format in <strong>method b</strong>.</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Settings ***</span><span class=\"p\">\n</span><span class=\"kn\">Library</span><span class=\"p\">     </span><span class=\"nn\">RPA.Salesforce</span><span class=\"p\">\n</span><span class=\"kn\">Library</span><span class=\"p\">     </span><span class=\"nn\">RPA.Database</span><span class=\"p\">\n</span><span class=\"kn\">Task Setup</span><span class=\"p\">  </span><span class=\"nf\">Authorize Salesforce</span><span class=\"p\">\n\n</span><span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"c\"># Method a\n</span><span class=\"p\">${</span><span class=\"nv\">orders</span><span class=\"p\">}</span><span class=\"gu\">=</span><span class=\"p\">        </span><span class=\"nf\">Database Query Result As Table</span><span class=\"p\">\n</span><span class=\"gu\">...</span><span class=\"p\">               </span><span class=\"nf\">SELECT * FROM incoming_orders</span><span class=\"p\">\n${</span><span class=\"nv\">status</span><span class=\"p\">}</span><span class=\"gu\">=</span><span class=\"p\">        </span><span class=\"nf\">Execute Dataloader Insert</span><span class=\"p\">\n</span><span class=\"gu\">...</span><span class=\"p\">               ${</span><span class=\"nv\">orders</span><span class=\"p\">}  ${</span><span class=\"nv\">mapping_dict</span><span class=\"p\">}  </span><span class=\"nf\">Tilaus__c</span><span class=\"p\">\n</span><span class=\"c\"># Method b\n</span><span class=\"p\">${</span><span class=\"nv\">status</span><span class=\"p\">}</span><span class=\"gu\">=</span><span class=\"p\">        </span><span class=\"nf\">Execute Dataloader Insert</span><span class=\"p\">\n</span><span class=\"gu\">...</span><span class=\"p\">               ${</span><span class=\"nv\">WORKDIR</span><span class=\"p\">}${</span><span class=\"nv\">/</span><span class=\"p\">}</span><span class=\"nf\">orders.json</span><span class=\"p\">  ${</span><span class=\"nv\">mapping_dict</span><span class=\"p\">}  </span><span class=\"s\">Tilaus__c</span>\n</pre>\n<p>Example file <strong>orders.json</strong></p>\n<pre class=\"code json literal-block\">\n<span class=\"p\">[</span><span class=\"w\">\n    </span><span class=\"p\">{</span><span class=\"w\">\n        </span><span class=\"nt\">&quot;asiakas&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;0015I000002jBLIQA2&quot;</span><span class=\"w\">\n    </span><span class=\"p\">},</span><span class=\"w\">\n    </span><span class=\"p\">{</span><span class=\"w\">\n        </span><span class=\"nt\">&quot;asiakas&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;0015I000002jBLDQA2&quot;</span><span class=\"w\">\n    </span><span class=\"p\">},</span><span class=\"w\">\n</span><span class=\"p\">]</span>\n</pre>\n<p><cite>mapping_object</cite> describes how the input data fields are mapped into Salesforce\nobject attributes. In the example, the mapping defines that <cite>asiakas</cite> attribute in the\ninput object is mapped into <cite>Tilaaja__c</cite> attribute of <cite>Tilaus__c</cite> custom Salesforce object.</p>\n<pre class=\"code json literal-block\">\n<span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nt\">&quot;Tilaus__c&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n        </span><span class=\"nt\">&quot;asiakas&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;Tilaaja__c&quot;</span><span class=\"w\">\n    </span><span class=\"p\">},</span><span class=\"w\">\n</span><span class=\"p\">}</span>\n</pre>\n<p>Object type could be, for example, <cite>Tilaus__c</cite>.</p>\n<p><strong>Salesforce object operations</strong></p>\n<p>Following operations can be used to manage Salesforce objects:</p>\n<ul class=\"simple\">\n<li>Get Salesforce Object By Id</li>\n<li>Create Salesforce Object</li>\n<li>Update Salesforce Object</li>\n<li>Upsert Salesforce Object</li>\n<li>Delete Salesforce Object</li>\n<li>Get Salesforce Object Metadata</li>\n<li>Describe Salesforce Object</li>\n</ul>\n<p>There are two ways to set the Salesforce domain. You can set the domain at time of\nlibrary import or using the <cite>Set Domain</cite> keyword.</p>\n<p>There are several ways to declare a domain at time of library import:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Settings ***</span><span class=\"p\">\n</span><span class=\"kn\">Library</span><span class=\"p\">     </span><span class=\"nn\">RPA.Salesforce</span><span class=\"p\">    </span><span class=\"s\">sandbox=</span><span class=\"p\">${</span><span class=\"nv\">TRUE</span><span class=\"p\">}</span>\n</pre>\n<p>Or using the domain to your Salesforce My domain:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Settings ***</span><span class=\"p\">\n</span><span class=\"kn\">Library</span><span class=\"p\">     </span><span class=\"nn\">RPA.Salesforce</span><span class=\"p\">    </span><span class=\"s\">domain=&quot;robocorp&quot;</span>\n</pre>\n<p>The domain can also be set using the keyword <cite>Set Domain</cite>:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Settings ***</span><span class=\"p\">\n</span><span class=\"kn\">Library</span><span class=\"p\">     </span><span class=\"nn\">RPA.Salesforce</span><span class=\"p\">\n\n</span><span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"c\"># Sets the domain for a sandbox environment\n</span><span class=\"gu\">Set Domain</span><span class=\"p\">    </span><span class=\"nf\">sandbox</span><span class=\"p\">\n\n</span><span class=\"c\"># Sets the domain to a Salseforce My domain\n</span><span class=\"gu\">Set Domain</span><span class=\"p\">    </span><span class=\"nf\">robocorp</span><span class=\"p\">\n\n</span><span class=\"c\"># Sets to domain to the default of 'login'\n</span><span class=\"gu\">Set Domain</span>\n</pre>\n<p><strong>Examples</strong></p>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Settings ***</span><span class=\"p\">\n</span><span class=\"kn\">Library</span><span class=\"p\">     </span><span class=\"nn\">RPA.Salesforce</span><span class=\"p\">\n</span><span class=\"kn\">Task Setup</span><span class=\"p\">  </span><span class=\"nf\">Authorize Salesforce</span><span class=\"p\">\n\n</span><span class=\"gh\">*** Variables ***</span><span class=\"p\">\n${</span><span class=\"nv\">ACCOUNT_NOKIA</span><span class=\"p\">}    </span><span class=\"s\">0015I000002jBLDQA2</span><span class=\"p\">\n\n</span><span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Change account details in Salesforce</span><span class=\"p\">\n    &amp;{</span><span class=\"nv\">account</span><span class=\"p\">}=      </span><span class=\"nf\">Get Salesforce Object By Id</span><span class=\"p\">   </span><span class=\"s\">Account</span><span class=\"p\">  ${</span><span class=\"nv\">ACCOUNT_NOKIA</span><span class=\"p\">}\n    &amp;{</span><span class=\"nv\">update_obj</span><span class=\"p\">}=   </span><span class=\"nf\">Create Dictionary</span><span class=\"p\">   </span><span class=\"s\">Name=Nokia Ltd</span><span class=\"p\">  </span><span class=\"s\">BillingStreet=Nokia bulevard 1</span><span class=\"p\">\n    ${</span><span class=\"nv\">result</span><span class=\"p\">}=       </span><span class=\"nf\">Update Salesforce Object</span><span class=\"p\">  </span><span class=\"s\">Account</span><span class=\"p\">  ${</span><span class=\"nv\">ACCOUNT_NOKIA</span><span class=\"p\">}  ${</span><span class=\"nv\">update_obj</span><span class=\"p\">}\n\n</span><span class=\"gh\">*** Keywords ***</span><span class=\"p\">\n</span><span class=\"gu\">Authorize Salesforce</span><span class=\"p\">\n    ${</span><span class=\"nv\">secrets</span><span class=\"p\">}=     </span><span class=\"nf\">Get Secret</span><span class=\"p\">   </span><span class=\"s\">salesforce</span><span class=\"p\">\n    </span><span class=\"nf\">Auth With Token</span><span class=\"p\">\n    ...        </span><span class=\"s\">username=</span><span class=\"p\">${</span><span class=\"nv\">secrets</span><span class=\"p\">}</span><span class=\"s\">[USERNAME]</span><span class=\"p\">\n    ...        </span><span class=\"s\">password=</span><span class=\"p\">${</span><span class=\"nv\">secrets</span><span class=\"p\">}</span><span class=\"s\">[PASSWORD]</span><span class=\"p\">\n    ...        </span><span class=\"s\">api_token=</span><span class=\"p\">${</span><span class=\"nv\">secrets</span><span class=\"p\">}</span><span class=\"s\">[API_TOKEN]</span>\n</pre>\n<p><strong>Python</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"kn\">import</span> <span class=\"nn\">pprint</span><span class=\"w\">\n</span><span class=\"kn\">from</span> <span class=\"nn\">RPA.Salesforce</span> <span class=\"kn\">import</span> <span class=\"n\">Salesforce</span><span class=\"w\">\n</span><span class=\"kn\">from</span> <span class=\"nn\">RPA.Robocorp.Vault</span> <span class=\"kn\">import</span> <span class=\"n\">FileSecrets</span><span class=\"w\">\n\n</span><span class=\"n\">pp</span> <span class=\"o\">=</span> <span class=\"n\">pprint</span><span class=\"o\">.</span><span class=\"n\">PrettyPrinter</span><span class=\"p\">(</span><span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"n\">filesecrets</span> <span class=\"o\">=</span> <span class=\"n\">FileSecrets</span><span class=\"p\">(</span><span class=\"s2\">&quot;secrets.json&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"n\">secrets</span> <span class=\"o\">=</span> <span class=\"n\">filesecrets</span><span class=\"o\">.</span><span class=\"n\">get_secret</span><span class=\"p\">(</span><span class=\"s2\">&quot;salesforce&quot;</span><span class=\"p\">)</span><span class=\"w\">\n\n</span><span class=\"n\">sf</span> <span class=\"o\">=</span> <span class=\"n\">Salesforce</span><span class=\"p\">()</span><span class=\"w\">\n</span><span class=\"n\">sf</span><span class=\"o\">.</span><span class=\"n\">auth_with_token</span><span class=\"p\">(</span><span class=\"w\">\n</span>    <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"n\">secrets</span><span class=\"p\">[</span><span class=\"s2\">&quot;USERNAME&quot;</span><span class=\"p\">],</span><span class=\"w\">\n</span>    <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"n\">secrets</span><span class=\"p\">[</span><span class=\"s2\">&quot;PASSWORD&quot;</span><span class=\"p\">],</span><span class=\"w\">\n</span>    <span class=\"n\">api_token</span><span class=\"o\">=</span><span class=\"n\">secrets</span><span class=\"p\">[</span><span class=\"s2\">&quot;API_TOKEN&quot;</span><span class=\"p\">],</span><span class=\"w\">\n</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"n\">nokia_account_id</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;0015I000002jBLDQA2&quot;</span><span class=\"w\">\n</span><span class=\"n\">account</span> <span class=\"o\">=</span> <span class=\"n\">sf</span><span class=\"o\">.</span><span class=\"n\">get_salesforce_object_by_id</span><span class=\"p\">(</span><span class=\"s2\">&quot;Account&quot;</span><span class=\"p\">,</span> <span class=\"n\">nokia_account_id</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"n\">pp</span><span class=\"o\">.</span><span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">account</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"n\">billing_information</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"w\">\n</span>    <span class=\"s2\">&quot;BillingStreet&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Nokia Bulevard 1&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"s2\">&quot;BillingCity&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Espoo&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"s2\">&quot;BillingPostalCode&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;01210&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"s2\">&quot;BillingCountry&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Finland&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">sf</span><span class=\"o\">.</span><span class=\"n\">update_salesforce_object</span><span class=\"p\">(</span><span class=\"s2\">&quot;Account&quot;</span><span class=\"p\">,</span> <span class=\"n\">nokia_account_id</span><span class=\"p\">,</span> <span class=\"n\">billing_information</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Update result: </span><span class=\"si\">{</span><span class=\"n\">result</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n</pre>\n</div>\n",
  "version": "",
  "generated": "2024-10-30 10:10:08",
  "type": "LIBRARY",
  "scope": "GLOBAL",
  "docFormat": "HTML",
  "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Salesforce.py",
  "lineno": 26,
  "tags": [],
  "inits": [
    {
      "name": "__init__",
      "args": [
        {
          "name": "sandbox",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "sandbox: bool = False"
        },
        {
          "name": "domain",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "login",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "domain: str = login"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</div>\n",
      "shortdoc": "Initialize self.  See help(type(self)) for accurate signature.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Salesforce.py",
      "lineno": 204
    }
  ],
  "keywords": [
    {
      "name": "Add Product Into Opportunity",
      "args": [
        {
          "name": "product_name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "product_name: str"
        },
        {
          "name": "quantity",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "quantity: int"
        },
        {
          "name": "opportunity_id",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "opportunity_id: str | None = None"
        },
        {
          "name": "pricebook_name",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "pricebook_name: str | None = None"
        },
        {
          "name": "custom_total_price",
          "types": [
            "float",
            "None"
          ],
          "typedocs": {
            "float": "float",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "custom_total_price: float | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Add Salesforce Product into Opportunity.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param product_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">type of the product in the Pricelist</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param quantity:</th><td class=\"field-body\">number of products to add</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param opportunity_id:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">identifier of Opportunity, default None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param pricebook_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">name of the pricelist, default None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param custom_total_price:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">price that overrides quantity and product price,\ndefault None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">True is operation is successful or False</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Add Salesforce Product into Opportunity.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Salesforce.py",
      "lineno": 566
    },
    {
      "name": "Auth With Connected App",
      "args": [
        {
          "name": "username",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "username: str"
        },
        {
          "name": "password",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "password: str"
        },
        {
          "name": "api_token",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "api_token: str"
        },
        {
          "name": "consumer_key",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "consumer_key: str"
        },
        {
          "name": "consumer_secret",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "consumer_secret: str"
        },
        {
          "name": "embed_api_token",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "embed_api_token: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Authorize to Salesforce with security token, username,\npassword, connected app key, and connected app secret\ncreating instance.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param username:</th><td class=\"field-body\">Salesforce API username</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param password:</th><td class=\"field-body\">Salesforce API password</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param api_token:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Salesforce API security token</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param consumer_key:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Salesforce connected app client ID</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param consumer_secret:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Salesforce connected app client secret</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param embed_api_token:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Embed API token to password (default: False)</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Python</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"kn\">from</span> <span class=\"nn\">RPA.Salesforce</span> <span class=\"kn\">import</span> <span class=\"n\">Salesforce</span><span class=\"w\">\n</span><span class=\"kn\">from</span> <span class=\"nn\">RPA.Robocorp.Vault</span> <span class=\"kn\">import</span> <span class=\"n\">Vault</span><span class=\"w\">\n\n</span><span class=\"n\">SF</span> <span class=\"o\">=</span> <span class=\"n\">Salesforce</span><span class=\"p\">(</span><span class=\"n\">domain</span><span class=\"o\">=</span><span class=\"s2\">&quot;robocorp-testing-stuff.develop.my&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"n\">VAULT</span> <span class=\"o\">=</span> <span class=\"n\">Vault</span><span class=\"p\">()</span><span class=\"w\">\n\n</span><span class=\"n\">secrets</span> <span class=\"o\">=</span> <span class=\"n\">VAULT</span><span class=\"o\">.</span><span class=\"n\">get_secret</span><span class=\"p\">(</span><span class=\"s2\">&quot;salesforce&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"n\">SF</span><span class=\"o\">.</span><span class=\"n\">auth_with_connected_app</span><span class=\"p\">(</span><span class=\"w\">\n</span>    <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"n\">secrets</span><span class=\"p\">[</span><span class=\"s2\">&quot;USERNAME&quot;</span><span class=\"p\">],</span><span class=\"w\">\n</span>    <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"n\">secrets</span><span class=\"p\">[</span><span class=\"s2\">&quot;PASSWORD&quot;</span><span class=\"p\">],</span><span class=\"w\">\n</span>    <span class=\"n\">api_token</span><span class=\"o\">=</span><span class=\"n\">secrets</span><span class=\"p\">[</span><span class=\"s2\">&quot;API_TOKEN&quot;</span><span class=\"p\">],</span><span class=\"w\">\n</span>    <span class=\"n\">consumer_key</span><span class=\"o\">=</span><span class=\"n\">secrets</span><span class=\"p\">[</span><span class=\"s2\">&quot;CONSUMER_KEY&quot;</span><span class=\"p\">],</span><span class=\"w\">\n</span>    <span class=\"n\">consumer_secret</span><span class=\"o\">=</span><span class=\"n\">secrets</span><span class=\"p\">[</span><span class=\"s2\">&quot;CONSUMER_SECRET&quot;</span><span class=\"p\">],</span><span class=\"w\">\n</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Settings ***</span><span class=\"p\">\n</span><span class=\"kn\">Library</span><span class=\"p\">  </span><span class=\"nn\">RPA.Salesforce</span><span class=\"p\">   </span><span class=\"s\">domain=robocop-testing-stuff.develop.my</span><span class=\"p\">\n</span><span class=\"kn\">Library</span><span class=\"p\">  </span><span class=\"nn\">RPA.Robocorp.Vault</span><span class=\"p\">\n\n</span><span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Authenticate to Salesforce using connected app</span><span class=\"p\">\n    ${</span><span class=\"nv\">secrets</span><span class=\"p\">}=  </span><span class=\"nf\">Get Secret</span><span class=\"p\">  </span><span class=\"s\">salesforce</span><span class=\"p\">\n\n    </span><span class=\"nf\">Auth with connected app</span><span class=\"p\">\n    ...  </span><span class=\"s\">username=</span><span class=\"p\">${</span><span class=\"nv\">secrets</span><span class=\"p\">}</span><span class=\"s\">[USERNAME]</span><span class=\"p\">\n    ...  </span><span class=\"s\">password=</span><span class=\"p\">${</span><span class=\"nv\">secrets</span><span class=\"p\">}</span><span class=\"s\">[PASSWORD]</span><span class=\"p\">\n    ...  </span><span class=\"s\">api_token=</span><span class=\"p\">${</span><span class=\"nv\">secrets</span><span class=\"p\">}</span><span class=\"s\">[API_TOKEN]</span><span class=\"p\">\n    ...  </span><span class=\"s\">consumer_key=</span><span class=\"p\">${</span><span class=\"nv\">secrets</span><span class=\"p\">}</span><span class=\"s\">[CONSUMER_KEY]</span><span class=\"p\">\n    ...  </span><span class=\"s\">consumer_secret=</span><span class=\"p\">${</span><span class=\"nv\">secrets</span><span class=\"p\">}</span><span class=\"s\">[CONSUMER_SECRET]</span>\n</pre>\n</div>\n",
      "shortdoc": "Authorize to Salesforce with security token, username, password, connected app key, and connected app secret creating instance.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Salesforce.py",
      "lineno": 268
    },
    {
      "name": "Auth With Token",
      "args": [
        {
          "name": "username",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "username: str"
        },
        {
          "name": "password",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "password: str"
        },
        {
          "name": "api_token",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "api_token: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Authorize to Salesforce with security token, username\nand password creating instance.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param username:</th><td class=\"field-body\">Salesforce API username</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param password:</th><td class=\"field-body\">Salesforce API password</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param api_token:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Salesforce API security token</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Authorize to Salesforce with security token, username and password creating instance.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Salesforce.py",
      "lineno": 250
    },
    {
      "name": "Create New Opportunity",
      "args": [
        {
          "name": "close_date",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "close_date: str"
        },
        {
          "name": "opportunity_name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "opportunity_name: str"
        },
        {
          "name": "stage_name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "Closed Won",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "stage_name: str = Closed Won"
        },
        {
          "name": "account_name",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "account_name: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Create Salesforce Opportunity object.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param close_date:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">closing date for the Opportunity, format 'YYYY-MM-DD'</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param opportunity_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">as string</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param stage_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">needs to be one of the defined stages,\ndefaults to &quot;Closed Won&quot;</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param account_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">by default uses previously set account, defaults to None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">created opportunity or False</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Create Salesforce Opportunity object.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Salesforce.py",
      "lineno": 606
    },
    {
      "name": "Create Salesforce Object",
      "args": [
        {
          "name": "object_type",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "object_type: str"
        },
        {
          "name": "object_data",
          "types": [
            "Any"
          ],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "object_data: Any"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Create Salesforce object by type and data.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param object_type:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Salesforce object type</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param object_data:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Salesforce object data</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">raises SalesforceDataNotAnDictionary:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">when <cite>object_data</cite> is not dictionary</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">resulting object as dictionary</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Create Salesforce object by type and data.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Salesforce.py",
      "lineno": 734
    },
    {
      "name": "Delete Salesforce Object",
      "args": [
        {
          "name": "object_type",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "object_type: str"
        },
        {
          "name": "object_id",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "object_id: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Delete Salesfoce object by type and id.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param object_type:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Salesforce object type</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param object_id:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Salesforce object id</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">True if successful</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Delete Salesfoce object by type and id.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Salesforce.py",
      "lineno": 785
    },
    {
      "name": "Describe Salesforce Object",
      "args": [
        {
          "name": "object_type",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "object_type: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Get Salesfoce object description by type.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param object_type:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Salesforce object type</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">object description as dictionary</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Get Salesfoce object description by type.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Salesforce.py",
      "lineno": 807
    },
    {
      "name": "Execute Apex",
      "args": [
        {
          "name": "apex",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "apex: str"
        },
        {
          "name": "apex_data",
          "types": [
            "Dict",
            "None"
          ],
          "typedocs": {
            "Dict": "dictionary",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "apex_data: Dict | None = None"
        },
        {
          "name": "apex_method",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "POST",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "apex_method: str = POST"
        },
        {
          "name": "kwargs",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_NAMED",
          "required": false,
          "repr": "**kwargs"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Execute APEX operation.</p>\n<p>The APEX classes can be added via Salesforce Developer console\n(from menu: File &gt; New &gt; Apex Class).</p>\n<p>Permissions for the APEX classes can be set via Salesforce Setup\n(Apex Classes -&gt; Security).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param apex:</th><td class=\"field-body\">endpoint of the APEX operation</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param apex_data:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">data to be sent to the APEX operation</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param apex_method:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">operation method</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param kwargs:</th><td class=\"field-body\">additional arguments to be passed to the APEX request</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">result of the APEX operation</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Python</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"kn\">from</span> <span class=\"nn\">RPA.Salesforce</span> <span class=\"kn\">import</span> <span class=\"n\">Salesforce</span><span class=\"w\">\n\n</span><span class=\"n\">SF</span> <span class=\"o\">=</span> <span class=\"n\">Salesforce</span><span class=\"p\">(</span><span class=\"n\">domain</span><span class=\"o\">=</span><span class=\"s2\">&quot;robocorp-testing-stuff.develop.my&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"c1\"># authenticate to Salesforce</span><span class=\"w\">\n</span><span class=\"n\">SF</span><span class=\"o\">.</span><span class=\"n\">execute_apex</span><span class=\"p\">(</span><span class=\"n\">apex</span><span class=\"o\">=</span><span class=\"s2\">&quot;MyClass&quot;</span><span class=\"p\">,</span> <span class=\"n\">apex_data</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;data&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;value&quot;</span><span class=\"p\">})</span><span class=\"w\">\n</span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">SF</span><span class=\"o\">.</span><span class=\"n\">execute_apex</span><span class=\"p\">(</span><span class=\"w\">\n</span>    <span class=\"n\">apex</span><span class=\"o\">=</span><span class=\"s2\">&quot;getAccount/?id=0017R00002xmXB1QAM&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"n\">apex_method</span><span class=\"o\">=</span><span class=\"s2\">&quot;GET&quot;</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Settings ***</span><span class=\"p\">\n</span><span class=\"kn\">Library</span><span class=\"p\">  </span><span class=\"nn\">RPA.Salesforce</span><span class=\"p\">   </span><span class=\"s\">domain=robocop-testing-stuff.develop.my</span><span class=\"p\">\n\n</span><span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Executing APEX operations</span><span class=\"p\">\n    </span><span class=\"c\"># Authenticate to Salesforce\n</span><span class=\"p\">\n    &amp;{</span><span class=\"nv\">apex_data</span><span class=\"p\">}=  </span><span class=\"nf\">Create Dictionary</span><span class=\"p\">  </span><span class=\"s\">data=value</span><span class=\"p\">\n    ${</span><span class=\"nv\">result</span><span class=\"p\">}=     </span><span class=\"nf\">Execute APEX</span><span class=\"p\">  </span><span class=\"s\">MyClass</span><span class=\"p\">  </span><span class=\"s\">apex_data=</span><span class=\"p\">${</span><span class=\"nv\">apex_data</span><span class=\"p\">}\n    ${</span><span class=\"nv\">result</span><span class=\"p\">}=     </span><span class=\"nf\">Execute APEX</span><span class=\"p\">\n    ...  </span><span class=\"s\">apex=getAccount/?id=0017R00002xmXB1QAM</span><span class=\"p\">\n    ...  </span><span class=\"s\">apex_method=GET</span>\n</pre>\n</div>\n",
      "shortdoc": "Execute APEX operation.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Salesforce.py",
      "lineno": 363
    },
    {
      "name": "Execute Dataloader Insert",
      "args": [
        {
          "name": "input_object",
          "types": [
            "Any"
          ],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "input_object: Any"
        },
        {
          "name": "mapping_object",
          "types": [
            "Any"
          ],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "mapping_object: Any"
        },
        {
          "name": "object_type",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "object_type: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Keyword mimics Salesforce Dataloader 'insert' behaviour by taking\nin a <cite>input_object`representing dictionary of data to input into Salesforce,\na `mapping_object</cite> representing dictionary mapping the input keys into\nSalesforce keys, an <cite>object_type</cite> representing Salesforce object which\nDatahandler will handle with <cite>operation</cite> type.</p>\n<p>Stores operation successes into <cite>Salesforce.dataloader_success</cite> array.\nStores operation errors into <cite>Salesforce.dataloader_errors</cite>.</p>\n<p>These can be retrieved with keywords <cite>get_dataloader_success_table</cite> and\n<cite>get_dataloader_error_table</cite> which return corresponding data as\n<cite>RPA.Table</cite>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param input_object:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">filepath or list of dictionaries</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param mapping_object:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">filepath or dictionary</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param object_type:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Salesforce object type</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">True if operation is successful</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Keyword mimics Salesforce Dataloader 'insert' behaviour by taking in a `input_object`representing dictionary of data to input into Salesforce, a `mapping_object` representing dictionary mapping the input keys into Salesforce keys, an `object_type` representing Salesforce object which Datahandler will handle with `operation` type.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Salesforce.py",
      "lineno": 671
    },
    {
      "name": "Get Dataloader Error Table",
      "args": [],
      "doc": "<div class=\"document\">\n<p>Return Dataloader error entries as <cite>RPA.Table</cite></p>\n</div>\n",
      "shortdoc": "Return Dataloader error entries as `RPA.Table`",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Salesforce.py",
      "lineno": 719
    },
    {
      "name": "Get Dataloader Success Table",
      "args": [],
      "doc": "<div class=\"document\">\n<p>Return Dataloader success entries as <cite>RPA.Table</cite></p>\n</div>\n",
      "shortdoc": "Return Dataloader success entries as `RPA.Table`",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Salesforce.py",
      "lineno": 715
    },
    {
      "name": "Get Domain",
      "args": [],
      "doc": "<div class=\"document\">\n<p>Used to determine the current domain that has been set</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">returns:</th><td class=\"field-body\">string of the currently set domain</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Used to determine the current domain that has been set",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Salesforce.py",
      "lineno": 243
    },
    {
      "name": "Get Opportunity Id",
      "args": [
        {
          "name": "opportunity_name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "opportunity_name: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Get ID of an Opportunity linked to set account.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param opportunity_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">opportunity to query</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">Id of the opportunity or False</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Get ID of an Opportunity linked to set account.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Salesforce.py",
      "lineno": 505
    },
    {
      "name": "Get Pricebook Entries",
      "args": [],
      "doc": "<div class=\"document\">\n<p>Get all pricebook entries.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">query result</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Get all pricebook entries.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Salesforce.py",
      "lineno": 498
    },
    {
      "name": "Get Pricebook Id",
      "args": [
        {
          "name": "pricebook_name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "pricebook_name: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Get ID of a pricelist.</p>\n<p>Returns False if unique Id is not found.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param pricebook_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">pricelist to query</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">Id of the pricelist or False</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Get ID of a pricelist.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Salesforce.py",
      "lineno": 523
    },
    {
      "name": "Get Products In Pricelist",
      "args": [
        {
          "name": "pricebook_name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "pricebook_name: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Get all products in a pricelist.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param pricebook_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">pricelist to query</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">products in dictionary</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Get all products in a pricelist.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Salesforce.py",
      "lineno": 538
    },
    {
      "name": "Get Salesforce Object By Id",
      "args": [
        {
          "name": "object_type",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "object_type: str"
        },
        {
          "name": "object_id",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "object_id: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Get Salesforce object by id and type.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param object_type:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Salesforce object type</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param object_id:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Salesforce object id</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">dictionary of object attributes</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Get Salesforce object by id and type.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Salesforce.py",
      "lineno": 723
    },
    {
      "name": "Get Salesforce Object Metadata",
      "args": [
        {
          "name": "object_type",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "object_type: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Get Salesfoce object metadata by type.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param object_type:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Salesforce object type</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">object metadata as dictionary</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Get Salesfoce object metadata by type.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Salesforce.py",
      "lineno": 797
    },
    {
      "name": "Read Dictionary From File",
      "args": [
        {
          "name": "mapping_file",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "mapping_file: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Read dictionary from file.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param mapping_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">path to the file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">file content as dictionary</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Read dictionary from file.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Salesforce.py",
      "lineno": 642
    },
    {
      "name": "Salesforce Query",
      "args": [
        {
          "name": "sql_string",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "sql_string: str"
        },
        {
          "name": "as_table",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "as_table: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Perform SQL query and return result as <cite>dict</cite> or <cite>Table</cite>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param sql_string:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">SQL clause to perform.</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param as_table:</th><td class=\"field-body\">Set to <cite>True</cite> if the result should be of <cite>RPA.Tables.Table</cite>\ntype. (dictionary is returned by default)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">returns:</th><td class=\"field-body\">Result of the SQL query.</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Perform SQL query and return result as `dict` or `Table`.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Salesforce.py",
      "lineno": 449
    },
    {
      "name": "Salesforce Query Result As Table",
      "args": [
        {
          "name": "sql_string",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "sql_string: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Shorthand for <tt class=\"docutils literal\">Salesforce Query&nbsp;&nbsp;&nbsp; ${sql_string}&nbsp;&nbsp;&nbsp; <span class=\"pre\">as_table=${True}</span></tt>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param sql_string:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">SQL clause to perform.</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">returns:</th><td class=\"field-body\">Result of the SQL query as <cite>RPA.Tables.Table</cite>.</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Shorthand for ``Salesforce Query    ${sql_string}    as_table=${True}``.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Salesforce.py",
      "lineno": 466
    },
    {
      "name": "Set Account",
      "args": [
        {
          "name": "account_name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "account_name: str = "
        },
        {
          "name": "account_id",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "account_id: str = "
        }
      ],
      "doc": "<div class=\"document\">\n<p>Set account name and id by giving either parameter.</p>\n<dl class=\"docutils\">\n<dt>Can be used together with keywords:</dt>\n<dd><ul class=\"first last simple\">\n<li>get_opportunity_id</li>\n<li>create_new_opportunity</li>\n</ul>\n</dd>\n</dl>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param account_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">string, defaults to &quot;&quot;</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param account_id:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">string, defaults to &quot;&quot;</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">True if account was found from Salesforce, else False</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Set account name and id by giving either parameter.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Salesforce.py",
      "lineno": 474
    },
    {
      "name": "Set Domain",
      "args": [
        {
          "name": "domain",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "login",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "domain: str = login"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Used to set the domain the <cite>Auth With Token</cite> keyword will use. To set\nthe domain to 'test' or if using a sandbox environment use &quot;sandbox&quot; as the\ndomain. If you have a Salsesforce My domain you may also input that name. If\nthe <cite>domain</cite> argument is not used the default domain is &quot;login&quot;.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param domain:</th><td class=\"field-body\">&quot;sandbox&quot; or the name of the Salesforce My domain;\nif no argument provided defaults to &quot;login&quot;</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Used to set the domain the `Auth With Token` keyword will use. To set the domain to 'test' or if using a sandbox environment use \"sandbox\" as the domain. If you have a Salsesforce My domain you may also input that name. If the `domain` argument is not used the default domain is \"login\".",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Salesforce.py",
      "lineno": 231
    },
    {
      "name": "Set Pricebook",
      "args": [
        {
          "name": "pricebook_name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "pricebook_name: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Sets Pricebook to be used in Salesforce operations.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param pricebook_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">pricelist to use</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Sets Pricebook to be used in Salesforce operations.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Salesforce.py",
      "lineno": 559
    },
    {
      "name": "Update Salesforce Object",
      "args": [
        {
          "name": "object_type",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "object_type: str"
        },
        {
          "name": "object_id",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "object_id: str"
        },
        {
          "name": "object_data",
          "types": [
            "Any"
          ],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "object_data: Any"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Update Salesfoce object by type, id and data.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param object_type:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Salesforce object type</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param object_id:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Salesforce object id</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param object_data:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Salesforce object data</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">raises SalesforceDataNotAnDictionary:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">when <cite>object_data</cite> is not dictionary</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">True if successful</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Update Salesfoce object by type, id and data.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Salesforce.py",
      "lineno": 749
    },
    {
      "name": "Upsert Salesforce Object",
      "args": [
        {
          "name": "object_type",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "object_type: str"
        },
        {
          "name": "object_id",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "object_id: str"
        },
        {
          "name": "object_data",
          "types": [
            "Any"
          ],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "object_data: Any"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Upsert Salesfoce object by type, id and data.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param object_type:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Salesforce object type</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param object_id:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Salesforce object id</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param object_data:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Salesforce object data</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">raises SalesforceDataNotAnDictionary:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">when <cite>object_data</cite> is not dictionary</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">True if successful</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Upsert Salesfoce object by type, id and data.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Salesforce.py",
      "lineno": 767
    }
  ],
  "dataTypes": {
    "enums": [],
    "typedDicts": []
  },
  "typedocs": [
    {
      "type": "Standard",
      "name": "boolean",
      "doc": "<p>Strings <code>TRUE</code>, <code>YES</code>, <code>ON</code> and <code>1</code> are converted to Boolean <code>True</code>, the empty string as well as strings <code>FALSE</code>, <code>NO</code>, <code>OFF</code> and <code>0</code> are converted to Boolean <code>False</code>, and the string <code>NONE</code> is converted to the Python <code>None</code> object. Other strings and other accepted values are passed as-is, allowing keywords to handle them specially if needed. All string comparisons are case-insensitive.</p>\n<p>Examples: <code>TRUE</code> (converted to <code>True</code>), <code>off</code> (converted to <code>False</code>), <code>example</code> (used as-is)</p>",
      "usages": [
        "__init__",
        "Auth With Connected App",
        "Salesforce Query"
      ],
      "accepts": [
        "string",
        "integer",
        "float",
        "None"
      ]
    },
    {
      "type": "Standard",
      "name": "dictionary",
      "doc": "<p>Strings must be Python <a href=\"https://docs.python.org/library/stdtypes.html#dict\">dictionary</a> literals. They are converted to actual dictionaries using the <a href=\"https://docs.python.org/library/ast.html#ast.literal_eval\">ast.literal_eval</a> function. They can contain any values <code>ast.literal_eval</code> supports, including dictionaries and other containers.</p>\n<p>Examples: <code>{'a': 1, 'b': 2}</code>, <code>{'key': 1, 'nested': {'key': 2}}</code></p>",
      "usages": [
        "Execute Apex"
      ],
      "accepts": [
        "string",
        "Mapping"
      ]
    },
    {
      "type": "Standard",
      "name": "float",
      "doc": "<p>Conversion is done using Python's <a href=\"https://docs.python.org/library/functions.html#float\">float</a> built-in function.</p>\n<p>Starting from RF 4.1, spaces and underscores can be used as visual separators for digit grouping purposes.</p>\n<p>Examples: <code>3.14</code>, <code>2.9979e8</code>, <code>10 000.000 01</code></p>",
      "usages": [
        "Add Product Into Opportunity"
      ],
      "accepts": [
        "string",
        "Real"
      ]
    },
    {
      "type": "Standard",
      "name": "integer",
      "doc": "<p>Conversion is done using Python's <a href=\"https://docs.python.org/library/functions.html#int\">int</a> built-in function. Floating point numbers are accepted only if they can be represented as integers exactly. For example, <code>1.0</code> is accepted and <code>1.1</code> is not.</p>\n<p>Starting from RF 4.1, it is possible to use hexadecimal, octal and binary numbers by prefixing values with <code>0x</code>, <code>0o</code> and <code>0b</code>, respectively.</p>\n<p>Starting from RF 4.1, spaces and underscores can be used as visual separators for digit grouping purposes.</p>\n<p>Examples: <code>42</code>, <code>-1</code>, <code>0b1010</code>, <code>10 000 000</code>, <code>0xBAD_C0FFEE</code></p>",
      "usages": [
        "Add Product Into Opportunity"
      ],
      "accepts": [
        "string",
        "float"
      ]
    },
    {
      "type": "Standard",
      "name": "None",
      "doc": "<p>String <code>NONE</code> (case-insensitive) is converted to Python <code>None</code> object. Other values cause an error.</p>",
      "usages": [
        "Add Product Into Opportunity",
        "Create New Opportunity",
        "Execute Apex"
      ],
      "accepts": [
        "string"
      ]
    },
    {
      "type": "Standard",
      "name": "string",
      "doc": "<p>All arguments are converted to Unicode strings.</p>",
      "usages": [
        "__init__",
        "Add Product Into Opportunity",
        "Auth With Connected App",
        "Auth With Token",
        "Create New Opportunity",
        "Create Salesforce Object",
        "Delete Salesforce Object",
        "Describe Salesforce Object",
        "Execute Apex",
        "Execute Dataloader Insert",
        "Get Opportunity Id",
        "Get Pricebook Id",
        "Get Products In Pricelist",
        "Get Salesforce Object By Id",
        "Get Salesforce Object Metadata",
        "Read Dictionary From File",
        "Salesforce Query",
        "Salesforce Query Result As Table",
        "Set Account",
        "Set Domain",
        "Set Pricebook",
        "Update Salesforce Object",
        "Upsert Salesforce Object"
      ],
      "accepts": [
        "Any"
      ]
    }
  ]
}