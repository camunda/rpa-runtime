{
  "specversion": 1,
  "name": "RPA.Twitter",
  "doc": "<div class=\"document\">\n<p><cite>Twitter</cite> is a library for accessing Twitter using developer API.\nThe library extends <a class=\"reference external\" href=\"http://docs.tweepy.org/en/latest/index.html\">tweepy</a> library.</p>\n<p>Authorization credentials can be given as parameters for <tt class=\"docutils literal\">authorize</tt> keyword\nor keyword can read them in as environment variables:</p>\n<ul class=\"simple\">\n<li><cite>TWITTER_CONSUMER_KEY</cite></li>\n<li><cite>TWITTER_CONSUMER_SECRET</cite></li>\n<li><cite>TWITTER_ACCESS_TOKEN</cite></li>\n<li><cite>TWITTER_ACCESS_TOKEN_SECRET</cite></li>\n</ul>\n<p>Library usage requires Twitter developer credentials.\nThose can be requested from <a class=\"reference external\" href=\"https://developer.twitter.com/\">Twitter developer site</a></p>\n<p><strong>Examples</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Settings ***</span><span class=\"p\">\n</span><span class=\"kn\">Library</span><span class=\"p\">   </span><span class=\"nn\">RPA.Twitter</span><span class=\"p\">\n\n</span><span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Get user tweets and like them</span><span class=\"p\">\n    [</span><span class=\"kn\">Setup</span><span class=\"p\">]   </span><span class=\"nf\">Authorize</span><span class=\"p\">\n    &#64;{</span><span class=\"nv\">tweets</span><span class=\"p\">}=   </span><span class=\"nf\">Get User Tweets</span><span class=\"p\">   </span><span class=\"s\">username=niinisto</span><span class=\"p\">   </span><span class=\"s\">count=5</span><span class=\"p\">\n    </span><span class=\"nf\">FOR</span><span class=\"p\">   ${</span><span class=\"nv\">tweet</span><span class=\"p\">}  </span><span class=\"s\">IN</span><span class=\"p\">   &#64;{</span><span class=\"nv\">tweets</span><span class=\"p\">}\n        </span><span class=\"nf\">Like</span><span class=\"p\">   ${</span><span class=\"nv\">tweet</span><span class=\"p\">}\n    </span><span class=\"nf\">END</span>\n</pre>\n<pre class=\"code python literal-block\">\n<span class=\"kn\">from</span> <span class=\"nn\">RPA.Twitter</span> <span class=\"kn\">import</span> <span class=\"n\">Twitter</span><span class=\"w\">\n\n</span><span class=\"n\">library</span> <span class=\"o\">=</span> <span class=\"n\">Twitter</span><span class=\"p\">()</span><span class=\"w\">\n</span><span class=\"n\">library</span><span class=\"o\">.</span><span class=\"n\">authorize</span><span class=\"p\">()</span><span class=\"w\">\n</span><span class=\"n\">tweets</span> <span class=\"o\">=</span> <span class=\"n\">library</span><span class=\"o\">.</span><span class=\"n\">get_user_tweets</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s2\">&quot;niinisto&quot;</span><span class=\"p\">,</span> <span class=\"n\">count</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"k\">for</span> <span class=\"n\">tw</span> <span class=\"ow\">in</span> <span class=\"n\">tweets</span><span class=\"p\">:</span><span class=\"w\">\n</span>    <span class=\"n\">library</span><span class=\"o\">.</span><span class=\"n\">like</span><span class=\"p\">(</span><span class=\"n\">tw</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"n\">tweets</span> <span class=\"o\">=</span> <span class=\"n\">library</span><span class=\"o\">.</span><span class=\"n\">text_search_tweets</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"o\">=</span><span class=\"s2\">&quot;corona trump&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"k\">for</span> <span class=\"n\">tw</span> <span class=\"ow\">in</span> <span class=\"n\">tweets</span><span class=\"p\">:</span><span class=\"w\">\n</span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">tw</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">library</span><span class=\"o\">.</span><span class=\"n\">get_user_profile</span><span class=\"p\">(</span><span class=\"s2\">&quot;niinisto&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"n\">library</span><span class=\"o\">.</span><span class=\"n\">follow</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"n\">library</span><span class=\"o\">.</span><span class=\"n\">tweet</span><span class=\"p\">(</span><span class=\"s2\">&quot;first tweet&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"n\">me</span> <span class=\"o\">=</span> <span class=\"n\">library</span><span class=\"o\">.</span><span class=\"n\">get_me</span><span class=\"p\">()</span><span class=\"w\">\n</span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">me</span><span class=\"p\">)</span>\n</pre>\n</div>\n",
  "version": "",
  "generated": "2024-10-30 10:10:09",
  "type": "LIBRARY",
  "scope": "GLOBAL",
  "docFormat": "HTML",
  "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Twitter.py",
  "lineno": 41,
  "tags": [],
  "inits": [],
  "keywords": [
    {
      "name": "Authorize",
      "args": [
        {
          "name": "consumer_key",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "consumer_key: str | None = None"
        },
        {
          "name": "consumer_secret",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "consumer_secret: str | None = None"
        },
        {
          "name": "access_token",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "access_token: str | None = None"
        },
        {
          "name": "access_token_secret",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "access_token_secret: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Authorize to Twitter API</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param consumer_key:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">app consumer key</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param consumer_secret:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">app consumer secret</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param access_token:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">user access token</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param access_token_secret:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">user access token secret</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Authorize to Twitter API",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Twitter.py",
      "lineno": 118
    },
    {
      "name": "Follow",
      "args": [
        {
          "name": "user",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "user: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Follow Twitter user</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param user:</th><td class=\"field-body\">screen name of the user</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\"><cite>True</cite> if user was followed, <cite>False</cite> if not</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Follow Twitter user",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Twitter.py",
      "lineno": 321
    },
    {
      "name": "Get Me",
      "args": [],
      "doc": "<div class=\"document\">\n<p>Get Twitter profile of authenticated user</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">user profile as dictionary or <cite>None</cite></td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Get Twitter profile of authenticated user",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Twitter.py",
      "lineno": 151
    },
    {
      "name": "Get User Profile",
      "args": [
        {
          "name": "username",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "username: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Get user's Twitter profile</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param username:</th><td class=\"field-body\">whose profile to get</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">profile as dictionary</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Get user's Twitter profile",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Twitter.py",
      "lineno": 262
    },
    {
      "name": "Get User Tweets",
      "args": [
        {
          "name": "username",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "username: str | None = None"
        },
        {
          "name": "count",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": "100",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "count: int = 100"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Get user tweets</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param username:</th><td class=\"field-body\">whose tweets to get</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param count:</th><td class=\"field-body\">maximum number of tweets, defaults to 100</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">list of user tweets</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Get user tweets",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Twitter.py",
      "lineno": 160
    },
    {
      "name": "Like",
      "args": [
        {
          "name": "tweet",
          "types": [
            "Tweet",
            "None"
          ],
          "typedocs": {
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "tweet: Tweet | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Like a tweet</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param tweet:</th><td class=\"field-body\">as a class <cite>Tweet</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\"><cite>True</cite> if Tweet was liked, <cite>False</cite> if not</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Like a tweet",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Twitter.py",
      "lineno": 285
    },
    {
      "name": "Text Search Tweets",
      "args": [
        {
          "name": "query",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "query: str | None = None"
        },
        {
          "name": "count",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": "100",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "count: int = 100"
        },
        {
          "name": "geocode",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "geocode: str | None = None"
        },
        {
          "name": "lang",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "lang: str | None = None"
        },
        {
          "name": "locale",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "locale: str | None = None"
        },
        {
          "name": "result_type",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "mixed",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "result_type: str = mixed"
        },
        {
          "name": "until",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "until: str | None = None"
        },
        {
          "name": "since_id",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "since_id: str | None = None"
        },
        {
          "name": "max_id",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "max_id: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Search tweets defined by search query</p>\n<p>Results types:</p>\n<ul class=\"simple\">\n<li>mixed : include both popular and real time results in the response</li>\n<li>recent : return only the most recent results in the response</li>\n<li>popular : return only the most popular results in the response</li>\n</ul>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param query:</th><td class=\"field-body\">search query string of 500 characters maximum,\nincluding operators</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param count:</th><td class=\"field-body\">maximum number of tweets, defaults to 100</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param geocode:</th><td class=\"field-body\">tweets by users located within a given\nradius of the given latitude/longitude</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param lang:</th><td class=\"field-body\">language code of tweets</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param locale:</th><td class=\"field-body\">language of the query you are sending</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param result_type:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">type of search results you would prefer to receive,\ndefault &quot;mixed&quot;</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param until:</th><td class=\"field-body\">tweets created before the given date</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param since_id:</th><td class=\"field-body\">Returns only statuses with an ID greater than</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param max_id:</th><td class=\"field-body\">only statuses with an ID less than</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">list of matching tweets</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Search tweets defined by search query",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Twitter.py",
      "lineno": 193
    },
    {
      "name": "Tweet",
      "args": [
        {
          "name": "content",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "content: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Make a tweet with content</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param content:</th><td class=\"field-body\">text for the status update</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Make a tweet with content",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Twitter.py",
      "lineno": 277
    },
    {
      "name": "Unfollow",
      "args": [
        {
          "name": "user",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "user: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Unfollow Twitter user</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param user:</th><td class=\"field-body\">screen name of the user</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\"><cite>True</cite> if user was followed, <cite>False</cite> if not</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Unfollow Twitter user",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Twitter.py",
      "lineno": 335
    },
    {
      "name": "Unlike",
      "args": [
        {
          "name": "tweet",
          "types": [
            "Tweet",
            "None"
          ],
          "typedocs": {
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "tweet: Tweet | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Unlike a tweet</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param tweet:</th><td class=\"field-body\">as a class <cite>Tweet</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\"><cite>True</cite> if Tweet was unliked, <cite>False</cite> if not</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Unlike a tweet",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Twitter.py",
      "lineno": 303
    }
  ],
  "dataTypes": {
    "enums": [],
    "typedDicts": []
  },
  "typedocs": [
    {
      "type": "Standard",
      "name": "integer",
      "doc": "<p>Conversion is done using Python's <a href=\"https://docs.python.org/library/functions.html#int\">int</a> built-in function. Floating point numbers are accepted only if they can be represented as integers exactly. For example, <code>1.0</code> is accepted and <code>1.1</code> is not.</p>\n<p>Starting from RF 4.1, it is possible to use hexadecimal, octal and binary numbers by prefixing values with <code>0x</code>, <code>0o</code> and <code>0b</code>, respectively.</p>\n<p>Starting from RF 4.1, spaces and underscores can be used as visual separators for digit grouping purposes.</p>\n<p>Examples: <code>42</code>, <code>-1</code>, <code>0b1010</code>, <code>10 000 000</code>, <code>0xBAD_C0FFEE</code></p>",
      "usages": [
        "Get User Tweets",
        "Text Search Tweets"
      ],
      "accepts": [
        "string",
        "float"
      ]
    },
    {
      "type": "Standard",
      "name": "None",
      "doc": "<p>String <code>NONE</code> (case-insensitive) is converted to Python <code>None</code> object. Other values cause an error.</p>",
      "usages": [
        "Authorize",
        "Follow",
        "Get User Profile",
        "Get User Tweets",
        "Like",
        "Text Search Tweets",
        "Tweet",
        "Unfollow",
        "Unlike"
      ],
      "accepts": [
        "string"
      ]
    },
    {
      "type": "Standard",
      "name": "string",
      "doc": "<p>All arguments are converted to Unicode strings.</p>",
      "usages": [
        "Authorize",
        "Follow",
        "Get User Profile",
        "Get User Tweets",
        "Text Search Tweets",
        "Tweet",
        "Unfollow"
      ],
      "accepts": [
        "Any"
      ]
    }
  ]
}