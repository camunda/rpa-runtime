{
  "specversion": 1,
  "name": "RPA.Email.ImapSmtp",
  "doc": "<div class=\"document\">\n<p><cite>ImapSmtp</cite> is a library for sending, reading, and deleting emails.\n<cite>ImapSmtp</cite> is interfacing with SMTP and IMAP protocols.</p>\n<p><strong>*About criteria argument*</strong></p>\n<p>Various keywords like <tt class=\"docutils literal\">List Messages</tt> and <tt class=\"docutils literal\">Move Messages</tt> have keyword\nargument called <tt class=\"docutils literal\">criterion</tt> which can be used to filter emails according\nto given criteria.</p>\n<p>Syntax needs to according to specification and more information about that\ncan be read from <a class=\"reference external\" href=\"https://robocorp.com/docs/development-guide/email/sending-emails-with-gmail-smtp#listing-email-messages-by-criteria\">https://robocorp.com/docs/development-guide/email/sending-emails-with-gmail-smtp#listing-email-messages-by-criteria</a></p>\n<p><strong>Troubleshooting</strong></p>\n<ul>\n<li><dl class=\"first docutils\">\n<dt>Authentication error with GMail - &quot;Application-specific password required&quot;</dt>\n<dd><p class=\"first last\">See: <a class=\"reference external\" href=\"https://support.google.com/mail/answer/185833?hl=en\">https://support.google.com/mail/answer/185833?hl=en</a></p>\n</dd>\n</dl>\n</li>\n<li><dl class=\"first docutils\">\n<dt>More secure apps (XOAUTH2 protocol) - Use the OAuth2 flow as in this Portal robot:</dt>\n<dd><p class=\"first\"><a class=\"reference external\" href=\"https://github.com/robocorp/example-oauth-email\">example-oauth-email</a></p>\n<p class=\"last\">Make sure to specify a <cite>provider</cite> (and optionally a <cite>tenant</cite>) when importing\nthe library and planning to use this flow.</p>\n</dd>\n</dl>\n</li>\n</ul>\n<p><strong>Examples</strong></p>\n<p><strong>Robot Framework</strong></p>\n<p>It is highly recommended to secure your passwords and take care\nthat they are not stored in version control by mistake.\nSee <tt class=\"docutils literal\">RPA.Robocorp.Vault</tt> to see how to store secrets in\nRobocorp Vault.</p>\n<p>When sending HTML content with IMG tags, the <tt class=\"docutils literal\">src</tt> filenames must match\nthe base image name given with the <tt class=\"docutils literal\">images</tt> parameter.</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Settings ***</span><span class=\"p\">\n</span><span class=\"kn\">Library</span><span class=\"p\">     </span><span class=\"nn\">RPA.Email.ImapSmtp</span><span class=\"p\">   </span><span class=\"s\">smtp_server=smtp.gmail.com</span><span class=\"p\">  </span><span class=\"s\">smtp_port=587</span><span class=\"p\">\n</span><span class=\"kn\">Task Setup</span><span class=\"p\">  </span><span class=\"nf\">Authorize</span><span class=\"p\">  </span><span class=\"s\">account=</span><span class=\"p\">${</span><span class=\"nv\">GMAIL_ACCOUNT</span><span class=\"p\">}  </span><span class=\"s\">password=</span><span class=\"p\">${</span><span class=\"nv\">GMAIL_PASSWORD</span><span class=\"p\">}\n\n</span><span class=\"gh\">*** Variables ***</span><span class=\"p\">\n${</span><span class=\"nv\">GMAIL_ACCOUNT</span><span class=\"p\">}        </span><span class=\"s\">ACCOUNT_NAME</span><span class=\"p\">\n${</span><span class=\"nv\">GMAIL_PASSWORD</span><span class=\"p\">}       </span><span class=\"s\">APP_PASSWORD</span><span class=\"p\">\n${</span><span class=\"nv\">RECIPIENT_ADDRESS</span><span class=\"p\">}    </span><span class=\"s\">RECIPIENT</span><span class=\"p\">\n${</span><span class=\"nv\">BODY_IMG1</span><span class=\"p\">}            ${</span><span class=\"nv\">IMAGEDIR</span><span class=\"p\">}${</span><span class=\"nv\">/</span><span class=\"p\">}</span><span class=\"s\">approved.png</span><span class=\"p\">\n${</span><span class=\"nv\">BODY_IMG2</span><span class=\"p\">}            ${</span><span class=\"nv\">IMAGEDIR</span><span class=\"p\">}${</span><span class=\"nv\">/</span><span class=\"p\">}</span><span class=\"s\">invoice.png</span><span class=\"p\">\n${</span><span class=\"nv\">EMAIL_BODY</span><span class=\"p\">}     </span><span class=\"s\">&lt;h1&gt;Heading&lt;/h1&gt;&lt;p&gt;Status: &lt;img src='approved.png' alt='approved image'/&gt;&lt;/p&gt;</span><span class=\"p\">\n...               </span><span class=\"s\">&lt;p&gt;INVOICE: &lt;img src='invoice.png' alt='invoice image'/&gt;&lt;/p&gt;</span><span class=\"p\">\n\n</span><span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Sending email</span><span class=\"p\">\n    </span><span class=\"nf\">Send Message</span><span class=\"p\">  </span><span class=\"s\">sender=</span><span class=\"p\">${</span><span class=\"nv\">GMAIL_ACCOUNT</span><span class=\"p\">}\n    ...           </span><span class=\"s\">recipients=</span><span class=\"p\">${</span><span class=\"nv\">RECIPIENT_ADDRESS</span><span class=\"p\">}\n    ...           </span><span class=\"s\">subject=Message from RPA Robot</span><span class=\"p\">\n    ...           </span><span class=\"s\">body=RPA Robot message body</span><span class=\"p\">\n\n</span><span class=\"gu\">Sending HTML Email With Image</span><span class=\"p\">\n    [</span><span class=\"kn\">Documentation</span><span class=\"p\">]     </span><span class=\"s\">Sending email with HTML content and attachment</span><span class=\"p\">\n    </span><span class=\"nf\">Send Message</span><span class=\"p\">\n    ...                 </span><span class=\"s\">sender=</span><span class=\"p\">${</span><span class=\"nv\">GMAIL_ACCOUNT</span><span class=\"p\">}\n    ...                 </span><span class=\"s\">recipients=</span><span class=\"p\">${</span><span class=\"nv\">RECIPIENT_ADDRESS</span><span class=\"p\">}\n    ...                 </span><span class=\"s\">subject=HTML email with body images (2) plus one attachment</span><span class=\"p\">\n    ...                 </span><span class=\"s\">body=</span><span class=\"p\">${</span><span class=\"nv\">EMAIL_BODY</span><span class=\"p\">}\n    ...                 </span><span class=\"s\">html=</span><span class=\"p\">${</span><span class=\"nv\">TRUE</span><span class=\"p\">}\n    ...                 </span><span class=\"s\">images=</span><span class=\"p\">${</span><span class=\"nv\">BODY_IMG1</span><span class=\"p\">}</span><span class=\"s\">, </span><span class=\"p\">${</span><span class=\"nv\">BODY_IMG2</span><span class=\"p\">}\n    ...                 </span><span class=\"s\">attachments=example.png</span>\n</pre>\n<p><strong>Python</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"kn\">from</span> <span class=\"nn\">RPA.Email.ImapSmtp</span> <span class=\"kn\">import</span> <span class=\"n\">ImapSmtp</span><span class=\"w\">\n\n</span><span class=\"n\">gmail_account</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;ACCOUNT_NAME&quot;</span><span class=\"w\">\n</span><span class=\"n\">gmail_password</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;APP_PASSWORD&quot;</span><span class=\"w\">\n\n</span><span class=\"n\">mail</span> <span class=\"o\">=</span> <span class=\"n\">ImapSmtp</span><span class=\"p\">(</span><span class=\"n\">smtp_server</span><span class=\"o\">=</span><span class=\"s2\">&quot;smtp.gmail.com&quot;</span><span class=\"p\">,</span> <span class=\"n\">smtp_port</span><span class=\"o\">=</span><span class=\"mi\">587</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"n\">mail</span><span class=\"o\">.</span><span class=\"n\">authorize</span><span class=\"p\">(</span><span class=\"n\">account</span><span class=\"o\">=</span><span class=\"n\">gmail_account</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"n\">gmail_password</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"n\">mail</span><span class=\"o\">.</span><span class=\"n\">send_message</span><span class=\"p\">(</span><span class=\"w\">\n</span>    <span class=\"n\">sender</span><span class=\"o\">=</span><span class=\"n\">gmail_account</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"n\">recipients</span><span class=\"o\">=</span><span class=\"s2\">&quot;RECIPIENT&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"n\">subject</span><span class=\"o\">=</span><span class=\"s2\">&quot;Message from RPA Python&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"n\">body</span><span class=\"o\">=</span><span class=\"s2\">&quot;RPA Python message body&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"p\">)</span>\n</pre>\n</div>\n",
  "version": "",
  "generated": "2024-10-30 10:09:54",
  "type": "LIBRARY",
  "scope": "GLOBAL",
  "docFormat": "HTML",
  "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
  "lineno": 193,
  "tags": [],
  "inits": [
    {
      "name": "__init__",
      "args": [
        {
          "name": "smtp_server",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "smtp_server: str | None = None"
        },
        {
          "name": "smtp_port",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": "587",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "smtp_port: int = 587"
        },
        {
          "name": "imap_server",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "imap_server: str | None = None"
        },
        {
          "name": "imap_port",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": "993",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "imap_port: int = 993"
        },
        {
          "name": "account",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "account: str | None = None"
        },
        {
          "name": "password",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "password: str | None = None"
        },
        {
          "name": "encoding",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "utf-8",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "encoding: str = utf-8"
        },
        {
          "name": "provider",
          "types": [
            "OAuthProvider",
            "str"
          ],
          "typedocs": {
            "OAuthProvider": "OAuthProvider",
            "str": "string"
          },
          "defaultValue": "GOOGLE",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "provider: OAuthProvider | str = GOOGLE"
        },
        {
          "name": "tenant",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "tenant: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</div>\n",
      "shortdoc": "Initialize self.  See help(type(self)) for accurate signature.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
      "lineno": 291
    }
  ],
  "keywords": [
    {
      "name": "Add Gmail Labels",
      "args": [
        {
          "name": "labels",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "labels"
        },
        {
          "name": "criterion",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "criterion"
        },
        {
          "name": "source_folder",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "source_folder: str = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Add GMail labels to messages matching criterion and if given,\nsource folder</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param labels:</th><td class=\"field-body\">comma separated list of labels to add</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param criterion:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">label messages matching criterion</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param source_folder:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">look for messages in this folder, default all folders</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">status of the operation</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Add Gmail Labels</span><span class=\"p\">  </span><span class=\"c\">customer1</span><span class=\"p\">   </span><span class=\"c\">SUBJECT &quot;order confirmation&quot;</span><span class=\"p\">\n</span><span class=\"c\">Add Gmail Labels</span><span class=\"p\">  </span><span class=\"c\">wip</span><span class=\"p\">         </span><span class=\"c\">SUBJECT &quot;order confirmation&quot;</span><span class=\"p\">   </span><span class=\"c\">customerfolder</span>\n</pre>\n</div>\n",
      "shortdoc": "Add GMail labels to messages matching criterion and if given, source folder",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
      "lineno": 1744
    },
    {
      "name": "Authorize",
      "args": [
        {
          "name": "account",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "account: str | None = None"
        },
        {
          "name": "password",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "password: str | None = None"
        },
        {
          "name": "smtp_server",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "smtp_server: str | None = None"
        },
        {
          "name": "imap_server",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "imap_server: str | None = None"
        },
        {
          "name": "smtp_port",
          "types": [
            "int",
            "None"
          ],
          "typedocs": {
            "int": "integer",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "smtp_port: int | None = None"
        },
        {
          "name": "imap_port",
          "types": [
            "int",
            "None"
          ],
          "typedocs": {
            "int": "integer",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "imap_port: int | None = None"
        },
        {
          "name": "is_oauth",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "is_oauth: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Authorize user to SMTP and IMAP servers.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param account:</th><td class=\"field-body\">user account as string, defaults to None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param password:</th><td class=\"field-body\">user password as string, defaults to None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param smtp_server:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">SMTP server address, defaults to None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param imap_server:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">IMAP server address, defaults to None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param smtp_port:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">SMTP server port, defaults to None (587 for SMTP)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param imap_port:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">IMAP server port, defaults to None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param is_oauth:</th><td class=\"field-body\">Use XOAUTH2 protocol with a base64 encoded OAuth2 string as\n<cite>password</cite></td>\n</tr>\n</tbody>\n</table>\n<p>Will use separately set credentials or those given in keyword call.</p>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Authorize</span><span class=\"p\">    </span><span class=\"c\">${username}</span><span class=\"p\">   </span><span class=\"c\">${password}</span><span class=\"p\">  </span><span class=\"c\">smtp_server=smtp.gmail.com</span><span class=\"p\">  </span><span class=\"c\">smtp_port=587</span>\n</pre>\n</div>\n",
      "shortdoc": "Authorize user to SMTP and IMAP servers.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
      "lineno": 463
    },
    {
      "name": "Authorize Imap",
      "args": [
        {
          "name": "account",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "account: str | None = None"
        },
        {
          "name": "password",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "password: str | None = None"
        },
        {
          "name": "imap_server",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "imap_server: str | None = None"
        },
        {
          "name": "imap_port",
          "types": [
            "int",
            "None"
          ],
          "typedocs": {
            "int": "integer",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "imap_port: int | None = None"
        },
        {
          "name": "is_oauth",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "is_oauth: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Authorize to IMAP server.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param account:</th><td class=\"field-body\">IMAP account name, defaults to None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param password:</th><td class=\"field-body\">IMAP account password, defaults to None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param imap_server:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">IMAP server address, defaults to None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param imap_port:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">IMAP server port, defaults to None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param is_oauth:</th><td class=\"field-body\">Use XOAUTH2 protocol with a base64 encoded OAuth2 string as\n<cite>password</cite></td>\n</tr>\n</tbody>\n</table>\n<p>Can be called without giving any parameters if library\nhas been initialized with necessary information and/or\nkeyword <tt class=\"docutils literal\">Set Credentials</tt> has been called.</p>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Authorize IMAP</span><span class=\"p\">    </span><span class=\"c\">${username}</span><span class=\"p\">   </span><span class=\"c\">${password}</span><span class=\"p\">  </span><span class=\"c\">imap.gmail.com</span><span class=\"p\">  </span><span class=\"c\">993</span>\n</pre>\n</div>\n",
      "shortdoc": "Authorize to IMAP server.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
      "lineno": 410
    },
    {
      "name": "Authorize Smtp",
      "args": [
        {
          "name": "account",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "account: str | None = None"
        },
        {
          "name": "password",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "password: str | None = None"
        },
        {
          "name": "smtp_server",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "smtp_server: str | None = None"
        },
        {
          "name": "smtp_port",
          "types": [
            "int",
            "None"
          ],
          "typedocs": {
            "int": "integer",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "smtp_port: int | None = None"
        },
        {
          "name": "is_oauth",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "is_oauth: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Authorize to SMTP server.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param account:</th><td class=\"field-body\">SMTP account name, defaults to None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param password:</th><td class=\"field-body\">SMTP account password, defaults to None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param smtp_server:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">SMTP server address, defaults to None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param smtp_port:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">SMTP server port, defaults to None (587 for SMTP)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param is_oauth:</th><td class=\"field-body\">Use XOAUTH2 protocol with a base64 encoded OAuth2 string as\n<cite>password</cite></td>\n</tr>\n</tbody>\n</table>\n<p>Can be called without giving any parameters if library\nhas been initialized with necessary information and/or\nkeyword <tt class=\"docutils literal\">Set Credentials</tt> has been called.</p>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Authorize SMTP</span><span class=\"p\">    </span><span class=\"c\">${username}</span><span class=\"p\">   </span><span class=\"c\">${password}</span><span class=\"p\">  </span><span class=\"c\">smtp.gmail.com</span><span class=\"p\">  </span><span class=\"c\">587</span>\n</pre>\n</div>\n",
      "shortdoc": "Authorize to SMTP server.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
      "lineno": 356
    },
    {
      "name": "Convert Eml File Into Message",
      "args": [
        {
          "name": "eml_filepath",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "eml_filepath: str"
        },
        {
          "name": "save_attachments_directory",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "save_attachments_directory: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Converts EML file into message dictionary.</p>\n<p>Returned dictionary contains:</p>\n<ul class=\"simple\">\n<li><strong>headers</strong> of the email</li>\n<li><strong>attachments</strong> the filenames of the attachments or if attachments\nhave been saved then they are absolute filepaths to each attachment</li>\n<li><strong>body_text</strong> is the TEXT formatted content of the email body</li>\n<li><strong>body_html</strong> is the HTML formatted content of the email body</li>\n</ul>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param eml_filepath:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">filepath to the EML file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param save_attachments_directory:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">path to the directory where possible\nattachments will be saved to, if not given then attachment filenames are\nreturned in a list of the return dictionary in the key 'attachments'</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">dictionary containing information aboutthe EML message</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Converts EML file into message dictionary.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
      "lineno": 1960
    },
    {
      "name": "Create Folder",
      "args": [
        {
          "name": "folder_name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "folder_name: str = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Create email folder</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param folder_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">name for the new folder</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">True if operation was successful, False if not</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Create Folder</span><span class=\"p\">   </span><span class=\"c\">filtered</span>\n</pre>\n</div>\n",
      "shortdoc": "Create email folder",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
      "lineno": 1450
    },
    {
      "name": "Delete Folder",
      "args": [
        {
          "name": "folder_name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "folder_name: str = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Delete email folder</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param folder_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">current folder name</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">True if operation was successful, False if not</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Delete Folder</span><span class=\"p\">   </span><span class=\"c\">filtered</span>\n</pre>\n</div>\n",
      "shortdoc": "Delete email folder",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
      "lineno": 1422
    },
    {
      "name": "Delete Message",
      "args": [
        {
          "name": "criterion",
          "types": [
            "str",
            "dict"
          ],
          "typedocs": {
            "str": "string",
            "dict": "dictionary"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "criterion: str | dict = None"
        },
        {
          "name": "source_folder",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "source_folder: str = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Delete single message from server based on criterion.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param criterion:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">filter messages based on this search, can also be a\nmessage dictionary</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param source_folder:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">defaults to already selected folder, but can be\nset to delete message in a specific folder</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">True if success, False if not</td>\n</tr>\n</tbody>\n</table>\n<p>If criterion does not return exactly 1 message then delete is not done.</p>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Delete Message</span><span class=\"p\">  </span><span class=\"c\">SUBJECT &quot;Greetings RPA developer&quot;</span>\n</pre>\n</div>\n",
      "shortdoc": "Delete single message from server based on criterion.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
      "lineno": 965
    },
    {
      "name": "Delete Messages",
      "args": [
        {
          "name": "criterion",
          "types": [
            "str",
            "list"
          ],
          "typedocs": {
            "str": "string",
            "list": "list"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "criterion: str | list = None"
        },
        {
          "name": "limit",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "limit: int = None"
        },
        {
          "name": "source_folder",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "source_folder: str = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Delete messages from server based on criterion.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param criterion:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">filter messages based on this search, can also be a\nlist of message dictionaries</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param limit:</th><td class=\"field-body\">maximum number of message to delete</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param source_folder:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">defaults to already selected folder, but can be\nset to delete message in a specific folder</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">True if success, False if not</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Delete Messages</span><span class=\"p\">  </span><span class=\"c\">SUBJECT Greetings</span>\n</pre>\n</div>\n",
      "shortdoc": "Delete messages from server based on criterion.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
      "lineno": 1012
    },
    {
      "name": "Do Message Actions",
      "args": [
        {
          "name": "criterion",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "criterion: str = "
        },
        {
          "name": "actions",
          "types": [
            "list"
          ],
          "typedocs": {
            "list": "list"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "actions: list = None"
        },
        {
          "name": "source_folder",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "source_folder: str = None"
        },
        {
          "name": "target_folder",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "target_folder: str = None"
        },
        {
          "name": "labels",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "labels: str = None"
        },
        {
          "name": "limit",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "limit: int = None"
        },
        {
          "name": "overwrite",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "overwrite: bool = False"
        },
        {
          "name": "prefix",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "prefix: str = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Do actions to messages matching criterion and if given,\nsource folder</p>\n<p>Actions can be:</p>\n<ul class=\"simple\">\n<li>msg_copy</li>\n<li>msg_delete</li>\n<li>msg_flag</li>\n<li>msg_unflag</li>\n<li>msg_read</li>\n<li>msg_unread</li>\n<li>msg_save</li>\n<li>msg_attachment_save</li>\n<li>glabel_add</li>\n<li>glabel_remove</li>\n</ul>\n<p>Result object contains following attributes:</p>\n<ul class=\"simple\">\n<li>actions_done, number of messages on which action was performed</li>\n<li>message_count, number of messages matching criterion</li>\n<li>ids, message ids matching criterion</li>\n<li>uids, dictionary of message uids and message content</li>\n</ul>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param criterion:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">perform actions on messages matching this</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param actions:</th><td class=\"field-body\">list of actions to perform on matching messages</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param source_folder:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">look for messages in this folder, default all folders</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param target_folder:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">can be file path or email folder\n(for example action: msg_copy)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param labels:</th><td class=\"field-body\">comma separated list of labels (for example action: glabel_add)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param limit:</th><td class=\"field-body\">maximum number of messages (for example action: msg_delete)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param overwrite:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">to control if file should overwrite\n(for example action: msg_attachment_save)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param prefix:</th><td class=\"field-body\">prefix to be added into filename (for example: msg_save)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">result object</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${actions}=</span><span class=\"p\">   </span><span class=\"c\">Create List</span><span class=\"p\">  </span><span class=\"c\">msg_unflag</span><span class=\"p\">  </span><span class=\"c\">msg_read</span><span class=\"p\">  </span><span class=\"c\">msg_save</span><span class=\"p\">  </span><span class=\"c\">msg_attachment_save</span><span class=\"p\">\n</span><span class=\"c\">Do Message Actions</span><span class=\"p\">    </span><span class=\"c\">SUBJECT &quot;Order confirmation&quot;</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">                   </span><span class=\"c\">${actions}</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">                   </span><span class=\"c\">source_folder=XXX</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">                   </span><span class=\"c\">target_folder=${CURDIR}</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">                   </span><span class=\"c\">overwrite=True</span>\n</pre>\n</div>\n",
      "shortdoc": "Do actions to messages matching criterion and if given, source folder",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
      "lineno": 1786
    },
    {
      "name": "Email To Document",
      "args": [
        {
          "name": "input_source",
          "types": [
            "str",
            "Path",
            "BinaryIO",
            "bytes"
          ],
          "typedocs": {
            "str": "string",
            "bytes": "bytes"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "input_source: str | Path | BinaryIO | bytes"
        },
        {
          "name": "output_path",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "output_path: str | Path"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Convert a raw e-mail into a Word document.</p>\n<p>This keyword extracts the HTML (or Text) content from the passed input e-mail\nand saves it into docx format at the provided output path.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param input_source:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Path, bytes or file-like object with the input raw e-mail\ncontent</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param output_path:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Where to save the output docx file</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Convert email to docx</span><span class=\"p\">\n    </span><span class=\"c\">${mail_file} =</span><span class=\"p\">     </span><span class=\"c\">Get Work Item File</span><span class=\"p\">    </span><span class=\"c\">mail.eml</span><span class=\"p\">\n    </span><span class=\"c\">Email To Document</span><span class=\"p\">    </span><span class=\"c\">${mail_file}</span><span class=\"p\">    </span><span class=\"c\">${OUTPUT_DIR}${/}mail.docx</span>\n</pre>\n<p><strong>Python</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span><span class=\"w\">\n</span><span class=\"kn\">from</span> <span class=\"nn\">RPA.Email.ImapSmtp</span> <span class=\"kn\">import</span> <span class=\"n\">ImapSmtp</span><span class=\"w\">\n</span><span class=\"kn\">from</span> <span class=\"nn\">RPA.Robocorp.WorkItems</span> <span class=\"kn\">import</span> <span class=\"n\">WorkItems</span><span class=\"w\">\n\n</span><span class=\"n\">lib_work</span> <span class=\"o\">=</span> <span class=\"n\">WorkItems</span><span class=\"p\">()</span><span class=\"w\">\n</span><span class=\"n\">lib_mail</span> <span class=\"o\">=</span> <span class=\"n\">ImapSmtp</span><span class=\"p\">()</span><span class=\"w\">\n\n</span><span class=\"k\">def</span> <span class=\"nf\">convert_email_to_docx</span><span class=\"p\">():</span><span class=\"w\">\n</span>    <span class=\"n\">lib_work</span><span class=\"o\">.</span><span class=\"n\">get_input_work_item</span><span class=\"p\">()</span><span class=\"w\">\n</span>    <span class=\"n\">mail_file</span> <span class=\"o\">=</span> <span class=\"n\">lib_work</span><span class=\"o\">.</span><span class=\"n\">get_work_item_file</span><span class=\"p\">(</span><span class=\"s2\">&quot;mail.eml&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span>    <span class=\"n\">lib_mail</span><span class=\"o\">.</span><span class=\"n\">email_to_document</span><span class=\"p\">(</span><span class=\"n\">mail_file</span><span class=\"p\">,</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s2\">&quot;./output&quot;</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"s2\">&quot;mail.docx&quot;</span><span class=\"p\">)</span>\n</pre>\n</div>\n",
      "shortdoc": "Convert a raw e-mail into a Word document.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
      "lineno": 1866
    },
    {
      "name": "Flag Messages",
      "args": [
        {
          "name": "criterion",
          "types": [
            "str",
            "dict"
          ],
          "typedocs": {
            "str": "string",
            "dict": "dictionary"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "criterion: str | dict = None"
        },
        {
          "name": "unflag",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "unflag: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Mark messages as <cite>flagged</cite></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param criterion:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">mark messages matching criterion</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param unflag:</th><td class=\"field-body\">to mark messages as not <cite>flagged</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">successful operations (int), matching messages (int)</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${flagged}</span><span class=\"p\">  </span><span class=\"c\">${oftotal}</span><span class=\"p\">    </span><span class=\"c\">Flag Messages</span><span class=\"p\">   </span><span class=\"c\">SUBJECT rpa</span><span class=\"p\">\n</span><span class=\"c\">${unflagged}</span><span class=\"p\">  </span><span class=\"c\">${oftotal}</span><span class=\"p\">  </span><span class=\"c\">Flag Messages</span><span class=\"p\">   </span><span class=\"c\">SUBJECT rpa</span><span class=\"p\">  </span><span class=\"c\">unflag=True</span>\n</pre>\n</div>\n",
      "shortdoc": "Mark messages as `flagged`",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
      "lineno": 1478
    },
    {
      "name": "Generate Oauth String",
      "args": [
        {
          "name": "username",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "username: str"
        },
        {
          "name": "access_token",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "access_token: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Generate and return an OAuth2 string compatible with the IMAP/POP/SMTP\nXOAUTH2 protocol.</p>\n<p>This string usually gets passed to the <tt class=\"docutils literal\">Authorize</tt> keyword as <cite>password</cite> when\n<cite>is_oauth=${True}</cite>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param username:</th><td class=\"field-body\">The e-mail address you're going to send the e-mail with.</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param access_token:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Access token string found in the dictionary obtained with\n<tt class=\"docutils literal\">Get OAuth Token</tt> or <tt class=\"docutils literal\">Refresh OAuth Token</tt>.</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">returns:</th><td class=\"field-body\">Base64 encoded string packing these credentials and replacing the\nlegacy <cite>password</cite> when enabling the OAuth2 flow.</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example: Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Authorize ImapSmtp</span><span class=\"p\">\n    ${</span><span class=\"nv\">password</span><span class=\"p\">} =   </span><span class=\"nf\">Generate OAuth String</span><span class=\"p\">    ${</span><span class=\"nv\">username</span><span class=\"p\">}\n    ...    ${</span><span class=\"nv\">token</span><span class=\"p\">}</span><span class=\"s\">[access_token]</span><span class=\"p\">\n    </span><span class=\"nf\">Authorize</span><span class=\"p\">    </span><span class=\"s\">account=</span><span class=\"p\">${</span><span class=\"nv\">username</span><span class=\"p\">}    </span><span class=\"s\">is_oauth=</span><span class=\"p\">${</span><span class=\"nv\">True</span><span class=\"p\">}\n    ...     </span><span class=\"s\">password=</span><span class=\"p\">${</span><span class=\"nv\">password</span><span class=\"p\">}</span>\n</pre>\n</div>\n",
      "shortdoc": "Generate and return an OAuth2 string compatible with the IMAP/POP/SMTP XOAUTH2 protocol.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
      "lineno": 1933
    },
    {
      "name": "Generate Oauth Url",
      "args": [
        {
          "name": "client_id",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "client_id: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Generates an authorization URL which must be opened by the user to start the\nOAuth2 flow and obtain an authorization code as response.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param client_id:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Client app ID. (generated by the provider)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">returns:</th><td class=\"field-body\">Authorization URL string not containing any sensitive info in it.</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example: Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Start OAuth Flow</span><span class=\"p\">\n    ${</span><span class=\"nv\">auth_url</span><span class=\"p\">} =    </span><span class=\"nf\">Generate OAuth URL</span><span class=\"p\">\n    ...     </span><span class=\"s\">client_id=810482312368-19htmcgcj*******googleusercontent.com</span><span class=\"p\">\n    </span><span class=\"nf\">Log</span><span class=\"p\">     </span><span class=\"s\">Start OAuth2 flow: </span><span class=\"p\">${</span><span class=\"nv\">auth_url</span><span class=\"p\">}</span>\n</pre>\n</div>\n",
      "shortdoc": "Generates an authorization URL which must be opened by the user to start the OAuth2 flow and obtain an authorization code as response.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/common.py",
      "lineno": 74
    },
    {
      "name": "Get Decoded Email Body",
      "args": [
        {
          "name": "message",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "message"
        },
        {
          "name": "html_first",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "html_first: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Decodes email body and extracts its text/html content.</p>\n<p>Automatically detects character set if the header is not set.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param message:</th><td class=\"field-body\">Raw 7-bit message body input e.g. from <cite>imaplib</cite>. Double\nencoded in quoted-printable and latin-1</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param html_first:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Prioritize html extraction over text when this is True</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">returns:</th><td class=\"field-body\">Message body as unicode string and a boolean telling if the message\nhas attachments</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Decodes email body and extracts its text/html content.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
      "lineno": 713
    },
    {
      "name": "Get Folder List",
      "args": [
        {
          "name": "subdirectory",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "subdirectory: str = None"
        },
        {
          "name": "pattern",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "pattern: str = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Get list of folders on the server</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param subdirectory:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">list subdirectories for this folder</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param pattern:</th><td class=\"field-body\">list folders matching this pattern</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">list of folders</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">&#64;{folders}</span><span class=\"p\">  </span><span class=\"c\">Get Folder List</span><span class=\"p\">\n</span><span class=\"c\">&#64;{folders}</span><span class=\"p\">  </span><span class=\"c\">Get Folder List</span><span class=\"p\">  </span><span class=\"c\">pattern=important</span><span class=\"p\">\n</span><span class=\"c\">&#64;{folders}</span><span class=\"p\">  </span><span class=\"c\">Get Folder List</span><span class=\"p\">  </span><span class=\"c\">subdirectory=sub</span>\n</pre>\n</div>\n",
      "shortdoc": "Get list of folders on the server",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
      "lineno": 1327
    },
    {
      "name": "Get Oauth Token",
      "args": [
        {
          "name": "client_secret",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "client_secret: str"
        },
        {
          "name": "response_url",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "response_url: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Exchanges the code obtained previously with <tt class=\"docutils literal\">Generate OAuth URL</tt> for a\ntoken.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param client_secret:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Client app secret. (generated by the provider)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param response_url:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">The final URL containing the authorization <cite>code</cite> found in\nthe address bar after authenticating and authorizing the Client app\nthrough the authorization URL.</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">returns:</th><td class=\"field-body\">A dictionary containing the access &amp; refresh token, plus metadata.</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example: Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Finish OAuth Flow</span><span class=\"p\">\n    ${</span><span class=\"nv\">token</span><span class=\"p\">} =      </span><span class=\"nf\">Get OAuth Token</span><span class=\"p\">\n    ...     </span><span class=\"s\">client_secret=GOCSPX-******mqZAW89</span><span class=\"p\">\n    ...     </span><span class=\"s\">response_url=</span><span class=\"p\">${</span><span class=\"nv\">resp_url</span><span class=\"p\">}  </span><span class=\"c\"># redirect of <a href=\"#Generate%20Oauth%20Url\" class=\"name\">Generate OAuth URL</a></span>\n</pre>\n</div>\n",
      "shortdoc": "Exchanges the code obtained previously with ``Generate OAuth URL`` for a token.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/common.py",
      "lineno": 114
    },
    {
      "name": "List Messages",
      "args": [
        {
          "name": "criterion",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "criterion: str = "
        },
        {
          "name": "source_folder",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "source_folder: str = None"
        },
        {
          "name": "readonly",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "True",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "readonly: bool = True"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Return list of messages matching criterion.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param criterion:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">list emails matching this, defaults to &quot;&quot;</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param source_folder:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">list messages from this folder</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param readonly:</th><td class=\"field-body\">set False if you want to mark matching messages as read</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">list of messages</td>\n</tr>\n</tbody>\n</table>\n<p><em>Note.</em> listing messages without <cite>source_folder</cite> might take a long time</p>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">&#64;{emails}</span><span class=\"p\">  </span><span class=\"c\">List Messages</span><span class=\"p\">  </span><span class=\"c\">SUBJECT &quot;rpa task&quot;</span><span class=\"p\">\n</span><span class=\"c\">FOR</span><span class=\"p\">  </span><span class=\"c\">${email}</span><span class=\"p\">  </span><span class=\"c\">IN</span><span class=\"p\">  </span><span class=\"c\">&#64;{EMAILS}</span><span class=\"p\">\n    </span><span class=\"c\">Log</span><span class=\"p\">  </span><span class=\"c\">${email}[Subject]</span><span class=\"p\">\n    </span><span class=\"c\">Log</span><span class=\"p\">  </span><span class=\"c\">${email}[From]</span><span class=\"p\">\n    </span><span class=\"c\">Log</span><span class=\"p\">  </span><span class=\"c\">${email}[Date]</span><span class=\"p\">\n    </span><span class=\"c\">Log</span><span class=\"p\">  </span><span class=\"c\">${email}[Delivered-To]</span><span class=\"p\">\n    </span><span class=\"c\">Log</span><span class=\"p\">  </span><span class=\"c\">${email}[Received]</span><span class=\"p\">\n    </span><span class=\"c\">Log</span><span class=\"p\">  </span><span class=\"c\">${email}[Has-Attachments]</span><span class=\"p\">\n    </span><span class=\"c\">Log</span><span class=\"p\">  </span><span class=\"c\">${email}[uid]</span><span class=\"p\">\n</span><span class=\"c\">END</span>\n</pre>\n</div>\n",
      "shortdoc": "Return list of messages matching criterion.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
      "lineno": 1101
    },
    {
      "name": "Mark As Read",
      "args": [
        {
          "name": "criterion",
          "types": [
            "str",
            "dict"
          ],
          "typedocs": {
            "str": "string",
            "dict": "dictionary"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "criterion: str | dict = None"
        },
        {
          "name": "unread",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "unread: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Mark messages as <cite>read</cite></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param criterion:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">mark messages matching criterion</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param unread:</th><td class=\"field-body\">to mark messages as not <cite>read</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">successful operations (int), matching messages (int)</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${read}</span><span class=\"p\">  </span><span class=\"c\">${oftotal}</span><span class=\"p\">  </span><span class=\"c\">Mark As Read</span><span class=\"p\">   </span><span class=\"c\">SUBJECT rpa</span>\n</pre>\n</div>\n",
      "shortdoc": "Mark messages as `read`",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
      "lineno": 1521
    },
    {
      "name": "Mark As Unread",
      "args": [
        {
          "name": "criterion",
          "types": [
            "str",
            "dict"
          ],
          "typedocs": {
            "str": "string",
            "dict": "dictionary"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "criterion: str | dict = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Mark messages as not <cite>read</cite></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param criterion:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">mark messages matching criterion</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">successful operations (int), matching messages (int)</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${unread}</span><span class=\"p\">  </span><span class=\"c\">${oftotal}</span><span class=\"p\">  </span><span class=\"c\">Mark As Unread</span><span class=\"p\">   </span><span class=\"c\">SUBJECT rpa</span>\n</pre>\n</div>\n",
      "shortdoc": "Mark messages as not `read`",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
      "lineno": 1548
    },
    {
      "name": "Move Messages",
      "args": [
        {
          "name": "criterion",
          "types": [
            "str",
            "dict"
          ],
          "typedocs": {
            "str": "string",
            "dict": "dictionary"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "criterion: str | dict = None"
        },
        {
          "name": "target_folder",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "target_folder: str = None"
        },
        {
          "name": "source_folder",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "source_folder: str = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Move messages from source folder to target folder</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param criterion:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">move messages matching criterion</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param source_folder:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">location of the messages, default <cite>INBOX</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param target_folder:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">where messages should be move into</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">True if all move operations succeeded, False if not</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${result}=</span><span class=\"p\">    </span><span class=\"c\">Move Messages</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">criterion=SUBJECT &quot;order confirmation 32&quot;</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">target_folder=yyy</span><span class=\"p\">\n\n</span><span class=\"c\">${result}=</span><span class=\"p\">    </span><span class=\"c\">Move Messages</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">criterion=ALL</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">source_folder=yyy</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">target_folder=XXX</span>\n</pre>\n</div>\n",
      "shortdoc": "Move messages from source folder to target folder",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
      "lineno": 1612
    },
    {
      "name": "Move Messages By Ids",
      "args": [
        {
          "name": "message_ids",
          "types": [
            "str",
            "List"
          ],
          "typedocs": {
            "str": "string",
            "List": "list"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "message_ids: str | List"
        },
        {
          "name": "target_folder",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "target_folder: str"
        },
        {
          "name": "source_folder",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "source_folder: str"
        },
        {
          "name": "use_gmail_search",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "use_gmail_search: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Move message by their Message-ID's from source folder to target folder</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param message_ids:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">one Message-ID as string or list of Message-IDs</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param source_folder:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">location of the messages, default <cite>INBOX</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param target_folder:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">where messages should be move into</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param use_gmail_search:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">set to True to use <cite>Rfc822msgid</cite> search, default\nis <cite>HEADER Message-ID</cite> search</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">True if all move operations succeeded, False if not</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Move message by their Message-ID's from source folder to target folder",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
      "lineno": 1677
    },
    {
      "name": "Refresh Oauth Token",
      "args": [
        {
          "name": "client_id",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "client_id: str"
        },
        {
          "name": "client_secret",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "client_secret: str"
        },
        {
          "name": "token",
          "types": [
            "dict"
          ],
          "typedocs": {
            "dict": "dictionary"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "token: dict"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Refreshes the token as the access one usually expires after 1h and the\nrefresh one never expires. (as long as it doesn't get revoked)</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param client_id:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Client app ID. (generated by the provider)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param client_secret:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Client app secret. (generated by the provider)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param token:</th><td class=\"field-body\">Full token dictionary previously obtained with\n<tt class=\"docutils literal\">Get OAuth Token</tt>.</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">returns:</th><td class=\"field-body\">A token dictionary containing a new access token and updated\nmetadata.</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example: Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Refresh OAuth Flow</span><span class=\"p\">\n    ${</span><span class=\"nv\">token</span><span class=\"p\">} =      </span><span class=\"nf\">Refresh OAuth Token</span><span class=\"p\">\n    ...     </span><span class=\"s\">client_id=810482312368-19htmcgcj*******googleusercontent.com</span><span class=\"p\">\n    ...     </span><span class=\"s\">client_secret=GOCSPX-******mqZAW89</span><span class=\"p\">\n    ...     </span><span class=\"s\">token=</span><span class=\"p\">${</span><span class=\"nv\">token</span><span class=\"p\">}  </span><span class=\"c\"># from <a href=\"#Get%20Oauth%20Token\" class=\"name\">Get OAuth Token</a></span>\n</pre>\n</div>\n",
      "shortdoc": "Refreshes the token as the access one usually expires after 1h and the refresh one never expires. (as long as it doesn't get revoked)",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/common.py",
      "lineno": 143
    },
    {
      "name": "Remove Gmail Labels",
      "args": [
        {
          "name": "labels",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "labels"
        },
        {
          "name": "criterion",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "criterion"
        },
        {
          "name": "source_folder",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "source_folder: str = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Remove GMail labels to messages matching criterion and if given,\nsource folder</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param labels:</th><td class=\"field-body\">comma separated list of labels to remove</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param criterion:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">unlabel messages matching criterion</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param source_folder:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">look for messages in this folder, default all folders</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">status of the operation</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Remove Gmail Labels</span><span class=\"p\">  </span><span class=\"c\">wip</span><span class=\"p\">  </span><span class=\"c\">SUBJECT &quot;order confirmation&quot;</span><span class=\"p\">\n</span><span class=\"c\">Remove Gmail Labels</span><span class=\"p\">  </span><span class=\"c\">wip</span><span class=\"p\">  </span><span class=\"c\">SUBJECT &quot;order confirmation&quot;</span><span class=\"p\">  </span><span class=\"c\">customerfolder</span>\n</pre>\n</div>\n",
      "shortdoc": "Remove GMail labels to messages matching criterion and if given, source folder",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
      "lineno": 1765
    },
    {
      "name": "Rename Folder",
      "args": [
        {
          "name": "oldname",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "oldname: str = None"
        },
        {
          "name": "newname",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "newname: str = None"
        },
        {
          "name": "suppress_error",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "suppress_error: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Rename email folder</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param oldname:</th><td class=\"field-body\">current folder name</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param newname:</th><td class=\"field-body\">new name for the folder</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param suppress_error:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">to silence warning message, defaults to False</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">True if operation was successful, False if not</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Rename Folder</span><span class=\"p\">   </span><span class=\"c\">subfolder</span><span class=\"p\">   </span><span class=\"c\">filtered</span>\n</pre>\n</div>\n",
      "shortdoc": "Rename email folder",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
      "lineno": 1388
    },
    {
      "name": "Save Attachment",
      "args": [
        {
          "name": "message",
          "types": [
            "dict",
            "Message"
          ],
          "typedocs": {
            "dict": "dictionary"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "message: dict | Message"
        },
        {
          "name": "target_folder",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "target_folder: str | None"
        },
        {
          "name": "overwrite",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "overwrite: bool"
        },
        {
          "name": "prefix",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "prefix: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Save mail attachment of a single given email on the local disk.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param message:</th><td class=\"field-body\">message item</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param target_folder:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">local folder for saving attachments to (needs to exist),\ndefaults to user's home directory if None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param overwrite:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">overwrite existing file if True, defaults to False</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param prefix:</th><td class=\"field-body\">optional filename prefix added to the attachments, empty by\ndefault</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">list of saved attachments (list of absolute filepaths) in one email</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">&#64;{emails} =</span><span class=\"p\">    </span><span class=\"c\">List Messages</span><span class=\"p\">    </span><span class=\"c\">ALL</span><span class=\"p\">\n</span><span class=\"c\">FOR</span><span class=\"p\">    </span><span class=\"c\">${email}</span><span class=\"p\">    </span><span class=\"c\">IN</span><span class=\"p\">    </span><span class=\"c\">&#64;{emails}</span><span class=\"p\">\n    </span><span class=\"c\">IF</span><span class=\"p\">    </span><span class=\"c\">${email}[Has-Attachments]</span><span class=\"p\">\n        </span><span class=\"c\">Log To Console</span><span class=\"p\">    </span><span class=\"c\">Saving attachment for: ${email}[Subject]</span><span class=\"p\">\n        </span><span class=\"c\">${attachments} =</span><span class=\"p\">    </span><span class=\"c\">Save Attachment</span><span class=\"p\">\n        </span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">${email}</span><span class=\"p\">\n        </span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">target_folder=${CURDIR}</span><span class=\"p\">\n        </span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">overwrite=${True}</span><span class=\"p\">\n        </span><span class=\"c\">Log To Console</span><span class=\"p\">    </span><span class=\"c\">Saved attachments: ${attachments}</span><span class=\"p\">\n    </span><span class=\"c\">END</span><span class=\"p\">\n</span><span class=\"c\">END</span>\n</pre>\n</div>\n",
      "shortdoc": "Save mail attachment of a single given email on the local disk.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
      "lineno": 1186
    },
    {
      "name": "Save Attachments",
      "args": [
        {
          "name": "criterion",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "criterion: str = "
        },
        {
          "name": "target_folder",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "target_folder: str | None = None"
        },
        {
          "name": "overwrite",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "overwrite: bool = False"
        },
        {
          "name": "prefix",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "prefix: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Save mail attachments of emails matching criterion on the local disk.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param criterion:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">attachments are saved for mails matching this, defaults to &quot;&quot;</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param target_folder:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">local folder for saving attachments to (needs to exist),\ndefaults to user's home directory if None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param overwrite:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">overwrite existing file if True, defaults to False</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param prefix:</th><td class=\"field-body\">optional filename prefix added to the attachments, empty by\ndefault</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">list of saved attachments (absolute file paths) of all emails</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${attachments} =</span><span class=\"p\">    </span><span class=\"c\">Save Attachments</span><span class=\"p\">    </span><span class=\"c\">SUBJECT &quot;rpa task&quot;</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">target_folder=${CURDIR}${/}messages</span><span class=\"p\">  </span><span class=\"c\">overwrite=${True}</span><span class=\"p\">\n</span><span class=\"c\">FOR</span><span class=\"p\">  </span><span class=\"c\">${file}</span><span class=\"p\">  </span><span class=\"c\">IN</span><span class=\"p\">  </span><span class=\"c\">&#64;{attachments}</span><span class=\"p\">\n    </span><span class=\"c\">OperatingSystem.File Should Exist</span><span class=\"p\">  </span><span class=\"c\">${file}</span><span class=\"p\">\n</span><span class=\"c\">END</span>\n</pre>\n</div>\n",
      "shortdoc": "Save mail attachments of emails matching criterion on the local disk.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
      "lineno": 1149
    },
    {
      "name": "Save Messages",
      "args": [
        {
          "name": "criterion",
          "types": [
            "str",
            "dict",
            "list",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "dict": "dictionary",
            "list": "list",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "criterion: str | dict | list | None = None"
        },
        {
          "name": "target_folder",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "target_folder: str | None = None"
        },
        {
          "name": "prefix",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "prefix: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Save messages based on criteria and store them to target folder\nwith attachment files.</p>\n<p>Does not save message if <cite>target_folder</cite> is not given.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param criterion:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">filter messages based on this, defaults to &quot;&quot;</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param target_folder:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">path to folder where message are saved, defaults to None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param prefix:</th><td class=\"field-body\">optional filename prefix added to the attachments, empty by\ndefault</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">True if succeeded, False otherwise</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Save Messages</span><span class=\"p\">  </span><span class=\"c\">SUBJECT Important message</span><span class=\"p\">  </span><span class=\"c\">target_folder=${USERDIR}${/}messages</span>\n</pre>\n</div>\n",
      "shortdoc": "Save messages based on criteria and store them to target folder with attachment files.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
      "lineno": 1056
    },
    {
      "name": "Select Folder",
      "args": [
        {
          "name": "folder_name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "INBOX",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "folder_name: str = INBOX"
        },
        {
          "name": "readonly",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "readonly: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Select folder by name</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param folder_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">name of the folder to select</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param readonly:</th><td class=\"field-body\">if set to True then message flags are not modified</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">message count in the selected folder</td>\n</tr>\n</tbody>\n</table>\n<p>Returns number of messages in the folder or\nexception if folder does not exist on the server.</p>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Select Folder</span><span class=\"p\">   </span><span class=\"c\">subfolder</span>\n</pre>\n</div>\n",
      "shortdoc": "Select folder by name",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
      "lineno": 1361
    },
    {
      "name": "Send Message",
      "args": [
        {
          "name": "sender",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "sender: str"
        },
        {
          "name": "recipients",
          "types": [
            "List[str]",
            "str",
            "None"
          ],
          "typedocs": {
            "List[str]": "list",
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "recipients: List[str] | str | None = None"
        },
        {
          "name": "subject",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "subject: str = "
        },
        {
          "name": "body",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "body: str = "
        },
        {
          "name": "attachments",
          "types": [
            "List[str]",
            "str",
            "None"
          ],
          "typedocs": {
            "List[str]": "list",
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "attachments: List[str] | str | None = None"
        },
        {
          "name": "html",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "html: bool = False"
        },
        {
          "name": "images",
          "types": [
            "List[str]",
            "str",
            "None"
          ],
          "typedocs": {
            "List[str]": "list",
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "images: List[str] | str | None = None"
        },
        {
          "name": "cc",
          "types": [
            "List[str]",
            "str",
            "None"
          ],
          "typedocs": {
            "List[str]": "list",
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "cc: List[str] | str | None = None"
        },
        {
          "name": "bcc",
          "types": [
            "List[str]",
            "str",
            "None"
          ],
          "typedocs": {
            "List[str]": "list",
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "bcc: List[str] | str | None = None"
        },
        {
          "name": "attachment_position",
          "types": [
            "AttachmentPosition",
            "None"
          ],
          "typedocs": {
            "AttachmentPosition": "AttachmentPosition",
            "None": "None"
          },
          "defaultValue": "TOP",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "attachment_position: AttachmentPosition | None = TOP"
        },
        {
          "name": "in_reply_to",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "in_reply_to: str | None = None"
        },
        {
          "name": "return_path",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "return_path: str | None = None"
        },
        {
          "name": "reply_to",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "reply_to: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Send SMTP email</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param sender:</th><td class=\"field-body\">who is sending, ie. 'from'</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param recipients:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">who is receiving, ie. 'to'</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param subject:</th><td class=\"field-body\">mail subject field</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param body:</th><td class=\"field-body\">mail body content</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param attachments:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">list of filepaths to attach</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param html:</th><td class=\"field-body\">if message content is in HTML, default <cite>False</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param images:</th><td class=\"field-body\">list of filepaths for inline images</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param cc:</th><td class=\"field-body\">list of email addresses for email 'cc' field</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param bcc:</th><td class=\"field-body\">list of email addresses for email 'bcc' field</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param attachment_position:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">content position for attachment, default <cite>top</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param in_reply_to:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">the 'Message ID' to which this message is in reply to,\nfor example <cite>&lt;message_id_for_reply_to&gt;</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param return_path:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">email address which should receive &quot;bounce messages&quot;</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param reply_to:</th><td class=\"field-body\">email address which should receive the reply</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Valid sender values</strong></p>\n<ul class=\"simple\">\n<li>First Lastname &lt;<a class=\"reference external\" href=\"mailto:address&#64;domain\">address&#64;domain</a>&gt;</li>\n<li><a class=\"reference external\" href=\"mailto:address&#64;domain\">address&#64;domain</a></li>\n</ul>\n<p><strong>About in_reply_to</strong></p>\n<p>In addition of setting <cite>in_reply_to</cite> parameter to match the 'Message ID'\nof the email this message is replying to, some email servers require that\nalso subject of the original email is included in the reply email subject\nwith <a href=\"#system-message-1\"><span class=\"problematic\" id=\"problematic-1\"><span class=\"name\"></span></a>re: </span> prefix, ie. &quot;re: Why it is best to use Robocorp RPA&quot; or with\nthe original email subject.</p>\n<div class=\"system-message\" id=\"system-message-1\">\n<p class=\"system-message-title\">System Message: WARNING/2 (<tt class=\"docutils\">&lt;string&gt;</tt>, line 25); <em><a href=\"#problematic-1\">backlink</a></em></p>\nInline interpreted text or phrase reference start-string without end-string.</div>\n<p>And please note that <cite>in_reply_to</cite> the 'Message ID' needs to contain <cite>&lt;</cite> in\nthe start of the ID and <cite>&gt;</cite> at the end of the ID.</p>\n<p><strong>About return_path</strong></p>\n<p>Email servers tend to set 'Return-Path' of the email on their own so in\nsome cases user given address won't work as the email server does not\nuse the user set address. If possible, the email server's configuration\ncan be changed to ensure that 'Return-Path' header is respected.</p>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Send Message</span><span class=\"p\">  </span><span class=\"c\">sender&#64;domain.com</span><span class=\"p\">  </span><span class=\"c\">recipient&#64;domain.com</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">           </span><span class=\"c\">cc=need_to_know&#64;domain.com</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">           </span><span class=\"c\">bcc=hidden_copy&#64;domain.com</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">           </span><span class=\"c\">subject=Greetings Software Robot Developer</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">           </span><span class=\"c\">body=${email_body}</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">           </span><span class=\"c\">attachments=${CURDIR}${/}report.pdf</span><span class=\"p\">\n\n</span><span class=\"c\"># Fixing attachments to the bottom of the content\nSend Message</span><span class=\"p\">  </span><span class=\"c\">sender&#64;domain.com</span><span class=\"p\">  </span><span class=\"c\">recipient&#64;domain.com</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">           </span><span class=\"c\">subject=Greetings Software Robot Developer</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">           </span><span class=\"c\">body=${email_body}</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">           </span><span class=\"c\">attachments=${CURDIR}${/}report.pdf</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">           </span><span class=\"c\">attachment_position=bottom</span>\n</pre>\n</div>\n",
      "shortdoc": "Send SMTP email",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
      "lineno": 510
    },
    {
      "name": "Send Smtp Hello",
      "args": [],
      "doc": "<div class=\"document\">\n<p>Send hello message to SMTP server.</p>\n<p>Required step when creating SMTP connection.</p>\n</div>\n",
      "shortdoc": "Send hello message to SMTP server.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
      "lineno": 501
    },
    {
      "name": "Set Credentials",
      "args": [
        {
          "name": "account",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "account: str | None = None"
        },
        {
          "name": "password",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "password: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Set credentials</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param account:</th><td class=\"field-body\">user account as string, defaults to None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param password:</th><td class=\"field-body\">user password as string, defaults to None</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Set Credentials</span><span class=\"p\">   </span><span class=\"c\">${username}</span><span class=\"p\">   </span><span class=\"c\">${password}</span><span class=\"p\">\n</span><span class=\"c\">Authorize</span>\n</pre>\n</div>\n",
      "shortdoc": "Set credentials",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
      "lineno": 338
    },
    {
      "name": "Unflag Messages",
      "args": [
        {
          "name": "criterion",
          "types": [
            "str",
            "dict"
          ],
          "typedocs": {
            "str": "string",
            "dict": "dictionary"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "criterion: str | dict = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Mark messages as not <cite>flagged</cite></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param criterion:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">mark messages matching criterion</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">successful operations (int), matching messages (int)</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${unflagged}</span><span class=\"p\">  </span><span class=\"c\">${oftotal}</span><span class=\"p\">  </span><span class=\"c\">Unflag Messages</span><span class=\"p\">   </span><span class=\"c\">SUBJECT rpa</span>\n</pre>\n</div>\n",
      "shortdoc": "Mark messages as not `flagged`",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
      "lineno": 1506
    },
    {
      "name": "Wait For Message",
      "args": [
        {
          "name": "criterion",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "criterion: str = "
        },
        {
          "name": "timeout",
          "types": [
            "float"
          ],
          "typedocs": {
            "float": "float"
          },
          "defaultValue": "5.0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "timeout: float = 5.0"
        },
        {
          "name": "interval",
          "types": [
            "float"
          ],
          "typedocs": {
            "float": "float"
          },
          "defaultValue": "1.0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "interval: float = 1.0"
        },
        {
          "name": "readonly",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "True",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "readonly: bool = True"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Wait for email matching <cite>criterion</cite> to arrive into mailbox.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param criterion:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">message filter to wait for, defaults to &quot;&quot;</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param timeout:</th><td class=\"field-body\">total time in seconds to wait for email, defaults to 5.0</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param interval:</th><td class=\"field-body\">time in seconds for new check, defaults to 1.0</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param readonly:</th><td class=\"field-body\">set False if you want to mark matching messages as read</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">list of messages</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">&#64;{emails}</span><span class=\"p\">  </span><span class=\"c\">Wait For Message</span><span class=\"p\">  </span><span class=\"c\">SUBJECT &quot;rpa task&quot;</span><span class=\"p\">  </span><span class=\"c\">timeout=300</span><span class=\"p\">  </span><span class=\"c\">interval=10</span>\n</pre>\n</div>\n",
      "shortdoc": "Wait for email matching `criterion` to arrive into mailbox.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Email/ImapSmtp.py",
      "lineno": 1277
    }
  ],
  "dataTypes": {
    "enums": [
      {
        "type": "Enum",
        "name": "AttachmentPosition",
        "doc": "<div class=\"document\">\n<p>Possible attachment positions in the message content.</p>\n</div>\n",
        "members": [
          {
            "name": "TOP",
            "value": "1"
          },
          {
            "name": "BOTTOM",
            "value": "2"
          }
        ]
      },
      {
        "type": "Enum",
        "name": "OAuthProvider",
        "doc": "<div class=\"document\">\n<p>OAuth2 tested providers.</p>\n</div>\n",
        "members": [
          {
            "name": "GOOGLE",
            "value": "google"
          },
          {
            "name": "MICROSOFT",
            "value": "microsoft"
          }
        ]
      }
    ],
    "typedDicts": []
  },
  "typedocs": [
    {
      "type": "Enum",
      "name": "AttachmentPosition",
      "doc": "<div class=\"document\">\n<p>Possible attachment positions in the message content.</p>\n</div>\n",
      "usages": [
        "Send Message"
      ],
      "accepts": [
        "string"
      ],
      "members": [
        {
          "name": "TOP",
          "value": "1"
        },
        {
          "name": "BOTTOM",
          "value": "2"
        }
      ]
    },
    {
      "type": "Standard",
      "name": "boolean",
      "doc": "<p>Strings <code>TRUE</code>, <code>YES</code>, <code>ON</code> and <code>1</code> are converted to Boolean <code>True</code>, the empty string as well as strings <code>FALSE</code>, <code>NO</code>, <code>OFF</code> and <code>0</code> are converted to Boolean <code>False</code>, and the string <code>NONE</code> is converted to the Python <code>None</code> object. Other strings and other accepted values are passed as-is, allowing keywords to handle them specially if needed. All string comparisons are case-insensitive.</p>\n<p>Examples: <code>TRUE</code> (converted to <code>True</code>), <code>off</code> (converted to <code>False</code>), <code>example</code> (used as-is)</p>",
      "usages": [
        "Authorize",
        "Authorize Imap",
        "Authorize Smtp",
        "Do Message Actions",
        "Flag Messages",
        "Get Decoded Email Body",
        "List Messages",
        "Mark As Read",
        "Move Messages By Ids",
        "Rename Folder",
        "Save Attachment",
        "Save Attachments",
        "Select Folder",
        "Send Message",
        "Wait For Message"
      ],
      "accepts": [
        "string",
        "integer",
        "float",
        "None"
      ]
    },
    {
      "type": "Standard",
      "name": "bytes",
      "doc": "<p>Strings are converted to bytes so that each Unicode code point below 256 is directly mapped to a matching byte. Higher code points are not allowed. Robot Framework's <code>\\xHH</code> escape syntax is convenient with bytes having non-printable values.</p>\n<p>Examples: <code>good</code>, <code>hyv\u00e4</code> (same as <code>hyv\\xE4</code>), <code>\\x00</code> (the null byte)</p>",
      "usages": [
        "Email To Document"
      ],
      "accepts": [
        "string",
        "bytearray"
      ]
    },
    {
      "type": "Standard",
      "name": "dictionary",
      "doc": "<p>Strings must be Python <a href=\"https://docs.python.org/library/stdtypes.html#dict\">dictionary</a> literals. They are converted to actual dictionaries using the <a href=\"https://docs.python.org/library/ast.html#ast.literal_eval\">ast.literal_eval</a> function. They can contain any values <code>ast.literal_eval</code> supports, including dictionaries and other containers.</p>\n<p>Examples: <code>{'a': 1, 'b': 2}</code>, <code>{'key': 1, 'nested': {'key': 2}}</code></p>",
      "usages": [
        "Delete Message",
        "Flag Messages",
        "Mark As Read",
        "Mark As Unread",
        "Move Messages",
        "Refresh Oauth Token",
        "Save Attachment",
        "Save Messages",
        "Unflag Messages"
      ],
      "accepts": [
        "string",
        "Mapping"
      ]
    },
    {
      "type": "Standard",
      "name": "float",
      "doc": "<p>Conversion is done using Python's <a href=\"https://docs.python.org/library/functions.html#float\">float</a> built-in function.</p>\n<p>Starting from RF 4.1, spaces and underscores can be used as visual separators for digit grouping purposes.</p>\n<p>Examples: <code>3.14</code>, <code>2.9979e8</code>, <code>10 000.000 01</code></p>",
      "usages": [
        "Wait For Message"
      ],
      "accepts": [
        "string",
        "Real"
      ]
    },
    {
      "type": "Standard",
      "name": "integer",
      "doc": "<p>Conversion is done using Python's <a href=\"https://docs.python.org/library/functions.html#int\">int</a> built-in function. Floating point numbers are accepted only if they can be represented as integers exactly. For example, <code>1.0</code> is accepted and <code>1.1</code> is not.</p>\n<p>Starting from RF 4.1, it is possible to use hexadecimal, octal and binary numbers by prefixing values with <code>0x</code>, <code>0o</code> and <code>0b</code>, respectively.</p>\n<p>Starting from RF 4.1, spaces and underscores can be used as visual separators for digit grouping purposes.</p>\n<p>Examples: <code>42</code>, <code>-1</code>, <code>0b1010</code>, <code>10 000 000</code>, <code>0xBAD_C0FFEE</code></p>",
      "usages": [
        "__init__",
        "Authorize",
        "Authorize Imap",
        "Authorize Smtp",
        "Delete Messages",
        "Do Message Actions"
      ],
      "accepts": [
        "string",
        "float"
      ]
    },
    {
      "type": "Standard",
      "name": "list",
      "doc": "<p>Strings must be Python <a href=\"https://docs.python.org/library/stdtypes.html#list\">list</a> literals. They are converted to actual lists using the <a href=\"https://docs.python.org/library/ast.html#ast.literal_eval\">ast.literal_eval</a> function. They can contain any values <code>ast.literal_eval</code> supports, including lists and other containers.</p>\n<p>Examples: <code>['one', 'two']</code>, <code>[('one', 1), ('two', 2)]</code></p>",
      "usages": [
        "Delete Messages",
        "Do Message Actions",
        "Move Messages By Ids",
        "Save Messages",
        "Send Message"
      ],
      "accepts": [
        "string",
        "Sequence"
      ]
    },
    {
      "type": "Standard",
      "name": "None",
      "doc": "<p>String <code>NONE</code> (case-insensitive) is converted to Python <code>None</code> object. Other values cause an error.</p>",
      "usages": [
        "__init__",
        "Authorize",
        "Authorize Imap",
        "Authorize Smtp",
        "Convert Eml File Into Message",
        "Save Attachment",
        "Save Attachments",
        "Save Messages",
        "Send Message",
        "Set Credentials"
      ],
      "accepts": [
        "string"
      ]
    },
    {
      "type": "Enum",
      "name": "OAuthProvider",
      "doc": "<div class=\"document\">\n<p>OAuth2 tested providers.</p>\n</div>\n",
      "usages": [
        "__init__"
      ],
      "accepts": [
        "string"
      ],
      "members": [
        {
          "name": "GOOGLE",
          "value": "google"
        },
        {
          "name": "MICROSOFT",
          "value": "microsoft"
        }
      ]
    },
    {
      "type": "Standard",
      "name": "string",
      "doc": "<p>All arguments are converted to Unicode strings.</p>",
      "usages": [
        "__init__",
        "Add Gmail Labels",
        "Authorize",
        "Authorize Imap",
        "Authorize Smtp",
        "Convert Eml File Into Message",
        "Create Folder",
        "Delete Folder",
        "Delete Message",
        "Delete Messages",
        "Do Message Actions",
        "Email To Document",
        "Flag Messages",
        "Generate Oauth String",
        "Generate Oauth Url",
        "Get Folder List",
        "Get Oauth Token",
        "List Messages",
        "Mark As Read",
        "Mark As Unread",
        "Move Messages",
        "Move Messages By Ids",
        "Refresh Oauth Token",
        "Remove Gmail Labels",
        "Rename Folder",
        "Save Attachment",
        "Save Attachments",
        "Save Messages",
        "Select Folder",
        "Send Message",
        "Set Credentials",
        "Unflag Messages",
        "Wait For Message"
      ],
      "accepts": [
        "Any"
      ]
    }
  ]
}