{
  "specversion": 1,
  "name": "RPA.Cloud.Google",
  "doc": "<div class=\"document\">\n<p><cite>Google</cite> is a library for operating with Google API endpoints.</p>\n<p><strong>Installation</strong></p>\n<p>Usage requires the following steps:</p>\n<ul class=\"simple\">\n<li>Create a GCP project</li>\n<li>Enable approriate APIs</li>\n<li>Create credentials (OAuth or service account)</li>\n<li>Install <tt class=\"docutils literal\"><span class=\"pre\">rpaframework-google</span></tt> package</li>\n</ul>\n<p>Check the latest package version from <a class=\"reference external\" href=\"https://pypi.org/project/rpaframework-google/\">PyPI</a>.</p>\n<p><strong>Google authentication</strong></p>\n<p>Authentication for Google is set with <cite>service account JSON file</cite> which can be given to the library\nin three different ways or with <cite>OAuth2 token</cite>, which is used for OAuth authentication.</p>\n<p>See <a class=\"reference external\" href=\"https://github.com/robocorp/rpaframework/blob/master/packages/google/docs/authentication.md\">library authentication examples</a> for more information.</p>\n<p><strong>Basic usage examples</strong></p>\n<p><strong>Python</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"kn\">from</span> <span class=\"nn\">RPA.Cloud.Google</span> <span class=\"kn\">import</span> <span class=\"n\">Google</span><span class=\"w\">\n\n</span><span class=\"n\">library</span> <span class=\"o\">=</span> <span class=\"n\">Google</span><span class=\"p\">()</span><span class=\"w\">\n</span><span class=\"n\">service_account</span> <span class=\"o\">=</span> <span class=\"s1\">'/path/to/service_account.json'</span><span class=\"w\">\n\n</span><span class=\"n\">library</span><span class=\"o\">.</span><span class=\"n\">init_vision</span><span class=\"p\">(</span><span class=\"n\">service_account</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"n\">library</span><span class=\"o\">.</span><span class=\"n\">init_text_to_speech</span><span class=\"p\">(</span><span class=\"n\">service_account</span><span class=\"p\">)</span><span class=\"w\">\n\n</span><span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">library</span><span class=\"o\">.</span><span class=\"n\">detect_text</span><span class=\"p\">(</span><span class=\"s1\">'imagefile.png'</span><span class=\"p\">,</span> <span class=\"s1\">'result.json'</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"n\">library</span><span class=\"o\">.</span><span class=\"n\">synthesize_speech</span><span class=\"p\">(</span><span class=\"s1\">'I want this said aloud'</span><span class=\"p\">,</span> <span class=\"n\">target_file</span><span class=\"o\">=</span><span class=\"s1\">'said.mp3'</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Settings ***</span><span class=\"p\">\n</span><span class=\"kn\">Library</span><span class=\"p\">   </span><span class=\"nn\">RPA.Cloud.Google</span><span class=\"p\">\n\n</span><span class=\"gh\">*** Variables ***</span><span class=\"p\">\n${</span><span class=\"nv\">SERVICE_ACCOUNT</span><span class=\"p\">}    ${</span><span class=\"nv\">/</span><span class=\"p\">}</span><span class=\"s\">path</span><span class=\"p\">${</span><span class=\"nv\">/</span><span class=\"p\">}</span><span class=\"s\">to</span><span class=\"p\">${</span><span class=\"nv\">/</span><span class=\"p\">}</span><span class=\"s\">service_account.json</span><span class=\"p\">\n${</span><span class=\"nv\">BUCKET_NAME</span><span class=\"p\">}            </span><span class=\"s\">testbucket12213123123</span><span class=\"p\">\n\n</span><span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Upload a file into a new storage bucket</span><span class=\"p\">\n    [</span><span class=\"kn\">Setup</span><span class=\"p\">]   </span><span class=\"nf\">Init Storage</span><span class=\"p\">    ${</span><span class=\"nv\">SERVICE_ACCOUNT</span><span class=\"p\">}\n    </span><span class=\"nf\">Create Storage Bucket</span><span class=\"p\">    ${</span><span class=\"nv\">BUCKET_NAME</span><span class=\"p\">}\n    </span><span class=\"nf\">Upload Storage File</span><span class=\"p\">      ${</span><span class=\"nv\">BUCKET_NAME</span><span class=\"p\">}\n    ...   ${</span><span class=\"nv\">/</span><span class=\"p\">}</span><span class=\"s\">path</span><span class=\"p\">${</span><span class=\"nv\">/</span><span class=\"p\">}</span><span class=\"s\">to</span><span class=\"p\">${</span><span class=\"nv\">/</span><span class=\"p\">}</span><span class=\"s\">file.pdf</span><span class=\"p\">\n    ...   </span><span class=\"s\">myfile.pdf</span><span class=\"p\">\n    &#64;{</span><span class=\"nv\">files</span><span class=\"p\">}         </span><span class=\"nf\">List Storage Files</span><span class=\"p\">   ${</span><span class=\"nv\">BUCKET_NAME</span><span class=\"p\">}\n    </span><span class=\"nf\">FOR</span><span class=\"p\">   ${</span><span class=\"nv\">file</span><span class=\"p\">}  </span><span class=\"s\">IN</span><span class=\"p\">   &#64;{</span><span class=\"nv\">files</span><span class=\"p\">}\n        </span><span class=\"nf\">Log</span><span class=\"p\">  ${</span><span class=\"nv\">file</span><span class=\"p\">}\n    </span><span class=\"nf\">END</span>\n</pre>\n</div>\n",
  "version": "",
  "generated": "2024-10-30 10:09:43",
  "type": "LIBRARY",
  "scope": "GLOBAL",
  "docFormat": "HTML",
  "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/__init__.py",
  "lineno": 33,
  "tags": [
    "apps script",
    "document ai",
    "drive",
    "drive share",
    "get",
    "gmail",
    "init",
    "natural language",
    "sheets",
    "speech to text",
    "storage",
    "text to speech",
    "translation",
    "v2.0.0",
    "video intelligence",
    "vision"
  ],
  "inits": [
    {
      "name": "__init__",
      "args": [
        {
          "name": "service_account",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "service_account: str | None = None"
        },
        {
          "name": "vault_name",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "vault_name: str | None = None"
        },
        {
          "name": "vault_secret_key",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "vault_secret_key: str | None = None"
        },
        {
          "name": "cloud_auth_type",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "serviceaccount",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "cloud_auth_type: str = serviceaccount"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Library initialization</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param service_account:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">path to service account</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param vault_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Robocorp vault name</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param vault_secret_key:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Robocorp secret key</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param cloud_auth_type:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">&quot;serviceaccount&quot; or &quot;token&quot;,\ndefaults to &quot;serviceaccount&quot;</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Library initialization",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/__init__.py",
      "lineno": 115
    }
  ],
  "keywords": [
    {
      "name": "Add Attachment To Message",
      "args": [
        {
          "name": "mimeMessage",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "mimeMessage"
        },
        {
          "name": "attachment",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "attachment"
        }
      ],
      "doc": "<div class=\"document\">\n</div>\n",
      "shortdoc": "",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/gmail.py",
      "lineno": 113
    },
    {
      "name": "Add Drive Share",
      "args": [
        {
          "name": "file_id",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "file_id: str | None = None"
        },
        {
          "name": "file_dict",
          "types": [
            "dict",
            "None"
          ],
          "typedocs": {
            "dict": "dictionary",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "file_dict: dict | None = None"
        },
        {
          "name": "query",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "query: str | None = None"
        },
        {
          "name": "source",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "source: str | None = None"
        },
        {
          "name": "email",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "email: str | None = None"
        },
        {
          "name": "domain",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "domain: str | None = None"
        },
        {
          "name": "role",
          "types": [
            "DriveRole"
          ],
          "typedocs": {
            "DriveRole": "DriveRole"
          },
          "defaultValue": "READER",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "role: DriveRole = READER"
        },
        {
          "name": "share_type",
          "types": [
            "DriveType"
          ],
          "typedocs": {
            "DriveType": "DriveType"
          },
          "defaultValue": "USER",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "share_type: DriveType = USER"
        },
        {
          "name": "notification",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "notification: bool = False"
        },
        {
          "name": "notification_message",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "notification_message: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Keyword for sharing drive file or folder.</p>\n<p>Parameters <cite>file_id</cite>, <cite>file_dict</cite>, <cite>query</cite> and <cite>source</cite> can be\nused to select files to which sharing is added to.</p>\n<p>If share is added to a folder, all files within that folder get same\nsharing permissions.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param file_id:</th><td class=\"field-body\">drive file id</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param file_dict:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file dictionary returned by <cite>Search Drive Files</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param query:</th><td class=\"field-body\">drive query string to find target file, needs to match 1 file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param source:</th><td class=\"field-body\">name of the folder to search files in, is by default drive's\n<cite>root</cite> folder</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param email:</th><td class=\"field-body\">user or group email address if share type\nis DriveType.USER or DriveType.GROUP</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param domain:</th><td class=\"field-body\">domain name if share type is DriveType.DOMAIN</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param role:</th><td class=\"field-body\">see <tt class=\"docutils literal\">DriveRole</tt> enum for possible values,\ndefaults to DriveRole.READER</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param share_type:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">see <tt class=\"docutils literal\">DriveType</tt> enum for possible values,\ndefaults to DriveType.USER</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param notification:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">whether to send notificatin email, defaults to False</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param notification_message:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">optional message to include with the notification</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">share response dictionary containing 'file_id' and 'permission_id'</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\"># Add file share for a email address with email notification\nAdd Drive Share</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">query=name = 'okta.png'</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">email=robocorp.tester&#64;gmail.com</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">notification=True</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">notification_message=Hello. I have shared 'okta.png' with you for review.</span><span class=\"p\">\n</span><span class=\"c\"># Add file share for a domain\nAdd Drive Share</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">query=name = 'okta.png'</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">domain=robocorp.com</span><span class=\"p\">\n</span><span class=\"c\"># Add folder share for a email address\n${folder}=</span><span class=\"p\">    </span><span class=\"c\">Create Drive Directory</span><span class=\"p\">   </span><span class=\"c\">attachments-for-the-task</span><span class=\"p\">\n</span><span class=\"c\">${share}=</span><span class=\"p\">  </span><span class=\"c\">Add Drive Share</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">   </span><span class=\"c\">file_id=${folder}[id]</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">   </span><span class=\"c\">email=robocorp.tester&#64;gmail.com</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">   </span><span class=\"c\">role=writer</span><span class=\"p\">\n</span><span class=\"c\">Log To Console</span><span class=\"p\">  </span><span class=\"c\">Share details: ${share}[file_id], ${share}[permission_id]</span>\n</pre>\n</div>\n",
      "shortdoc": "Keyword for sharing drive file or folder.",
      "tags": [
        "drive",
        "drive share",
        "v2.0.0"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/drive.py",
      "lineno": 728
    },
    {
      "name": "Analyze Sentiment",
      "args": [
        {
          "name": "text",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "text: str | None = None"
        },
        {
          "name": "text_file",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "text_file: str | None = None"
        },
        {
          "name": "file_type",
          "types": [
            "TextType"
          ],
          "typedocs": {
            "TextType": "TextType"
          },
          "defaultValue": "TEXT",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "file_type: TextType = TEXT"
        },
        {
          "name": "json_file",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "json_file: str | None = None"
        },
        {
          "name": "lang",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "lang: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Analyze sentiment in a text file</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param text:</th><td class=\"field-body\">source text</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param text_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">source text file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param file_type:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">type of text, PLAIN_TEXT (default) or HTML</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param json_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">json target to save result, defaults to None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param lang:</th><td class=\"field-body\">language code of the source, defaults to None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">analysis response</td>\n</tr>\n</tbody>\n</table>\n<p>For list of supported languages:\n<a class=\"reference external\" href=\"https://cloud.google.com/natural-language/docs/languages\">https://cloud.google.com/natural-language/docs/languages</a></p>\n<p><strong>Examples</strong></p>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${result}=</span><span class=\"p\">   </span><span class=\"c\">Analyze Sentiment</span><span class=\"p\">  </span><span class=\"c\">${text}</span><span class=\"p\">\n</span><span class=\"c\">${result}=</span><span class=\"p\">   </span><span class=\"c\">Analyze Sentiment</span><span class=\"p\">  </span><span class=\"c\">text_file=${CURDIR}${/}test.txt</span>\n</pre>\n</div>\n",
      "shortdoc": "Analyze sentiment in a text file",
      "tags": [
        "natural language"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/natural_language.py",
      "lineno": 37
    },
    {
      "name": "Annotate Image",
      "args": [
        {
          "name": "image_file",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "image_file: str"
        },
        {
          "name": "image_uri",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "image_uri: str"
        },
        {
          "name": "json_file",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "json_file: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Annotate image</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param image_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">source image file path</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param image_uri:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Google Cloud Storage URI</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param json_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">json target to save result</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">detection response</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples</strong></p>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${result}=</span><span class=\"p\">   </span><span class=\"c\">Annotate Image</span><span class=\"p\">   </span><span class=\"c\">image_file=${CURDIR}${/}test.png</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">  </span><span class=\"c\">json_file=${CURDIR}${/}result.json</span>\n</pre>\n</div>\n",
      "shortdoc": "Annotate image",
      "tags": [
        "vision"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/vision.py",
      "lineno": 121
    },
    {
      "name": "Annotate Video",
      "args": [
        {
          "name": "video_file",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "video_file: str | None = None"
        },
        {
          "name": "video_uri",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "video_uri: str | None = None"
        },
        {
          "name": "features",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "features: str | None = None"
        },
        {
          "name": "output_uri",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "output_uri: str | None = None"
        },
        {
          "name": "json_file",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "json_file: str | None = None"
        },
        {
          "name": "timeout",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": "300",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "timeout: int = 300"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Annotate video</p>\n<p>Possible values for features:</p>\n<ul class=\"simple\">\n<li>FEATURE_UNSPECIFIED, Unspecified.</li>\n<li>LABEL_DETECTION, Label detection. Detect objects, such as dog or flower.</li>\n<li>SHOT_CHANGE_DETECTION, Shot change detection.</li>\n<li>EXPLICIT_CONTENT_DETECTION, Explicit content detection.</li>\n<li>SPEECH_TRANSCRIPTION, Speech transcription.</li>\n<li>TEXT_DETECTION, OCR text detection and tracking.</li>\n<li>OBJECT_TRACKING, Object detection and tracking.</li>\n<li>LOGO_RECOGNITION, Logo detection, tracking, and recognition.</li>\n</ul>\n<p>If <cite>video_uri</cite> is given then that is used even if <cite>video_file</cite> is given.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param video_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">local file path to input video</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param video_uri:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Google Cloud Storage URI to input video</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param features:</th><td class=\"field-body\">list of annotation features to detect,\ndefaults to LABEL_DETECTION,SHOT_CHANGE_DETECTION</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param output_uri:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Google Cloud Storage URI to store response json</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param json_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">json target to save result</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param timeout:</th><td class=\"field-body\">timeout for operation in seconds</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">annotate result</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples</strong></p>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${result}=</span><span class=\"p\">   </span><span class=\"c\">Annotate Video</span><span class=\"p\">   </span><span class=\"c\">video_uri=gs://videointelligence/movie.mp4</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">  </span><span class=\"c\">features=TEXT_DETECTION,LABEL_DETECTION</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">  </span><span class=\"c\">output_uri=gs://videointelligence/movie_annotations.json</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">  </span><span class=\"c\">json_file=${CURDIR}${/}videoannotations.json</span>\n</pre>\n</div>\n",
      "shortdoc": "Annotate video",
      "tags": [
        "video intelligence"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/video_intelligence.py",
      "lineno": 37
    },
    {
      "name": "Classify Text",
      "args": [
        {
          "name": "text",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "text: str | None = None"
        },
        {
          "name": "text_file",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "text_file: str | None = None"
        },
        {
          "name": "file_type",
          "types": [
            "TextType"
          ],
          "typedocs": {
            "TextType": "TextType"
          },
          "defaultValue": "TEXT",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "file_type: TextType = TEXT"
        },
        {
          "name": "json_file",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "json_file: str | None = None"
        },
        {
          "name": "lang",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "lang: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Classify text</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param text:</th><td class=\"field-body\">source text</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param text_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">source text file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param file_type:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">type of text, PLAIN_TEXT (default) or HTML</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param json_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">json target to save result, defaults to None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param lang:</th><td class=\"field-body\">language code of the source, defaults to None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">classify response</td>\n</tr>\n</tbody>\n</table>\n<p>For list of supported languages:\n<a class=\"reference external\" href=\"https://cloud.google.com/natural-language/docs/languages\">https://cloud.google.com/natural-language/docs/languages</a></p>\n<p><strong>Examples</strong></p>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${result}=</span><span class=\"p\">   </span><span class=\"c\">Classify Text</span><span class=\"p\">  </span><span class=\"c\">${text}</span><span class=\"p\">\n</span><span class=\"c\">${result}=</span><span class=\"p\">   </span><span class=\"c\">Classify Text</span><span class=\"p\">  </span><span class=\"c\">text_file=${CURDIR}${/}test.txt</span>\n</pre>\n</div>\n",
      "shortdoc": "Classify text",
      "tags": [
        "natural language"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/natural_language.py",
      "lineno": 71
    },
    {
      "name": "Clear Sheet Values",
      "args": [
        {
          "name": "spreadsheet_id",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "spreadsheet_id: str"
        },
        {
          "name": "sheet_range",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "sheet_range: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Clear cell values for range of cells within a spreadsheet</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param spreadsheet_id:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">target spreadsheet</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param sheet_range:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">target sheet range</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">operation result</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples</strong></p>\n<p><strong>Python</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">GOOGLE</span><span class=\"o\">.</span><span class=\"n\">clear_sheet_values</span><span class=\"p\">(</span><span class=\"n\">spreadsheet_id</span><span class=\"p\">,</span> <span class=\"s2\">&quot;A1:C1&quot;</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${result}=</span><span class=\"p\">  </span><span class=\"c\">Clear Sheet Values</span><span class=\"p\">  </span><span class=\"c\">${SPREADSHEET_ID}</span><span class=\"p\">  </span><span class=\"c\">A1:C1</span>\n</pre>\n</div>\n",
      "shortdoc": "Clear cell values for range of cells within a spreadsheet",
      "tags": [
        "sheets"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/sheets.py",
      "lineno": 279
    },
    {
      "name": "Copy Sheet",
      "args": [
        {
          "name": "spreadsheet_id",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "spreadsheet_id: str"
        },
        {
          "name": "source_sheet_name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "source_sheet_name: str"
        },
        {
          "name": "new_sheet_name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "new_sheet_name: str"
        },
        {
          "name": "insertSheetIndex",
          "types": [
            "int",
            "None"
          ],
          "typedocs": {
            "int": "integer",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "insertSheetIndex: int | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Copy sheet into the spreadsheet as new sheet</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param spreadsheet_id:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">id of the spreadsheet</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param source_sheet_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">name of the source sheet</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param new_sheet_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">name for the new sheet</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param insertSheetIndex:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">zero based index where the new\nsheet should be inserted, defaults to None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">operation result as an dictionary</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples</strong></p>\n<p><strong>Python</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">GOOGLE</span><span class=\"o\">.</span><span class=\"n\">copy_sheet</span><span class=\"p\">(</span><span class=\"w\">\n</span>    <span class=\"n\">spreadsheet_id</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"s2\">&quot;Existing sheet&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"s2\">&quot;Copy of existing sheet&quot;</span><span class=\"w\">\n</span>    <span class=\"p\">)</span>\n</pre>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${result}=</span><span class=\"p\">    </span><span class=\"c\">Copy Sheet</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">   </span><span class=\"c\">${SPREADSHEET_ID}</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">   </span><span class=\"c\">Existing sheet</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">   </span><span class=\"c\">Copy of existing sheet</span>\n</pre>\n</div>\n",
      "shortdoc": "Copy sheet into the spreadsheet as new sheet",
      "tags": [
        "sheets"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/sheets.py",
      "lineno": 409
    },
    {
      "name": "Copy Spreadsheet",
      "args": [
        {
          "name": "spreadsheet_id",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "spreadsheet_id: str"
        },
        {
          "name": "target_spreadsheet_id",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "target_spreadsheet_id: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Copy spreadsheet to target spreadsheet</p>\n<p><em>NOTE:</em> service account user must have access\nalso to target spreadsheet</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param spreadsheet_id:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">ID of the spreadsheet to copy</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param target_spreadsheet_id:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">ID of the target spreadsheet</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">operation result</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples</strong></p>\n<p><strong>Python</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">GOOGLE</span><span class=\"o\">.</span><span class=\"n\">copy_spreadsheet</span><span class=\"p\">(</span><span class=\"w\">\n</span>    <span class=\"n\">spreadsheet_id</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"n\">source_spreadsheet_id</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"n\">target_spreadsheet_id</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${result}=</span><span class=\"p\">  </span><span class=\"c\">Copy Spreadsheet</span><span class=\"p\">   </span><span class=\"c\">${SPREADSHEET_ID}</span><span class=\"p\">  </span><span class=\"c\">${ANOTHER_SPREADSHEET_ID}</span>\n</pre>\n</div>\n",
      "shortdoc": "Copy spreadsheet to target spreadsheet",
      "tags": [
        "sheets"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/sheets.py",
      "lineno": 311
    },
    {
      "name": "Create Drive Directory",
      "args": [
        {
          "name": "folder",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "folder: str | None = None"
        },
        {
          "name": "parent_folder",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "parent_folder: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Create new directory to Google Drive</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param folder:</th><td class=\"field-body\">name for the new directory</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param parent_folder:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">top level directory for new directory</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">dictionary containing folder ID and folder URL</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${folder}=</span><span class=\"p\">  </span><span class=\"c\">Create Drive Directory</span><span class=\"p\">   </span><span class=\"c\">example-folder</span><span class=\"p\">\n</span><span class=\"c\">Log To Console</span><span class=\"p\">    </span><span class=\"c\">Google Drive folder ID: ${folder}[id]</span><span class=\"p\">\n</span><span class=\"c\">Log To Console</span><span class=\"p\">    </span><span class=\"c\">Google Drive folder URL:</span><span class=\"p\">  </span><span class=\"c\">${folder}[url]</span>\n</pre>\n</div>\n",
      "shortdoc": "Create new directory to Google Drive",
      "tags": [
        "drive"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/drive.py",
      "lineno": 627
    },
    {
      "name": "Create Message",
      "args": [
        {
          "name": "to",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "to: str"
        },
        {
          "name": "subject",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "subject: str"
        },
        {
          "name": "message_text",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "message_text: str"
        },
        {
          "name": "attachments",
          "types": [
            "list",
            "None"
          ],
          "typedocs": {
            "list": "list",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "attachments: list | None = None"
        },
        {
          "name": "html",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "html: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Create a message for an email.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param to:</th><td class=\"field-body\">message recipient</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param subject:</th><td class=\"field-body\">message subject</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param message_text:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">message body text</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param attachment:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">list of files to add as message attachments</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param html:</th><td class=\"field-body\">set to True if message body is HTML (default False, plain text)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">An object containing a base64url encoded email object</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Create a message for an email.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/gmail.py",
      "lineno": 83
    },
    {
      "name": "Create Sheet",
      "args": [
        {
          "name": "spreadsheet_id",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "spreadsheet_id: str"
        },
        {
          "name": "sheet_name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "sheet_name: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Create sheet into the spreadsheet</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param spreadsheet_id:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">id of the spreadsheet</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param sheet_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">name for the new sheet</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">operation result as an dictionary</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples</strong></p>\n<p><strong>Python</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">GOOGLE</span><span class=\"o\">.</span><span class=\"n\">create_sheet</span><span class=\"p\">(</span><span class=\"n\">spreadsheet_id</span><span class=\"p\">,</span> <span class=\"s2\">&quot;New sheet&quot;</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${result}=</span><span class=\"p\">    </span><span class=\"c\">Create Sheet</span><span class=\"p\">    </span><span class=\"c\">${SPREADSHEET_ID}</span><span class=\"p\">    </span><span class=\"c\">New sheet</span>\n</pre>\n</div>\n",
      "shortdoc": "Create sheet into the spreadsheet",
      "tags": [
        "sheets"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/sheets.py",
      "lineno": 462
    },
    {
      "name": "Create Spreadsheet",
      "args": [
        {
          "name": "title",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "title: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Create empty sheet with a title</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param title:</th><td class=\"field-body\">name as string</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">created <cite>spreadsheet_id</cite></td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples</strong></p>\n<p><strong>Python</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">GOOGLE</span><span class=\"o\">.</span><span class=\"n\">create_spreadsheet</span><span class=\"p\">(</span><span class=\"s2\">&quot;name of the spreadsheet&quot;</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${result}=</span><span class=\"p\">  </span><span class=\"c\">Create Sheet</span><span class=\"p\">   </span><span class=\"c\">Example Sheet</span>\n</pre>\n</div>\n",
      "shortdoc": "Create empty sheet with a title",
      "tags": [
        "sheets"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/sheets.py",
      "lineno": 45
    },
    {
      "name": "Create Storage Bucket",
      "args": [
        {
          "name": "bucket_name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "bucket_name: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Create Google Cloud Storage bucket</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param bucket_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">name as string</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">bucket</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples</strong></p>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${result}=</span><span class=\"p\">   </span><span class=\"c\">Create Storage Bucket</span><span class=\"p\">   </span><span class=\"c\">visionfolder</span>\n</pre>\n</div>\n",
      "shortdoc": "Create Google Cloud Storage bucket",
      "tags": [
        "storage"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/storage.py",
      "lineno": 40
    },
    {
      "name": "Delete Drive File",
      "args": [
        {
          "name": "file_id",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "file_id: str | None = None"
        },
        {
          "name": "file_dict",
          "types": [
            "dict",
            "None"
          ],
          "typedocs": {
            "dict": "dictionary",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "file_dict: dict | None = None"
        },
        {
          "name": "query",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "query: str | None = None"
        },
        {
          "name": "multiple_ok",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "multiple_ok: bool = False"
        },
        {
          "name": "suppress_errors",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "suppress_errors: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Delete file specified by id, file dictionary or query string</p>\n<p>Note. Be extra careful when calling this keyword!</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param file_id:</th><td class=\"field-body\">drive file id</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param file_dict:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file dictionary returned by <cite>Search Drive Files</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param query:</th><td class=\"field-body\">drive query string to find target file, needs to match 1 file\nunless parameter <cite>multiple_ok</cite> is set to <cite>True</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param multiple_ok:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">set to <cite>True</cite> if it is ok to perform delete\non more than 1 file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param suppress_errors:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">on True will log warning message instead of\nraising an exception, defaults to False</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">how many files where deleted</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${folder_id}=</span><span class=\"p\">  </span><span class=\"c\">Get Drive Folder Id</span><span class=\"p\">   </span><span class=\"c\">datafolder</span><span class=\"p\">\n</span><span class=\"c\">${deleted}=</span><span class=\"p\">    </span><span class=\"c\">Delete Drive File</span><span class=\"p\">  </span><span class=\"c\">query=name contains '.json' and '${folder_id}' in parents</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">            </span><span class=\"c\">multiple_ok=True</span>\n</pre>\n</div>\n",
      "shortdoc": "Delete file specified by id, file dictionary or query string",
      "tags": [
        "drive"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/drive.py",
      "lineno": 336
    },
    {
      "name": "Delete Sheet",
      "args": [
        {
          "name": "spreadsheet_id",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "spreadsheet_id: str"
        },
        {
          "name": "sheet_name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "sheet_name: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Delete a sheet from the spreadsheet.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param spreadsheet_id:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">id of the spreadsheet</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param sheet_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">name of the sheet to delete</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">operation result as an dictionary</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples</strong></p>\n<p><strong>Python</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">GOOGLE</span><span class=\"o\">.</span><span class=\"n\">delete_sheet</span><span class=\"p\">(</span><span class=\"n\">spreadsheet_id</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Sheet1&quot;</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${result}=</span><span class=\"p\">    </span><span class=\"c\">Delete Sheet</span><span class=\"p\">    </span><span class=\"c\">${SPREADSHEET_ID}</span><span class=\"p\">    </span><span class=\"c\">Sheet1</span>\n</pre>\n</div>\n",
      "shortdoc": "Delete a sheet from the spreadsheet.",
      "tags": [
        "sheets"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/sheets.py",
      "lineno": 525
    },
    {
      "name": "Delete Storage Bucket",
      "args": [
        {
          "name": "bucket_name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "bucket_name: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Delete Google Cloud Storage bucket</p>\n<p>Bucket needs to be empty before it can be deleted.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param bucket_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">name as string</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples</strong></p>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${result}=</span><span class=\"p\">   </span><span class=\"c\">Delete Storage Bucket</span><span class=\"p\">   </span><span class=\"c\">visionfolder</span>\n</pre>\n</div>\n",
      "shortdoc": "Delete Google Cloud Storage bucket",
      "tags": [
        "storage"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/storage.py",
      "lineno": 58
    },
    {
      "name": "Delete Storage Files",
      "args": [
        {
          "name": "bucket_name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "bucket_name: str"
        },
        {
          "name": "files",
          "types": [
            "Any"
          ],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "files: Any"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Delete files in the bucket</p>\n<p>Files need to be object name in the bucket.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param bucket_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\"><p class=\"first\">name as string</p>\n</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param files:</th><td class=\"field-body\"><p class=\"first\">single file, list of files or comma separated list of files</p>\n</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\"><p class=\"first\">list of files which could not be deleted</p>\n<p class=\"last\"><strong>Examples</strong></p>\n</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${result}=</span><span class=\"p\">   </span><span class=\"c\">Delete Storage Files</span><span class=\"p\">   </span><span class=\"c\">${BUCKET_NAME}</span><span class=\"p\">   </span><span class=\"c\">file1,file2</span>\n</pre>\n</div>\n",
      "shortdoc": "Delete files in the bucket",
      "tags": [
        "storage"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/storage.py",
      "lineno": 117
    },
    {
      "name": "Detect Document",
      "args": [
        {
          "name": "image_file",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "image_file: str | None = None"
        },
        {
          "name": "image_uri",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "image_uri: str | None = None"
        },
        {
          "name": "json_file",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "json_file: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Detect document</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param image_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">source image file path</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param image_uri:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Google Cloud Storage URI</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param json_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">json target to save result</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">detection response</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples</strong></p>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${result}=</span><span class=\"p\">   </span><span class=\"c\">Detect Document</span><span class=\"p\">   </span><span class=\"c\">image_file=${CURDIR}${/}test.png</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">  </span><span class=\"c\">json_file=${CURDIR}${/}result.json</span>\n</pre>\n</div>\n",
      "shortdoc": "Detect document",
      "tags": [
        "vision"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/vision.py",
      "lineno": 96
    },
    {
      "name": "Detect Labels",
      "args": [
        {
          "name": "image_file",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "image_file: str | None = None"
        },
        {
          "name": "image_uri",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "image_uri: str | None = None"
        },
        {
          "name": "json_file",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "json_file: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Detect labels in the image</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param image_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">source image file path</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param image_uri:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">source image uri</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param json_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">json target to save result</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">detection response</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples</strong></p>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${result}=</span><span class=\"p\">   </span><span class=\"c\">Detect Labels</span><span class=\"p\">   </span><span class=\"c\">image_file=${CURDIR}${/}test.png</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">  </span><span class=\"c\">json_file=${CURDIR}${/}result.json</span>\n</pre>\n</div>\n",
      "shortdoc": "Detect labels in the image",
      "tags": [
        "vision"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/vision.py",
      "lineno": 46
    },
    {
      "name": "Detect Tables",
      "args": [
        {
          "name": "spreadsheet_id",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "spreadsheet_id: str"
        },
        {
          "name": "sheet_name",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "sheet_name: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Detect tables in the sheet.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param spreadsheet_id:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">id of the spreadsheet</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param sheet_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">name of the sheet, or leave None for all sheets</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">tables arranged by sheets</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Detect tables in the sheet.",
      "tags": [
        "sheets"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/sheets.py",
      "lineno": 666
    },
    {
      "name": "Detect Text",
      "args": [
        {
          "name": "image_file",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "image_file: str | None = None"
        },
        {
          "name": "image_uri",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "image_uri: str | None = None"
        },
        {
          "name": "json_file",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "json_file: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Detect text in the image</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param image_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">source image file path</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param image_uri:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Google Cloud Storage URI</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param json_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">json target to save result</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">detection response</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples</strong></p>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${result}=</span><span class=\"p\">   </span><span class=\"c\">Detect Text</span><span class=\"p\">   </span><span class=\"c\">image_file=${CURDIR}${/}test.png</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">  </span><span class=\"c\">json_file=${CURDIR}${/}result.json</span>\n</pre>\n</div>\n",
      "shortdoc": "Detect text in the image",
      "tags": [
        "vision"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/vision.py",
      "lineno": 71
    },
    {
      "name": "Download Drive Files",
      "args": [
        {
          "name": "file_dict",
          "types": [
            "dict",
            "None"
          ],
          "typedocs": {
            "dict": "dictionary",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "file_dict: dict | None = None"
        },
        {
          "name": "query",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "query: str | None = None"
        },
        {
          "name": "source",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "source: str | None = None"
        },
        {
          "name": "limit",
          "types": [
            "int",
            "None"
          ],
          "typedocs": {
            "int": "integer",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "limit: int | None = None"
        },
        {
          "name": "timeout",
          "types": [
            "float",
            "None"
          ],
          "typedocs": {
            "float": "float",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "timeout: float | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Download files specified by file dictionary or query string</p>\n<p>Parameters <cite>start</cite>, <cite>limit</cite> and <cite>timeout</cite> are used only when\ndownloading files defined by <cite>query</cite> parameter.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param file_dict:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file dictionary returned by <cite>Search Drive Files</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param query:</th><td class=\"field-body\">drive query string to find target files, defaults to None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param source:</th><td class=\"field-body\">source directory where query is executed</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param limit:</th><td class=\"field-body\">maximum amount of files that are downloaded, defaults to None</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param timeout:</th><td class=\"field-body\">maximum allowed time in seconds for download process</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">list of downloaded files</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${files}=</span><span class=\"p\">    </span><span class=\"c\">Search Drive Files</span><span class=\"p\">    </span><span class=\"c\">query=name contains '.json'</span><span class=\"p\">\n</span><span class=\"c\">FOR</span><span class=\"p\">    </span><span class=\"c\">${f}</span><span class=\"p\">    </span><span class=\"c\">IN</span><span class=\"p\">    </span><span class=\"c\">&#64;{files}</span><span class=\"p\">\n    </span><span class=\"c\">IF</span><span class=\"p\">  </span><span class=\"c\">${f}[size] &lt; 2000</span><span class=\"p\">\n        </span><span class=\"c\">Download Drive Files</span><span class=\"p\">  </span><span class=\"c\">file_dict=${f}</span><span class=\"p\">\n    </span><span class=\"c\">END</span><span class=\"p\">\n</span><span class=\"c\">END</span><span class=\"p\">\n\n</span><span class=\"c\">${folder_id}=</span><span class=\"p\">   </span><span class=\"c\">Get Drive Folder Id</span><span class=\"p\">   </span><span class=\"c\">datafolder</span><span class=\"p\">\n</span><span class=\"c\">Download Drive Files</span><span class=\"p\">  </span><span class=\"c\">query=name contains '.json' and '${folder_id}' in parents</span>\n</pre>\n</div>\n",
      "shortdoc": "Download files specified by file dictionary or query string",
      "tags": [
        "drive"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/drive.py",
      "lineno": 180
    },
    {
      "name": "Download Storage Files",
      "args": [
        {
          "name": "bucket_name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "bucket_name: str"
        },
        {
          "name": "files",
          "types": [
            "Any"
          ],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "files: Any"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Download files from a bucket</p>\n<p>Example <cite>files</cite>:\n<cite>files = {&quot;mytestimg&quot;: &quot;image1.png&quot;, &quot;mydoc&quot;: &quot;google.pdf&quot;}</cite></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param bucket_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">name as string</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param files:</th><td class=\"field-body\">list of object names or dictionary of\nobject names and target files</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">list of files which could not be downloaded</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples</strong></p>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${result}=</span><span class=\"p\">  </span><span class=\"c\">Download Storage Files</span><span class=\"p\">  </span><span class=\"c\">${BUCKET_NAME}</span><span class=\"p\">   </span><span class=\"c\">test1.txt,test2.txt</span>\n</pre>\n</div>\n",
      "shortdoc": "Download files from a bucket",
      "tags": [
        "storage"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/storage.py",
      "lineno": 225
    },
    {
      "name": "Export Drive File",
      "args": [
        {
          "name": "file_id",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "file_id: str | None = None"
        },
        {
          "name": "file_dict",
          "types": [
            "dict",
            "None"
          ],
          "typedocs": {
            "dict": "dictionary",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "file_dict: dict | None = None"
        },
        {
          "name": "target_file",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "target_file: str | None = None"
        },
        {
          "name": "mimetype",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "application/pdf",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "mimetype: str = application/pdf"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Export Google Drive file using Drive export links</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param file_id:</th><td class=\"field-body\">drive file id</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param file_dict:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file dictionary returned by <cite>Search Drive Files</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param target_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">name for the exported file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param mimetype:</th><td class=\"field-body\">export mimetype, defaults to &quot;application/pdf&quot;</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">file path to the exported file</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${files}=</span><span class=\"p\">  </span><span class=\"c\">Drive Search Files</span><span class=\"p\">  </span><span class=\"c\">query=name contains 'my example worksheet'</span><span class=\"p\">\n</span><span class=\"c\">Export Drive File</span><span class=\"p\">  </span><span class=\"c\">file_dict=${files}[0]</span>\n</pre>\n</div>\n",
      "shortdoc": "Export Google Drive file using Drive export links",
      "tags": [
        "drive"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/drive.py",
      "lineno": 679
    },
    {
      "name": "Face Detection",
      "args": [
        {
          "name": "image_file",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "image_file: str | None = None"
        },
        {
          "name": "image_uri",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "image_uri: str | None = None"
        },
        {
          "name": "json_file",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "json_file: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Detect faces</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param image_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">source image file path</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param image_uri:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Google Cloud Storage URI</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param json_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">json target to save result</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">detection response</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples</strong></p>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${result}=</span><span class=\"p\">   </span><span class=\"c\">Face Detection</span><span class=\"p\">   </span><span class=\"c\">image_uri=gs://vision/faces.png</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">  </span><span class=\"c\">json_file=${CURDIR}${/}result.json</span>\n</pre>\n</div>\n",
      "shortdoc": "Detect faces",
      "tags": [
        "vision"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/vision.py",
      "lineno": 146
    },
    {
      "name": "Generic Spreadsheet Batch Update",
      "args": [
        {
          "name": "spreadsheet_id",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "spreadsheet_id: str"
        },
        {
          "name": "body",
          "types": [
            "Dict"
          ],
          "typedocs": {
            "Dict": "dictionary"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "body: Dict"
        }
      ],
      "doc": "<div class=\"document\">\n<p>This keyword allows to do generic batch update to the spreadsheet.</p>\n<p>For more information on the batch update:\n<a class=\"reference external\" href=\"https://googleapis.github.io/google-api-python-client/docs/dyn/sheets_v4.spreadsheets.html#create\">https://googleapis.github.io/google-api-python-client/docs/dyn/sheets_v4.spreadsheets.html#create</a></p>\n<p>List of possible requests actions (body can contain multiple at the same time):</p>\n<blockquote>\n<ul class=\"simple\">\n<li>addBanding</li>\n<li>addChart</li>\n<li>addConditionalFormatRule</li>\n<li>addDataSource</li>\n<li>addDimensionGroup</li>\n<li>addFilterView</li>\n<li>addNamedRange</li>\n<li>addProtectedRange</li>\n<li>addSheet (keyword <tt class=\"docutils literal\">Create sheet</tt>)</li>\n<li>addSlicer</li>\n<li>appendCells</li>\n<li>appendDimension</li>\n<li>autoFill</li>\n<li>autoResizeDimensions</li>\n<li>clearBasicFilter</li>\n<li>copyPaste</li>\n<li>createDeveloperMetadata</li>\n<li>cutPaste</li>\n<li>deleteBanding</li>\n<li>deleteConditionalFormatRule</li>\n<li>deleteDataSource</li>\n<li>deleteDeveloperMetadata</li>\n<li>deleteDimension</li>\n<li>deleteDimensionGroup</li>\n<li>deleteDuplicates</li>\n<li>deleteEmbeddedObject</li>\n<li>deleteFilterView</li>\n<li>deleteNamedRange</li>\n<li>deleteProtectedRange</li>\n<li>deleteRange</li>\n<li>deleteSheet (keyword <tt class=\"docutils literal\">Delete sheet</tt>)</li>\n<li>duplicateFilterView</li>\n<li>duplicateSheet (keyword <tt class=\"docutils literal\">Copy sheet</tt>)</li>\n<li>findReplace</li>\n<li>insertDimension</li>\n<li>insertRange</li>\n<li>mergeCells</li>\n<li>moveDimension</li>\n<li>pasteData</li>\n<li>randomizeRange</li>\n<li>refreshDataSource</li>\n<li>repeatCell</li>\n<li>setBasicFilter</li>\n<li>setDataValidation</li>\n<li>sortRange</li>\n<li>textToColumns</li>\n<li>trimWhitespace</li>\n<li>unmergeCells</li>\n<li>updateBanding</li>\n<li>updateBorders</li>\n<li>updateCells</li>\n<li>updateChartSpec</li>\n<li>updateConditionalFormatRule</li>\n<li>updateDataSource</li>\n<li>updateDeveloperMetadata</li>\n<li>updateDimensionGroup</li>\n<li>updateDimensionProperties</li>\n<li>updateEmbeddedObjectBorder</li>\n<li>updateEmbeddedObjectPosition</li>\n<li>updateFilterView</li>\n<li>updateNamedRange</li>\n<li>updateProtectedRange</li>\n<li>updateSheetProperties (keyword <tt class=\"docutils literal\">Rename sheet</tt>)</li>\n<li>updateSlicerSpec</li>\n<li>updateSpreadsheetProperties</li>\n</ul>\n</blockquote>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param spreadsheet_id:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">id of the spreadsheet</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param body:</th><td class=\"field-body\">body of the batch update request</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">operation result as an dictionary</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples</strong></p>\n<p><strong>Python</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"n\">body</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;requests&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;deleteSheet&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;sheetId&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;333555666&quot;</span><span class=\"p\">}}}</span><span class=\"w\">\n</span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">GOOGLE</span><span class=\"o\">.</span><span class=\"n\">generic_spreadsheet_batch_update</span><span class=\"p\">(</span><span class=\"n\">spreadsheet_id</span><span class=\"p\">,</span> <span class=\"n\">body</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${body}=</span><span class=\"p\">    </span><span class=\"c\">Evaluate</span><span class=\"p\">    </span><span class=\"c\">{&quot;requests&quot;: {&quot;deleteSheet&quot;: {&quot;sheetId&quot;: &quot;333555666&quot;}}}</span><span class=\"p\">\n</span><span class=\"c\">${result}=</span><span class=\"p\">    </span><span class=\"c\">Generic Spreadsheet Batch Update</span><span class=\"p\">    </span><span class=\"c\">${SPREADSHEET_ID}</span><span class=\"p\">    </span><span class=\"c\">${body}</span>\n</pre>\n</div>\n",
      "shortdoc": "This keyword allows to do generic batch update to the spreadsheet.",
      "tags": [
        "sheets"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/sheets.py",
      "lineno": 562
    },
    {
      "name": "Get All Sheet Values",
      "args": [
        {
          "name": "spreadsheet_id",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "spreadsheet_id: str"
        },
        {
          "name": "sheet_name",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "sheet_name: str | None = None"
        },
        {
          "name": "value_render_option",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "UNFORMATTED_VALUE",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "value_render_option: str = UNFORMATTED_VALUE"
        },
        {
          "name": "datetime_render_option",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "FORMATTED_STRING",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "datetime_render_option: str = FORMATTED_STRING"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Get values from the range in the spreadsheet</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param spreadsheet_id:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">target spreadsheet</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param sheet_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">target sheet (default first sheet)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param value_render_option:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">how values should be represented\nin the output defaults to &quot;UNFORMATTED_VALUE&quot;</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param datetime_render_option:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">how dates, times, and durations should be\nrepresented in the output, defaults to &quot;FORMATTED_STRING&quot;</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">operation result</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples</strong></p>\n<p><strong>Python</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">GOOGLE</span><span class=\"o\">.</span><span class=\"n\">get_all_sheet_values</span><span class=\"p\">(</span><span class=\"n\">spreadsheet_id</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${values}=</span><span class=\"p\">  </span><span class=\"c\">Get All Sheet Values</span><span class=\"p\">  </span><span class=\"c\">${SHEET_ID}</span><span class=\"p\">  </span><span class=\"c\">sheet1</span>\n</pre>\n</div>\n",
      "shortdoc": "Get values from the range in the spreadsheet",
      "tags": [
        "sheets"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/sheets.py",
      "lineno": 224
    },
    {
      "name": "Get Document Entities",
      "args": [
        {
          "name": "document",
          "types": [
            "Document"
          ],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "document: Document"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Helper keyword for getting document <cite>entities</cite> from a <tt class=\"docutils literal\">Process Document</tt>\nresponse object.</p>\n<p>For examples. see <tt class=\"docutils literal\">Process Document</tt> keyword</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param document:</th><td class=\"field-body\">the document response object</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">detected entities in the document response as a list</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Helper keyword for getting document `entities` from a ``Process Document`` response object.",
      "tags": [
        "document ai",
        "get"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/document_ai.py",
      "lineno": 242
    },
    {
      "name": "Get Document Languages",
      "args": [
        {
          "name": "document",
          "types": [
            "Document"
          ],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "document: Document"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Helper keyword for getting detected <cite>languages</cite> from a <tt class=\"docutils literal\">Process Document</tt>\nresponse object.</p>\n<p>For examples. see <tt class=\"docutils literal\">Process Document</tt> keyword</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param document:</th><td class=\"field-body\">the document response object</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">detected languages in the document response as a list</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Helper keyword for getting detected `languages` from a ``Process Document`` response object.",
      "tags": [
        "document ai",
        "get"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/document_ai.py",
      "lineno": 266
    },
    {
      "name": "Get Drive File By Id",
      "args": [
        {
          "name": "file_id",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "file_id: str"
        },
        {
          "name": "suppress_errors",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "suppress_errors: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Get file dictionary by its file id.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param file_id:</th><td class=\"field-body\">id of the file in the Google Drive</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param suppress_errors:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">on True will log warning message instead of\nraising an exception, defaults to False (exception is raised)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">dictionary containing file information</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${file_dict}=</span><span class=\"p\">  </span><span class=\"c\">Get Drive File By ID</span><span class=\"p\">    </span><span class=\"c\">file_id=${FILE_ID}</span>\n</pre>\n</div>\n",
      "shortdoc": "Get file dictionary by its file id.",
      "tags": [
        "drive",
        "v2.0.0"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/drive.py",
      "lineno": 1041
    },
    {
      "name": "Get Drive Folder Id",
      "args": [
        {
          "name": "folder",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "folder: str | None = None"
        },
        {
          "name": "parent_folder",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "parent_folder: str | None = None"
        },
        {
          "name": "details",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "details: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Get file id for the folder</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param folder:</th><td class=\"field-body\">name of the folder to identify, by default returns drive's\n<cite>root</cite> folder id</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param parent_folder:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">can be used to narrow search by giving parent\nfolder name</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param details:</th><td class=\"field-body\">on True will return folder dictionary, on False (default)\nfolder id is returned</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">file id of the folder or file dictionary when details = True</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${root_id}=</span><span class=\"p\">    </span><span class=\"c\">Get Drive Folder Id</span><span class=\"p\">   </span><span class=\"c\"># returns Drive root folder id\n${folder_id}=</span><span class=\"p\">  </span><span class=\"c\">Get Drive Folder Id</span><span class=\"p\">  </span><span class=\"c\">subdir</span>\n</pre>\n</div>\n",
      "shortdoc": "Get file id for the folder",
      "tags": [
        "drive"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/drive.py",
      "lineno": 381
    },
    {
      "name": "Get Sheet By Name",
      "args": [
        {
          "name": "spreadsheet_id",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "spreadsheet_id: str"
        },
        {
          "name": "sheet_name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "sheet_name: str"
        }
      ],
      "doc": "<div class=\"document\">\n</div>\n",
      "shortdoc": "",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/sheets.py",
      "lineno": 551
    },
    {
      "name": "Get Sheet Formulas",
      "args": [
        {
          "name": "spreadsheet_id",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "spreadsheet_id: str"
        },
        {
          "name": "sheet_name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "sheet_name: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Get formulas from the sheet.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param spreadsheet_id:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">id of the spreadsheet</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param sheet_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">name of the sheet</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">_description_</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Get formulas from the sheet.",
      "tags": [
        "sheets"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/sheets.py",
      "lineno": 776
    },
    {
      "name": "Get Sheet Values",
      "args": [
        {
          "name": "spreadsheet_id",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "spreadsheet_id: str"
        },
        {
          "name": "sheet_range",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "sheet_range: str | None = None"
        },
        {
          "name": "value_render_option",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "UNFORMATTED_VALUE",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "value_render_option: str = UNFORMATTED_VALUE"
        },
        {
          "name": "datetime_render_option",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "FORMATTED_STRING",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "datetime_render_option: str = FORMATTED_STRING"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Get values from the range in the spreadhsheet</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param spreadsheet_id:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">target spreadsheet</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param sheet_range:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">target sheet range</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param value_render_option:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">how values should be represented\nin the output defaults to &quot;UNFORMATTED_VALUE&quot;</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param datetime_render_option:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">how dates, times, and durations should be\nrepresented in the output, defaults to &quot;FORMATTED_STRING&quot;</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">operation result</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples</strong></p>\n<p><strong>Python</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">GOOGLE</span><span class=\"o\">.</span><span class=\"n\">get_sheet_values</span><span class=\"p\">(</span><span class=\"n\">spreadsheet_id</span><span class=\"p\">,</span> <span class=\"s2\">&quot;A1:C1&quot;</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${values}=</span><span class=\"p\">  </span><span class=\"c\">Get Sheet Values</span><span class=\"p\">  </span><span class=\"c\">${SPREADSHEET_ID}</span><span class=\"p\">  </span><span class=\"c\">A1:C1</span>\n</pre>\n</div>\n",
      "shortdoc": "Get values from the range in the spreadhsheet",
      "tags": [
        "sheets"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/sheets.py",
      "lineno": 183
    },
    {
      "name": "Get Spreadsheet Basic Information",
      "args": [
        {
          "name": "spreadsheet_id",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "spreadsheet_id: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Get title, id, url and sheets information\nfrom the spreadsheet.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param spreadsheet_id:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">ID of the spreadsheet</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">operation result as an dictionary</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Get title, id, url and sheets information from the spreadsheet.",
      "tags": [
        "sheets"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/sheets.py",
      "lineno": 353
    },
    {
      "name": "Get Spreadsheet Details",
      "args": [
        {
          "name": "spreadsheet_id",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "spreadsheet_id: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Returns spreadsheet information as a dictionary.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param spreadsheet_id:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">ID of the spreadsheet</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">operation result as an dictionary</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Returns spreadsheet information as a dictionary.",
      "tags": [
        "sheets"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/sheets.py",
      "lineno": 378
    },
    {
      "name": "Get Storage Bucket",
      "args": [
        {
          "name": "bucket_name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "bucket_name: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Get Google Cloud Storage bucket</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param bucket_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">name as string</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">bucket</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples</strong></p>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${result}=</span><span class=\"p\">   </span><span class=\"c\">Get Bucket</span><span class=\"p\">   </span><span class=\"c\">visionfolder</span>\n</pre>\n</div>\n",
      "shortdoc": "Get Google Cloud Storage bucket",
      "tags": [
        "storage"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/storage.py",
      "lineno": 80
    },
    {
      "name": "Handle Mimetypes",
      "args": [
        {
          "name": "parsed_parts",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "parsed_parts"
        },
        {
          "name": "part",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "part"
        },
        {
          "name": "msg",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "msg"
        },
        {
          "name": "folder_name",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "folder_name"
        }
      ],
      "doc": "<div class=\"document\">\n</div>\n",
      "shortdoc": "",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/gmail.py",
      "lineno": 213
    },
    {
      "name": "Init Apps Script",
      "args": [
        {
          "name": "service_account",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "service_account: str | None = None"
        },
        {
          "name": "credentials",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "credentials: str | None = None"
        },
        {
          "name": "use_robocorp_vault",
          "types": [
            "bool",
            "None"
          ],
          "typedocs": {
            "bool": "boolean",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "use_robocorp_vault: bool | None = None"
        },
        {
          "name": "scopes",
          "types": [
            "list",
            "None"
          ],
          "typedocs": {
            "list": "list",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "scopes: list | None = None"
        },
        {
          "name": "token_file",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "token_file: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Initialize Google Apps Script client</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param service_account:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file path to service account file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param credentials:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file path to credentials file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param use_robocorp_vault:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">use credentials in <cite>Robocorp Vault</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param scopes:</th><td class=\"field-body\">list of extra authentication scopes</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param token_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file path to token file</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Initialize Google Apps Script client",
      "tags": [
        "apps script",
        "init"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/apps_script.py",
      "lineno": 19
    },
    {
      "name": "Init Document AI",
      "args": [
        {
          "name": "service_account",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "service_account: str | None = None"
        },
        {
          "name": "region",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "us",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "region: str | None = us"
        },
        {
          "name": "use_robocorp_vault",
          "types": [
            "bool",
            "None"
          ],
          "typedocs": {
            "bool": "boolean",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "use_robocorp_vault: bool | None = None"
        },
        {
          "name": "token_file",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "token_file: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Initialize Google Cloud Document AI client</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param service_account:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file path to service account file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param region:</th><td class=\"field-body\">region of the service</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param use_robocorp_vault:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">use credentials in <cite>Robocorp Vault</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param token_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file path to token file</td>\n</tr>\n</tbody>\n</table>\n<p>Robot Framework example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\"># Init using Service Account from a file\nInit Document AI</span><span class=\"p\">   </span><span class=\"c\">${CURDIR}${/}service_account.json</span><span class=\"p\">  </span><span class=\"c\">region=eu</span><span class=\"p\">\n</span><span class=\"c\"># Init using OAuth token from a file and default &quot;us&quot; region\nInit Document AI</span><span class=\"p\">   </span><span class=\"c\">${CURDIR}${/}token.json</span><span class=\"p\">\n</span><span class=\"c\"># Init using service account file from the Robocorp Vault\nSet Robocorp Vault</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">         </span><span class=\"c\">vault_name=DocumentAI</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">         </span><span class=\"c\">vault_secret_key=google-sa</span><span class=\"p\">\n</span><span class=\"c\">Init Document AI</span><span class=\"p\">    </span><span class=\"c\">region=eu</span><span class=\"p\">    </span><span class=\"c\">use_robocorp_vault=True</span>\n</pre>\n<p>Python example:</p>\n<pre class=\"code python literal-block\">\n<span class=\"n\">GOOGLE</span> <span class=\"o\">=</span> <span class=\"n\">Google</span><span class=\"p\">()</span><span class=\"w\">\n</span><span class=\"n\">GOOGLE</span><span class=\"o\">.</span><span class=\"n\">set_robocorp_vault</span><span class=\"p\">(</span><span class=\"s2\">&quot;DocumentAI&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;google-sa&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"n\">GOOGLE</span><span class=\"o\">.</span><span class=\"n\">init_document_ai</span><span class=\"p\">(</span><span class=\"n\">region</span><span class=\"o\">=</span><span class=\"s2\">&quot;eu&quot;</span><span class=\"p\">,</span> <span class=\"n\">use_robocorp_vault</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n</div>\n",
      "shortdoc": "Initialize Google Cloud Document AI client",
      "tags": [
        "document ai",
        "init"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/document_ai.py",
      "lineno": 32
    },
    {
      "name": "Init Drive",
      "args": [
        {
          "name": "service_account",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "service_account: str | None = None"
        },
        {
          "name": "credentials",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "credentials: str | None = None"
        },
        {
          "name": "use_robocorp_vault",
          "types": [
            "bool",
            "None"
          ],
          "typedocs": {
            "bool": "boolean",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "use_robocorp_vault: bool | None = None"
        },
        {
          "name": "scopes",
          "types": [
            "list",
            "None"
          ],
          "typedocs": {
            "list": "list",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "scopes: list | None = None"
        },
        {
          "name": "token_file",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "token_file: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Initialize Google Drive client</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param service_account:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file path to service account file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param credentials:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file path to credentials file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param use_robocorp_vault:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">use credentials in <cite>Robocorp Vault</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param scopes:</th><td class=\"field-body\">list of extra authentication scopes</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param token_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file path to token file</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Initialize Google Drive client",
      "tags": [
        "drive",
        "init"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/drive.py",
      "lineno": 32
    },
    {
      "name": "Init Gmail",
      "args": [
        {
          "name": "service_account",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "service_account: str | None = None"
        },
        {
          "name": "credentials",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "credentials: str | None = None"
        },
        {
          "name": "use_robocorp_vault",
          "types": [
            "bool",
            "None"
          ],
          "typedocs": {
            "bool": "boolean",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "use_robocorp_vault: bool | None = None"
        },
        {
          "name": "scopes",
          "types": [
            "list",
            "None"
          ],
          "typedocs": {
            "list": "list",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "scopes: list | None = None"
        },
        {
          "name": "token_file",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "token_file: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Initialize Google Gmail client</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param service_account:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file path to service account file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param credentials:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file path to credentials file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param use_robocorp_vault:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">use credentials in <cite>Robocorp Vault</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param scopes:</th><td class=\"field-body\">list of extra authentication scopes</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param token_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file path to token file</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Initialize Google Gmail client",
      "tags": [
        "gmail",
        "init"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/gmail.py",
      "lineno": 53
    },
    {
      "name": "Init Natural Language",
      "args": [
        {
          "name": "service_account",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "service_account: str | None = None"
        },
        {
          "name": "use_robocorp_vault",
          "types": [
            "bool",
            "None"
          ],
          "typedocs": {
            "bool": "boolean",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "use_robocorp_vault: bool | None = None"
        },
        {
          "name": "token_file",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "token_file: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Initialize Google Cloud Natural Language client</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param service_account:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file path to service account file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param use_robocorp_vault:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">use credentials in <cite>Robocorp Vault</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param token_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file path to token file</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Initialize Google Cloud Natural Language client",
      "tags": [
        "init",
        "natural language"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/natural_language.py",
      "lineno": 16
    },
    {
      "name": "Init Sheets",
      "args": [
        {
          "name": "service_account",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "service_account: str | None = None"
        },
        {
          "name": "credentials",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "credentials: str | None = None"
        },
        {
          "name": "use_robocorp_vault",
          "types": [
            "bool",
            "None"
          ],
          "typedocs": {
            "bool": "boolean",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "use_robocorp_vault: bool | None = None"
        },
        {
          "name": "scopes",
          "types": [
            "list",
            "None"
          ],
          "typedocs": {
            "list": "list",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "scopes: list | None = None"
        },
        {
          "name": "token_file",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "token_file: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Initialize Google Sheets client</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param service_account:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file path to service account file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param credentials:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file path to credentials file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param use_robocorp_vault:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">use credentials in <cite>Robocorp Vault</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param scopes:</th><td class=\"field-body\">list of extra authentication scopes</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param token_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file path to token file</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Initialize Google Sheets client",
      "tags": [
        "init",
        "sheets"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/sheets.py",
      "lineno": 14
    },
    {
      "name": "Init Speech To Text",
      "args": [
        {
          "name": "service_account",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "service_account: str | None = None"
        },
        {
          "name": "use_robocorp_vault",
          "types": [
            "bool",
            "None"
          ],
          "typedocs": {
            "bool": "boolean",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "use_robocorp_vault: bool | None = None"
        },
        {
          "name": "token_file",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "token_file: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Initialize Google Cloud Speech to Text client</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param service_account:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file path to service account file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param use_robocorp_vault:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">use credentials in <cite>Robocorp Vault</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param token_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file path to token file</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Initialize Google Cloud Speech to Text client",
      "tags": [
        "init",
        "speech to text"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/speech_to_text.py",
      "lineno": 43
    },
    {
      "name": "Init Storage",
      "args": [
        {
          "name": "service_account",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "service_account: str | None = None"
        },
        {
          "name": "use_robocorp_vault",
          "types": [
            "bool",
            "None"
          ],
          "typedocs": {
            "bool": "boolean",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "use_robocorp_vault: bool | None = None"
        },
        {
          "name": "token_file",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "token_file: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Initialize Google Cloud Storage client</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param service_account:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file path to service account file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param use_robocorp_vault:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">use credentials in <cite>Robocorp Vault</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param token_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file path to token file</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Initialize Google Cloud Storage client",
      "tags": [
        "init",
        "storage"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/storage.py",
      "lineno": 22
    },
    {
      "name": "Init Text To Speech",
      "args": [
        {
          "name": "service_account",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "service_account: str | None = None"
        },
        {
          "name": "use_robocorp_vault",
          "types": [
            "bool",
            "None"
          ],
          "typedocs": {
            "bool": "boolean",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "use_robocorp_vault: bool | None = None"
        },
        {
          "name": "token_file",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "token_file: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Initialize Google Cloud Text to Speech client</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param service_account:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file path to service account file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param use_robocorp_vault:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">use credentials in <cite>Robocorp Vault</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param token_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file path to token file</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Initialize Google Cloud Text to Speech client",
      "tags": [
        "init",
        "text to speech"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/text_to_speech.py",
      "lineno": 26
    },
    {
      "name": "Init Translation",
      "args": [
        {
          "name": "project_identifier",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "project_identifier: str"
        },
        {
          "name": "service_account",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "service_account: str | None = None"
        },
        {
          "name": "use_robocorp_vault",
          "types": [
            "bool",
            "None"
          ],
          "typedocs": {
            "bool": "boolean",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "use_robocorp_vault: bool | None = None"
        },
        {
          "name": "token_file",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "token_file: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Initialize Google Cloud Translation client</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param project_identifier:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">identifier for Translation project</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param service_account:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file path to service account file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param use_robocorp_vault:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">use credentials in <cite>Robocorp Vault</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param token_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file path to token file</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Initialize Google Cloud Translation client",
      "tags": [
        "init",
        "translation"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/translation.py",
      "lineno": 22
    },
    {
      "name": "Init Video Intelligence",
      "args": [
        {
          "name": "service_account",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "service_account: str | None = None"
        },
        {
          "name": "use_robocorp_vault",
          "types": [
            "bool",
            "None"
          ],
          "typedocs": {
            "bool": "boolean",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "use_robocorp_vault: bool | None = None"
        },
        {
          "name": "token_file",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "token_file: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Initialize Google Cloud Video Intelligence client</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param service_account:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file path to service account file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param use_robocorp_vault:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">use credentials in <cite>Robocorp Vault</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param token_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file path to token file</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Initialize Google Cloud Video Intelligence client",
      "tags": [
        "init",
        "video intelligence"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/video_intelligence.py",
      "lineno": 16
    },
    {
      "name": "Init Vision",
      "args": [
        {
          "name": "service_account",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "service_account: str | None = None"
        },
        {
          "name": "use_robocorp_vault",
          "types": [
            "bool",
            "None"
          ],
          "typedocs": {
            "bool": "boolean",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "use_robocorp_vault: bool | None = None"
        },
        {
          "name": "token_file",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "token_file: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Initialize Google Cloud Vision client</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param service_account:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file path to service account file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param use_robocorp_vault:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">use credentials in <cite>Robocorp Vault</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param token_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file path to token file</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Initialize Google Cloud Vision client",
      "tags": [
        "init",
        "vision"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/vision.py",
      "lineno": 15
    },
    {
      "name": "Insert Sheet Values",
      "args": [
        {
          "name": "spreadsheet_id",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "spreadsheet_id: str"
        },
        {
          "name": "sheet_range",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "sheet_range: str"
        },
        {
          "name": "values",
          "types": [
            "list"
          ],
          "typedocs": {
            "list": "list"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "values: list"
        },
        {
          "name": "major_dimension",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "COLUMNS",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "major_dimension: str = COLUMNS"
        },
        {
          "name": "value_input_option",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "USER_ENTERED",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "value_input_option: str = USER_ENTERED"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Insert values into sheet cells</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param spreadsheet_id:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">target spreadsheet</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param sheet_range:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">target sheet range</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param values:</th><td class=\"field-body\">list of values to insert into sheet</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param major_dimension:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">major dimension of the values, default <cite>COLUMNS</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param value_input_option:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">controls whether input strings are parsed or not,\ndefault <cite>USER_ENTERED</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">operation result</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples</strong></p>\n<p><strong>Python</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"n\">values</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">'aa'</span><span class=\"p\">,</span> <span class=\"s1\">'bb'</span><span class=\"p\">,</span> <span class=\"s1\">'cc'</span><span class=\"p\">]]</span><span class=\"w\">\n</span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">GOOGLE</span><span class=\"o\">.</span><span class=\"n\">insert_sheet_values</span><span class=\"p\">(</span><span class=\"n\">spreadsheet_id</span><span class=\"p\">,</span> <span class=\"s2\">&quot;A:C&quot;</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${values}</span><span class=\"p\">   </span><span class=\"c\">Evaluate</span><span class=\"p\">   </span><span class=\"c\">[[11, 12, 13], ['aa', 'bb', 'cc']]</span><span class=\"p\">\n</span><span class=\"c\">${result}=</span><span class=\"p\">  </span><span class=\"c\">Insert Sheet Values</span><span class=\"p\">   </span><span class=\"c\">${SPREADSHEET_ID}</span><span class=\"p\">  </span><span class=\"c\">A:B</span><span class=\"p\">  </span><span class=\"c\">${values}</span><span class=\"p\">\n</span><span class=\"c\">${result}=</span><span class=\"p\">  </span><span class=\"c\">Insert Sheet Values</span><span class=\"p\">   </span><span class=\"c\">${SPREADSHEET_ID}</span><span class=\"p\">  </span><span class=\"c\">A:B</span><span class=\"p\">  </span><span class=\"c\">${values}</span><span class=\"p\">  </span><span class=\"c\">ROWS</span>\n</pre>\n</div>\n",
      "shortdoc": "Insert values into sheet cells",
      "tags": [
        "sheets"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/sheets.py",
      "lineno": 77
    },
    {
      "name": "List Messages",
      "args": [
        {
          "name": "user_id",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "user_id: str"
        },
        {
          "name": "query",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "query: str"
        },
        {
          "name": "folder_name",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "folder_name: str | None = None"
        },
        {
          "name": "label_ids",
          "types": [
            "list",
            "None"
          ],
          "typedocs": {
            "list": "list",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "label_ids: list | None = None"
        },
        {
          "name": "max_results",
          "types": [
            "int",
            "None"
          ],
          "typedocs": {
            "int": "integer",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "max_results: int | None = None"
        },
        {
          "name": "include_json",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "include_json: bool = False"
        },
        {
          "name": "include_spam",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "include_spam: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>List messages</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param user_id:</th><td class=\"field-body\">user's email address. The special value me can\nbe used to indicate the authenticated user.</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param query:</th><td class=\"field-body\">message query</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param folder_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">path where attachments are saved, default current\ndirectory</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param label_ids:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">message label ids</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param max_results:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">maximum number of message to return</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param include_json:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">include original response json</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param include_spam:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">include messages from SPAM and TRASH</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">messages</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${messages}=</span><span class=\"p\">    </span><span class=\"c\">List Messages</span><span class=\"p\">    </span><span class=\"c\">me</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">from:mika&#64;robocorp.com</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">folder_name=${CURDIR}${/}target</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">include_json=True</span><span class=\"p\">\n</span><span class=\"c\">FOR</span><span class=\"p\">    </span><span class=\"c\">${msg}</span><span class=\"p\">    </span><span class=\"c\">IN</span><span class=\"p\">    </span><span class=\"c\">&#64;{messages}</span><span class=\"p\">\n    </span><span class=\"c\">Log Many</span><span class=\"p\">    </span><span class=\"c\">${msg}</span><span class=\"p\">\n</span><span class=\"c\">END</span>\n</pre>\n</div>\n",
      "shortdoc": "List messages",
      "tags": [
        "gmail"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/gmail.py",
      "lineno": 267
    },
    {
      "name": "List Processors",
      "args": [
        {
          "name": "project_id",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "project_id: str"
        },
        {
          "name": "region",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "region: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>List existing document AI processors from given project and region.</p>\n<p>Requires <cite>documentai.processors.list</cite> permission.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param project_id:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Google Cloud project ID</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param region:</th><td class=\"field-body\">Google Cloud region of the processor</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">list of available processors as a list</td>\n</tr>\n</tbody>\n</table>\n<p>Robot Framework example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">&#64;{processors}=</span><span class=\"p\">    </span><span class=\"c\">List Processors</span><span class=\"p\">    </span><span class=\"c\">${PROJECT_ID}</span><span class=\"p\">    </span><span class=\"c\">eu</span><span class=\"p\">\n</span><span class=\"c\">FOR</span><span class=\"p\">    </span><span class=\"c\">${p}</span><span class=\"p\">    </span><span class=\"c\">IN</span><span class=\"p\">    </span><span class=\"c\">&#64;{processors}</span><span class=\"p\">\n    </span><span class=\"c\"># name: projects/PROJECT_ID/locations/REGION/processors/PROCESSOR_ID\n</span><span class=\"p\">    </span><span class=\"c\">Log To Console</span><span class=\"p\">    </span><span class=\"c\">Processor name: ${p.name}</span><span class=\"p\">\n    </span><span class=\"c\">Log To Console</span><span class=\"p\">    </span><span class=\"c\">Processor type: ${p.type_}</span><span class=\"p\">\n    </span><span class=\"c\">Log To Console</span><span class=\"p\">    </span><span class=\"c\">Processor display name: ${p.display_name}</span><span class=\"p\">\n</span><span class=\"c\">END</span>\n</pre>\n<p>Python example:</p>\n<pre class=\"code python literal-block\">\n<span class=\"n\">processors</span> <span class=\"o\">=</span> <span class=\"n\">GOOGLE</span><span class=\"o\">.</span><span class=\"n\">list_processors</span><span class=\"p\">(</span><span class=\"n\">PROJECT_ID</span><span class=\"p\">,</span> <span class=\"s2\">&quot;eu&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">processors</span><span class=\"p\">:</span><span class=\"w\">\n</span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Processor name: </span><span class=\"si\">{</span><span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Processor type: </span><span class=\"si\">{</span><span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">type_</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Processor name: </span><span class=\"si\">{</span><span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">display_name</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n</pre>\n</div>\n",
      "shortdoc": "List existing document AI processors from given project and region.",
      "tags": [
        "document ai"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/document_ai.py",
      "lineno": 288
    },
    {
      "name": "List Shared Drive Files",
      "args": [
        {
          "name": "query",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "query: str | None = None"
        },
        {
          "name": "source",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "source: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Keyword for listing shared files in the source folder.</p>\n<p>Alias keyword for <tt class=\"docutils literal\">Search Drive Files</tt> which can be used to list\nonly files which have been shared.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param query:</th><td class=\"field-body\">drive query string to find target files</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param source:</th><td class=\"field-body\">source directory where query is executed</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">list of shared files</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${shared}=</span><span class=\"p\">    </span><span class=\"c\">List Shared Drive Files</span><span class=\"p\">    </span><span class=\"c\">source=subfolder</span><span class=\"p\">\n</span><span class=\"c\">FOR</span><span class=\"p\">    </span><span class=\"c\">${file}</span><span class=\"p\">    </span><span class=\"c\">IN</span><span class=\"p\">    </span><span class=\"c\">&#64;{shared}</span><span class=\"p\">\n    </span><span class=\"c\">Log To Console</span><span class=\"p\">    </span><span class=\"c\">${file}</span><span class=\"p\">\n</span><span class=\"c\">END</span>\n</pre>\n</div>\n",
      "shortdoc": "Keyword for listing shared files in the source folder.",
      "tags": [
        "drive",
        "drive share",
        "v2.0.0"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/drive.py",
      "lineno": 496
    },
    {
      "name": "List Storage Buckets",
      "args": [],
      "doc": "<div class=\"document\">\n<p>List Google Cloud Storage buckets</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">list of buckets</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples</strong></p>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${buckets}=</span><span class=\"p\">   </span><span class=\"c\">List Storage Buckets</span><span class=\"p\">\n</span><span class=\"c\">FOR</span><span class=\"p\">  </span><span class=\"c\">${bucket}</span><span class=\"p\">  </span><span class=\"c\">IN</span><span class=\"p\">   </span><span class=\"c\">&#64;{buckets}</span><span class=\"p\">\n    </span><span class=\"c\">Log</span><span class=\"p\">  </span><span class=\"c\">${bucket}</span><span class=\"p\">\n</span><span class=\"c\">END</span>\n</pre>\n</div>\n",
      "shortdoc": "List Google Cloud Storage buckets",
      "tags": [
        "storage"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/storage.py",
      "lineno": 98
    },
    {
      "name": "List Storage Files",
      "args": [
        {
          "name": "bucket_name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "bucket_name: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>List files in the bucket</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param bucket_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">name as string</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">list of object names in the bucket</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples</strong></p>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${files}=</span><span class=\"p\">   </span><span class=\"c\">List Storage Files</span><span class=\"p\">  </span><span class=\"c\">${BUCKET_NAME}</span><span class=\"p\">\n</span><span class=\"c\">FOR</span><span class=\"p\">  </span><span class=\"c\">${bucket}</span><span class=\"p\">  </span><span class=\"c\">IN</span><span class=\"p\">   </span><span class=\"c\">&#64;{files}</span><span class=\"p\">\n    </span><span class=\"c\">Log</span><span class=\"p\">  </span><span class=\"c\">${file}</span><span class=\"p\">\n</span><span class=\"c\">END</span>\n</pre>\n</div>\n",
      "shortdoc": "List files in the bucket",
      "tags": [
        "storage"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/storage.py",
      "lineno": 148
    },
    {
      "name": "List Supported Voices",
      "args": [
        {
          "name": "language_code",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "language_code: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>List supported voices for the speech</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param language_code:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">voice languages to list, defaults to None (all)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">list of supported voices</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples</strong></p>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${result}=</span><span class=\"p\">   </span><span class=\"c\">List Supported Voices</span><span class=\"p\">   </span><span class=\"c\">en-US</span>\n</pre>\n</div>\n",
      "shortdoc": "List supported voices for the speech",
      "tags": [
        "text to speech"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/text_to_speech.py",
      "lineno": 47
    },
    {
      "name": "Load Document Response",
      "args": [
        {
          "name": "filepath",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "filepath: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Loads the binary object saved by <tt class=\"docutils literal\">Save Document Response</tt> into\n<tt class=\"docutils literal\">documentai.Document</tt> format which is accessible by helper keywords.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param filepath:</th><td class=\"field-body\">source file to read binary document object from</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">processed document response object</td>\n</tr>\n</tbody>\n</table>\n<p>Robot Framework example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\"># load previously saved response\n${document}=</span><span class=\"p\">  </span><span class=\"c\">Load Document Response</span><span class=\"p\">  </span><span class=\"c\">${CURDIR}${/}google_processed.response</span><span class=\"p\">\n</span><span class=\"c\">${entities}=</span><span class=\"p\">  </span><span class=\"c\">Get Document Entities</span><span class=\"p\">  </span><span class=\"c\">${document}</span>\n</pre>\n<p>Python example:</p>\n<pre class=\"code python literal-block\">\n<span class=\"n\">document</span> <span class=\"o\">=</span> <span class=\"n\">GOOGLE</span><span class=\"o\">.</span><span class=\"n\">load_document_response</span><span class=\"p\">(</span><span class=\"s2\">&quot;google_doc.response&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"n\">entities</span> <span class=\"o\">=</span> <span class=\"n\">GOOGLE</span><span class=\"o\">.</span><span class=\"n\">get_document_entities</span><span class=\"p\">(</span><span class=\"n\">document</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"k\">for</span> <span class=\"n\">ent</span> <span class=\"ow\">in</span> <span class=\"n\">entities</span><span class=\"p\">:</span><span class=\"w\">\n</span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ent</span><span class=\"p\">)</span>\n</pre>\n</div>\n",
      "shortdoc": "Loads the binary object saved by ``Save Document Response`` into ``documentai.Document`` format which is accessible by helper keywords.",
      "tags": [
        "document ai"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/document_ai.py",
      "lineno": 202
    },
    {
      "name": "Move Drive File",
      "args": [
        {
          "name": "file_id",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "file_id: str | None = None"
        },
        {
          "name": "file_dict",
          "types": [
            "dict",
            "None"
          ],
          "typedocs": {
            "dict": "dictionary",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "file_dict: dict | None = None"
        },
        {
          "name": "query",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "query: str | None = None"
        },
        {
          "name": "source",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "source: str | None = None"
        },
        {
          "name": "target",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "target: str | None = None"
        },
        {
          "name": "multiple_ok",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "multiple_ok: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Move file specified by id, file dictionary or query string into target folder</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param file_id:</th><td class=\"field-body\">drive file id</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param file_dict:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file dictionary returned by <cite>Search Drive Files</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param query:</th><td class=\"field-body\">drive query string to find target file, needs to match 1 file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param source:</th><td class=\"field-body\">name of the folder to move file from, is by default drive's\n<cite>root</cite> folder id</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param target:</th><td class=\"field-body\">name of the folder to move file into, is by default drive's\n<cite>root</cite> folder id</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param multiple_ok:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">if <cite>True</cite> then moving more than 1 file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">list of file ids</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${source_id}=</span><span class=\"p\">  </span><span class=\"c\">Get Drive Folder Id</span><span class=\"p\">  </span><span class=\"c\">sourcefolder</span><span class=\"p\">\n</span><span class=\"c\">${query}=</span><span class=\"p\">      </span><span class=\"c\">Set Variable</span><span class=\"p\">  </span><span class=\"c\">name contains '.json' and '${sourceid}' in parents</span><span class=\"p\">\n</span><span class=\"c\">${files}=</span><span class=\"p\">      </span><span class=\"c\">Move Drive File</span><span class=\"p\">  </span><span class=\"c\">query=${query}</span><span class=\"p\">  </span><span class=\"c\">folder=target_folder</span><span class=\"p\">  </span><span class=\"c\">multiple_ok=True</span>\n</pre>\n</div>\n",
      "shortdoc": "Move file specified by id, file dictionary or query string into target folder",
      "tags": [
        "drive"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/drive.py",
      "lineno": 427
    },
    {
      "name": "Parse Parts",
      "args": [
        {
          "name": "msg_id",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "msg_id"
        },
        {
          "name": "msg",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "msg"
        },
        {
          "name": "parts",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "parts"
        },
        {
          "name": "folder_name",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "folder_name"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Utility function that parses the content of an email partition</p>\n</div>\n",
      "shortdoc": "Utility function that parses the content of an email partition",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/gmail.py",
      "lineno": 338
    },
    {
      "name": "Process Document",
      "args": [
        {
          "name": "project_id",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "project_id: str"
        },
        {
          "name": "region",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "region: str"
        },
        {
          "name": "processor_id",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "processor_id: str"
        },
        {
          "name": "file_path",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "file_path: str"
        },
        {
          "name": "mime_type",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "mime_type: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Process document in the Google Cloud platform\nusing given document processor ID within given project and\nregion.</p>\n<p>For a full list of Document response object attributes, please reference this\n<a class=\"reference external\" href=\"https://cloud.google.com/python/docs/reference/documentai/latest/google.cloud.documentai_v1.types.Document/\">page</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param project_id:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Google Cloud project ID</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param region:</th><td class=\"field-body\">Google Cloud region of the processor</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param processor_id:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">ID of the document processor</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param file_path:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">filepath of the document to process</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param mime_type:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">given mime type of document (optional),\nif not given it is auto detected</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">processed document response object</td>\n</tr>\n</tbody>\n</table>\n<p>Robot Framework example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${document}=</span><span class=\"p\">    </span><span class=\"c\">Process Document</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">project_id=${GOOGLE_PROJECT_ID}</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">region=eu</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">processor_id=${RECEIPT_PROCESSOR_ID}</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">file_path=${CURDIR}${/}mydocument.pdf</span><span class=\"p\">\n</span><span class=\"c\">${entities}=</span><span class=\"p\">    </span><span class=\"c\">Get Document Entities</span><span class=\"p\">    </span><span class=\"c\">${document}</span><span class=\"p\">\n</span><span class=\"c\">FOR</span><span class=\"p\">  </span><span class=\"c\">${ent}</span><span class=\"p\">  </span><span class=\"c\">IN</span><span class=\"p\">  </span><span class=\"c\">&#64;{entities}</span><span class=\"p\">\n    </span><span class=\"c\">Log To Console</span><span class=\"p\">  </span><span class=\"c\">Entity: ${ent}</span><span class=\"p\">\n</span><span class=\"c\">END</span><span class=\"p\">\n</span><span class=\"c\">${languages}=</span><span class=\"p\">    </span><span class=\"c\">Get Document Languages</span><span class=\"p\">    </span><span class=\"c\">${document}</span><span class=\"p\">\n</span><span class=\"c\">Log To Console</span><span class=\"p\">    </span><span class=\"c\">Languages: ${languages}</span>\n</pre>\n<p>Python example:</p>\n<pre class=\"code python literal-block\">\n<span class=\"n\">document</span> <span class=\"o\">=</span> <span class=\"n\">GOOGLE</span><span class=\"o\">.</span><span class=\"n\">process_document</span><span class=\"p\">(</span><span class=\"w\">\n</span>    <span class=\"n\">project_id</span><span class=\"o\">=</span><span class=\"n\">PROJECT_ID</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"n\">region</span><span class=\"o\">=</span><span class=\"s2\">&quot;eu&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"n\">processor_id</span><span class=\"o\">=</span><span class=\"n\">PROCESSOR_ID</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"n\">file_path</span><span class=\"o\">=</span><span class=\"s2\">&quot;./files/mydocument.pdf&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"n\">entities</span> <span class=\"o\">=</span> <span class=\"n\">GOOGLE</span><span class=\"o\">.</span><span class=\"n\">get_document_entities</span><span class=\"p\">(</span><span class=\"n\">document</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"k\">for</span> <span class=\"n\">ent</span> <span class=\"ow\">in</span> <span class=\"n\">entities</span><span class=\"p\">:</span><span class=\"w\">\n</span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ent</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"n\">languages</span> <span class=\"o\">=</span> <span class=\"n\">GOOGLE</span><span class=\"o\">.</span><span class=\"n\">get_document_languages</span><span class=\"p\">(</span><span class=\"n\">document</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"k\">for</span> <span class=\"n\">lang</span> <span class=\"ow\">in</span> <span class=\"n\">languages</span><span class=\"p\">:</span><span class=\"w\">\n</span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">lang</span><span class=\"p\">)</span>\n</pre>\n</div>\n",
      "shortdoc": "Process document in the Google Cloud platform using given document processor ID within given project and region.",
      "tags": [
        "document ai"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/document_ai.py",
      "lineno": 87
    },
    {
      "name": "Recognize Text From Audio",
      "args": [
        {
          "name": "audio_file",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "audio_file: str | None = None"
        },
        {
          "name": "audio_uri",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "audio_uri: str | None = None"
        },
        {
          "name": "encoding",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "encoding: str | None = None"
        },
        {
          "name": "language_code",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "en_US",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "language_code: str = en_US"
        },
        {
          "name": "audio_channel_count",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": "2",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "audio_channel_count: int = 2"
        },
        {
          "name": "sample_rate",
          "types": [
            "int",
            "None"
          ],
          "typedocs": {
            "int": "integer",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "sample_rate: int | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Recognize text in the audio file</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param audio_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">local audio file path</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param audio_uri:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Google Cloud Storage URI</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param encoding:</th><td class=\"field-body\">audio file encoding</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param language_code:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">language in the audio</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param audio_channel_count:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">number of audio channel</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param sample_rate:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">rate in hertz, for example 16000</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">recognized texts</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples</strong></p>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${result}=</span><span class=\"p\">  </span><span class=\"c\">Recognize Text From Audio</span><span class=\"p\">   </span><span class=\"c\">audio_file=${CURDIR}${/}test.mp3</span>\n</pre>\n</div>\n",
      "shortdoc": "Recognize text in the audio file",
      "tags": [
        "speech to text"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/speech_to_text.py",
      "lineno": 61
    },
    {
      "name": "Remove All Drive Shares",
      "args": [
        {
          "name": "file_id",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "file_id: str | None = None"
        },
        {
          "name": "file_dict",
          "types": [
            "dict",
            "None"
          ],
          "typedocs": {
            "dict": "dictionary",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "file_dict: dict | None = None"
        },
        {
          "name": "query",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "query: str | None = None"
        },
        {
          "name": "suppress_errors",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "suppress_errors: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Keyword for removing all shares from selected files (only owner\npermission is retained).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param file_id:</th><td class=\"field-body\">drive file id</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param file_dict:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file dictionary returned by <cite>Search Drive Files</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param query:</th><td class=\"field-body\">drive query string to find target files</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param suppress_errors:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">on True will log warning message instead of\nraising an exception, defaults to False (exception is raised)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">list of dictionaries containing information of file permissions removed</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${removed}=</span><span class=\"p\">  </span><span class=\"c\">Remove All Drive Shares</span><span class=\"p\">    </span><span class=\"c\">file_id=${FOLDER_ID}</span>\n</pre>\n</div>\n",
      "shortdoc": "Keyword for removing all shares from selected files (only owner permission is retained).",
      "tags": [
        "drive",
        "drive share",
        "v2.0.0"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/drive.py",
      "lineno": 998
    },
    {
      "name": "Remove Drive Share By Criteria",
      "args": [
        {
          "name": "email",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "email: str | None = None"
        },
        {
          "name": "domain",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "domain: str | None = None"
        },
        {
          "name": "permission_id",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "permission_id: str | None = None"
        },
        {
          "name": "file_id",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "file_id: str | None = None"
        },
        {
          "name": "file_dict",
          "types": [
            "dict",
            "None"
          ],
          "typedocs": {
            "dict": "dictionary",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "file_dict: dict | None = None"
        },
        {
          "name": "query",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "query: str | None = None"
        },
        {
          "name": "source",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "source: str | None = None"
        },
        {
          "name": "suppress_errors",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "suppress_errors: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Keyword for removing share from file or folder\nbased on criteria.</p>\n<p>Parameters <cite>file_id</cite>, <cite>file_dict</cite>, <cite>query</cite> and <cite>source</cite> can be\nused to select files from which sharing is removed.</p>\n<p>Parameters <cite>email</cite>, <cite>domain</cite> or <cite>permission_id</cite> can be\nused to select which share is removed from selected files.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param email:</th><td class=\"field-body\">email address of the permission to remove</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param domain:</th><td class=\"field-body\">domain name of the permission to remove</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param permission_id:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">id of the permission to remove</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param file_id:</th><td class=\"field-body\">drive file id</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param file_dict:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file dictionary returned by <cite>Search Drive Files</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param query:</th><td class=\"field-body\">drive query string to find target files</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param source:</th><td class=\"field-body\">name of the folder to search files in, is by default drive's\n<cite>root</cite> folder</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param suppress_errors:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">on True will log warning message instead of\nraising an exception, defaults to False (exception is raised)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">list of dictionaries containing information of file permissions removed</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\"># Remove domain shares for files in the folder ${FOLDER_NAME}\n${removed}=</span><span class=\"p\">    </span><span class=\"c\">Remove Drive Share By Criteria</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">domain=robocorp.com</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">source=${FOLDER_NAME}</span><span class=\"p\">\n</span><span class=\"c\"># Remove email share for a file\n${removed}=</span><span class=\"p\">    </span><span class=\"c\">Remove Drive Share By Criteria</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">query=name = 'okta.png'</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">email=robocorp.tester&#64;gmail.com</span>\n</pre>\n</div>\n",
      "shortdoc": "Keyword for removing share from file or folder based on criteria.",
      "tags": [
        "drive",
        "drive share",
        "v2.0.0"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/drive.py",
      "lineno": 891
    },
    {
      "name": "Remove Drive Share By Permission Id",
      "args": [
        {
          "name": "permission_id",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "permission_id: str"
        },
        {
          "name": "file_id",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "file_id: str | None = None"
        },
        {
          "name": "file_dict",
          "types": [
            "dict",
            "None"
          ],
          "typedocs": {
            "dict": "dictionary",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "file_dict: dict | None = None"
        },
        {
          "name": "query",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "query: str | None = None"
        },
        {
          "name": "source",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "source: str | None = None"
        },
        {
          "name": "suppress_errors",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "suppress_errors: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Keyword for removing share permission of file or folder\npermission id.</p>\n<p>Parameters <cite>file_id</cite>, <cite>file_dict</cite>, <cite>query</cite> and <cite>source</cite> can be\nused to select files from which sharing is removed.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param permission_id:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">id of the permission to remove</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param file_id:</th><td class=\"field-body\">drive file id</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param file_dict:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file dictionary returned by <cite>Search Drive Files</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param query:</th><td class=\"field-body\">drive query string to find target file, needs to match 1 file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param source:</th><td class=\"field-body\">name of the folder to search files in, is by default drive's\n<cite>root</cite> folder</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param suppress_errors:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">on True will log warning message instead of\nraising an exception, defaults to False (exception is raised)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">dictionary of permission response</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${share}=</span><span class=\"p\">   </span><span class=\"c\">Add Drive Share</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">  </span><span class=\"c\">query=name = 'sharable-files' and mimeType = 'application/vnd.google-apps.folder'</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">  </span><span class=\"c\">email=robocorp.tester&#64;gmail.com</span><span class=\"p\">\n</span><span class=\"c\">#\n# actions on shared files in the folder 'shareable-files' ....\n#\nRemove Drive Share By Permission Id</span><span class=\"p\">   </span><span class=\"c\">${share}[permission_id]</span><span class=\"p\">  </span><span class=\"c\">${share}[file_id]</span>\n</pre>\n</div>\n",
      "shortdoc": "Keyword for removing share permission of file or folder permission id.",
      "tags": [
        "drive",
        "drive share",
        "v2.0.0"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/drive.py",
      "lineno": 829
    },
    {
      "name": "Rename Sheet",
      "args": [
        {
          "name": "spreadsheet_id",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "spreadsheet_id: str"
        },
        {
          "name": "sheet_name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "sheet_name: str"
        },
        {
          "name": "new_sheet_name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "new_sheet_name: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Rename sheet in the spreadsheet</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param spreadsheet_id:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">id of the spreadsheet</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param sheet_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">existing name of the sheet</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param new_sheet_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">name for the new sheet</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">operation result as an dictionary</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples</strong></p>\n<p><strong>Python</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">GOOGLE</span><span class=\"o\">.</span><span class=\"n\">rename_sheet</span><span class=\"p\">(</span><span class=\"n\">spreadsheet_id</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Sheet1&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;New name&quot;</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${result}=</span><span class=\"p\">    </span><span class=\"c\">Rename Sheet</span><span class=\"p\">    </span><span class=\"c\">${SPREADSHEET_ID}</span><span class=\"p\">    </span><span class=\"c\">Sheet1</span><span class=\"p\">   </span><span class=\"c\">New name</span>\n</pre>\n</div>\n",
      "shortdoc": "Rename sheet in the spreadsheet",
      "tags": [
        "sheets"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/sheets.py",
      "lineno": 487
    },
    {
      "name": "Run Script",
      "args": [
        {
          "name": "script_id",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "script_id: str"
        },
        {
          "name": "function_name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "function_name: str"
        },
        {
          "name": "parameters",
          "types": [
            "dict",
            "None"
          ],
          "typedocs": {
            "dict": "dictionary",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "parameters: dict | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Run the Google Apps Script function</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param script_id:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Google Script identifier</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param function_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">name of the script function</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param parameters:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">script function parameters as a dictionary</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">raises AssertionError:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">thrown when Google Script returns errors</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">&amp;{params}=</span><span class=\"p\">    </span><span class=\"c\">Create Dictionary</span><span class=\"p\">  </span><span class=\"c\">formid=aaad4232</span><span class=\"p\">  </span><span class=\"c\">formvalues=1,2,3</span><span class=\"p\">\n</span><span class=\"c\">${response}=</span><span class=\"p\">  </span><span class=\"c\">Run Script</span><span class=\"p\">    </span><span class=\"c\">abc21397283712da</span><span class=\"p\">  </span><span class=\"c\">submit_form</span><span class=\"p\">   </span><span class=\"c\">${params}</span><span class=\"p\">\n</span><span class=\"c\">Log Many</span><span class=\"p\">   </span><span class=\"c\">${response}</span>\n</pre>\n</div>\n",
      "shortdoc": "Run the Google Apps Script function",
      "tags": [
        "apps script"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/apps_script.py",
      "lineno": 50
    },
    {
      "name": "Save Document Response",
      "args": [
        {
          "name": "document",
          "types": [
            "Document"
          ],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "document: Document"
        },
        {
          "name": "filepath",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "filepath: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Save <tt class=\"docutils literal\">Process Document</tt> response into a binary file.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param document:</th><td class=\"field-body\">response document object</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param filepath:</th><td class=\"field-body\">target file to save binary object into</td>\n</tr>\n</tbody>\n</table>\n<p>Robot Framework example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${document}=</span><span class=\"p\">    </span><span class=\"c\">Process Document</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">project_id=101134120147</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">region=eu</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">processor_id=${RECEIPT_PROCESSOR}</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">file_path=${file_in}</span><span class=\"p\">\n</span><span class=\"c\"># save response for later\nSave Document Response</span><span class=\"p\">  </span><span class=\"c\">${CURDIR}${/}google_processed.response</span>\n</pre>\n<p>Python example:</p>\n<pre class=\"code python literal-block\">\n<span class=\"n\">document</span> <span class=\"o\">=</span> <span class=\"n\">GOOGLE</span><span class=\"o\">.</span><span class=\"n\">process_document</span><span class=\"p\">(</span><span class=\"w\">\n</span>    <span class=\"n\">project_id</span><span class=\"o\">=</span><span class=\"n\">PROJECT_ID</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"n\">region</span><span class=\"o\">=</span><span class=\"s2\">&quot;eu&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"n\">processor_id</span><span class=\"o\">=</span><span class=\"n\">PROCESSOR_ID</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"n\">file_path</span><span class=\"o\">=</span><span class=\"s2\">&quot;./files/receipt1.jpg&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"n\">GOOGLE</span><span class=\"o\">.</span><span class=\"n\">save_document_response</span><span class=\"p\">(</span><span class=\"n\">document</span><span class=\"p\">,</span> <span class=\"s2\">&quot;receipt.response&quot;</span><span class=\"p\">)</span>\n</pre>\n</div>\n",
      "shortdoc": "Save ``Process Document`` response into a binary file.",
      "tags": [
        "document ai"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/document_ai.py",
      "lineno": 166
    },
    {
      "name": "Search Drive Files",
      "args": [
        {
          "name": "query",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "query: str | None = None"
        },
        {
          "name": "recurse",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "recurse: bool = False"
        },
        {
          "name": "source",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "source: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Search Google Drive for files matching query string</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param query:</th><td class=\"field-body\">search string, defaults to None which means that all files\nand folders are returned</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param recurse:</th><td class=\"field-body\">set to <cite>True</cite> if search should recursive</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param source:</th><td class=\"field-body\">source directory where query is executed</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">list of files</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${files}=</span><span class=\"p\">  </span><span class=\"c\">Search Drive Files</span><span class=\"p\">   </span><span class=\"c\">query=name contains 'hello'</span><span class=\"p\">\n</span><span class=\"c\">${files}=</span><span class=\"p\">  </span><span class=\"c\">Search Drive Files</span><span class=\"p\">   </span><span class=\"c\">query=modifiedTime &gt; '2020-06-04T12:00:00'</span><span class=\"p\">\n</span><span class=\"c\">${files}=</span><span class=\"p\">  </span><span class=\"c\">Search Drive Files</span><span class=\"p\">   </span><span class=\"c\">query=mimeType contains 'image/' or mimeType contains 'video/'</span><span class=\"p\">\n</span><span class=\"c\">${files}=</span><span class=\"p\">  </span><span class=\"c\">Search Drive Files</span><span class=\"p\">   </span><span class=\"c\">query=name contains '.yaml'</span><span class=\"p\">  </span><span class=\"c\">recurse=True</span><span class=\"p\">\n</span><span class=\"c\">${files}=</span><span class=\"p\">  </span><span class=\"c\">Search Drive Files</span><span class=\"p\">   </span><span class=\"c\">query=name contains '.yaml'</span><span class=\"p\">  </span><span class=\"c\">source=datadirectory</span>\n</pre>\n</div>\n",
      "shortdoc": "Search Google Drive for files matching query string",
      "tags": [
        "drive"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/drive.py",
      "lineno": 519
    },
    {
      "name": "Send Message",
      "args": [
        {
          "name": "sender",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "sender: str"
        },
        {
          "name": "to",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "to: str"
        },
        {
          "name": "subject",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "subject: str"
        },
        {
          "name": "message_text",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "message_text: str"
        },
        {
          "name": "attachments",
          "types": [
            "list",
            "None"
          ],
          "typedocs": {
            "list": "list",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "attachments: list | None = None"
        },
        {
          "name": "html",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "html: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Send an email message.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param sender:</th><td class=\"field-body\">message sender</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param to:</th><td class=\"field-body\">message recipient</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param subject:</th><td class=\"field-body\">message subject</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param message_text:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">message body text</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param attachment:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">list of files to add as message attachments</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param html:</th><td class=\"field-body\">set to True if message body is HTML (default False, plain text)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">sent message</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${attachments}=</span><span class=\"p\">  </span><span class=\"c\">Create List</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">  </span><span class=\"c\">${CURDIR}${/}random.txt</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">  </span><span class=\"c\">${CURDIR}${/}source.png</span><span class=\"p\">\n</span><span class=\"c\">Send Message</span><span class=\"p\">    </span><span class=\"c\">me</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">mika&#64;robocorp.com</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">message subject</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">body of the message</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">    </span><span class=\"c\">${attachments}</span>\n</pre>\n</div>\n",
      "shortdoc": "Send an email message.",
      "tags": [
        "gmail"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/gmail.py",
      "lineno": 138
    },
    {
      "name": "Set Audio Type",
      "args": [
        {
          "name": "audio_file",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "audio_file"
        },
        {
          "name": "audio_uri",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "audio_uri"
        }
      ],
      "doc": "<div class=\"document\">\n</div>\n",
      "shortdoc": "",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/speech_to_text.py",
      "lineno": 103
    },
    {
      "name": "Set Headers To Message Dict",
      "args": [
        {
          "name": "payload",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "payload"
        },
        {
          "name": "message_id",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "message_id"
        },
        {
          "name": "response",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "response"
        }
      ],
      "doc": "<div class=\"document\">\n</div>\n",
      "shortdoc": "",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/gmail.py",
      "lineno": 197
    },
    {
      "name": "Set Image Type",
      "args": [
        {
          "name": "image_file",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "image_file: str | None = None"
        },
        {
          "name": "image_uri",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "image_uri: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n</div>\n",
      "shortdoc": "",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/vision.py",
      "lineno": 35
    },
    {
      "name": "Set List Parameters",
      "args": [
        {
          "name": "user_id",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "user_id"
        },
        {
          "name": "query",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "query"
        },
        {
          "name": "label_ids",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "label_ids"
        },
        {
          "name": "max_results",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "max_results"
        },
        {
          "name": "include_spam",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "include_spam"
        }
      ],
      "doc": "<div class=\"document\">\n</div>\n",
      "shortdoc": "",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/gmail.py",
      "lineno": 187
    },
    {
      "name": "Set Robocorp Vault",
      "args": [
        {
          "name": "vault_name",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "vault_name: str | None = None"
        },
        {
          "name": "vault_secret_key",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "vault_secret_key: str | None = None"
        },
        {
          "name": "auth_type",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "serviceaccount",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "auth_type: str = serviceaccount"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Set Robocorp Vault name and secret key name\n:param vault_name: Robocorp Vault name\n:param vault_secret_key: Robocorp Vault secret key name\n:param auth_type: either <cite>serviceaccount</cite> or <cite>token</cite></p>\n</div>\n",
      "shortdoc": "Set Robocorp Vault name and secret key name :param vault_name: Robocorp Vault name :param vault_secret_key: Robocorp Vault secret key name :param auth_type: either `serviceaccount` or `token`",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/base.py",
      "lineno": 11
    },
    {
      "name": "Synthesize Speech",
      "args": [
        {
          "name": "text",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "text: str"
        },
        {
          "name": "language",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "en-US",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "language: str = en-US"
        },
        {
          "name": "name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "en-US-Standard-B",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "name: str = en-US-Standard-B"
        },
        {
          "name": "gender",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "MALE",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "gender: str = MALE"
        },
        {
          "name": "encoding",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "MP3",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "encoding: str = MP3"
        },
        {
          "name": "target_file",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "synthesized.mp3",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "target_file: str = synthesized.mp3"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Synthesize speech synchronously</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param text:</th><td class=\"field-body\">input text to synthesize</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param language:</th><td class=\"field-body\">voice language, defaults to &quot;en-US&quot;</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param name:</th><td class=\"field-body\">voice name, defaults to &quot;en-US-Standard-B&quot;</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param gender:</th><td class=\"field-body\">voice gender, defaults to &quot;MALE&quot;</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param encoding:</th><td class=\"field-body\">result encoding type, defaults to &quot;MP3&quot;</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param target_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">save synthesized output to file,\ndefaults to &quot;synthesized.mp3&quot;</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">synthesized output in bytes</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples</strong></p>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${result}=</span><span class=\"p\">   </span><span class=\"c\">Synthesize Speech</span><span class=\"p\">   </span><span class=\"c\">${text}</span>\n</pre>\n</div>\n",
      "shortdoc": "Synthesize speech synchronously",
      "tags": [
        "text to speech"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/text_to_speech.py",
      "lineno": 68
    },
    {
      "name": "To A1 Notation",
      "args": [
        {
          "name": "column_number",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "column_number: int"
        },
        {
          "name": "row_number",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "row_number: int"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Convert a column number and a row number into a cell reference.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param column_number:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">column number to convert</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param row_number:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">row number to convert</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">cell reference string</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Convert a column number and a row number into a cell reference.",
      "tags": [
        "sheets"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/sheets.py",
      "lineno": 803
    },
    {
      "name": "To Column Letter",
      "args": [
        {
          "name": "number",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "number: int"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Convert a column number into a column letter(s).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param number:</th><td class=\"field-body\">column number to convert</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">column letter(s)</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Convert a column number into a column letter(s).",
      "tags": [
        "sheets"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/sheets.py",
      "lineno": 391
    },
    {
      "name": "Translate",
      "args": [
        {
          "name": "text",
          "types": [
            "list",
            "str"
          ],
          "typedocs": {
            "list": "list",
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "text: list | str"
        },
        {
          "name": "source_language",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "source_language: str | None = None"
        },
        {
          "name": "target_language",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "target_language: str | None = None"
        },
        {
          "name": "mime_type",
          "types": [
            "TextType",
            "None"
          ],
          "typedocs": {
            "TextType": "TextType",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "mime_type: TextType | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Translate text</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param text:</th><td class=\"field-body\">text to translate</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param source_language:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">language code</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param target_language:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">language code</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param mime_type:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">text or html</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">translated text</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples</strong></p>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${result}=</span><span class=\"p\">   </span><span class=\"c\">Translate</span><span class=\"p\">   </span><span class=\"c\">${TEXT}</span><span class=\"p\">  </span><span class=\"c\">target_language=de</span>\n</pre>\n</div>\n",
      "shortdoc": "Translate text",
      "tags": [
        "translation"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/translation.py",
      "lineno": 46
    },
    {
      "name": "Update Drive File",
      "args": [
        {
          "name": "file_id",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "file_id: str | None = None"
        },
        {
          "name": "file_dict",
          "types": [
            "dict",
            "None"
          ],
          "typedocs": {
            "dict": "dictionary",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "file_dict: dict | None = None"
        },
        {
          "name": "query",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "query: str | None = None"
        },
        {
          "name": "source",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "source: str | None = None"
        },
        {
          "name": "action",
          "types": [
            "UpdateAction"
          ],
          "typedocs": {
            "UpdateAction": "UpdateAction"
          },
          "defaultValue": "star",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "action: UpdateAction = star"
        },
        {
          "name": "multiple_ok",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "multiple_ok: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Update file specified by id, file dictionary or query string</p>\n<p>Possible actions:\n- star\n- unstar\n- trash\n- untrash</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param file_id:</th><td class=\"field-body\">drive file id</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param file_dict:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">file dictionary returned by <cite>Drive Search Files</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param query:</th><td class=\"field-body\">drive query string to find target file, needs to match 1 file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param source:</th><td class=\"field-body\">source directory where query is executed</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param action:</th><td class=\"field-body\">update action, default star file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param multiple_ok:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">set to <cite>True</cite> if it is ok to perform update\non more than 1 file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">number of updated files</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${folder_id}=</span><span class=\"p\">  </span><span class=\"c\">Get Drive Folder Id</span><span class=\"p\">   </span><span class=\"c\">datafolder</span><span class=\"p\">\n</span><span class=\"c\">${updated}=</span><span class=\"p\">    </span><span class=\"c\">Update Drive File</span><span class=\"p\">  </span><span class=\"c\">query=name contains '.json' and '${folder_id}' in parents</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">            </span><span class=\"c\">action=star</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">            </span><span class=\"c\">multiple_ok=True</span>\n</pre>\n</div>\n",
      "shortdoc": "Update file specified by id, file dictionary or query string",
      "tags": [
        "drive"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/drive.py",
      "lineno": 243
    },
    {
      "name": "Update Sheet Values",
      "args": [
        {
          "name": "spreadsheet_id",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "spreadsheet_id: str"
        },
        {
          "name": "sheet_range",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "sheet_range: str"
        },
        {
          "name": "values",
          "types": [
            "list"
          ],
          "typedocs": {
            "list": "list"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "values: list"
        },
        {
          "name": "major_dimension",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "COLUMNS",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "major_dimension: str = COLUMNS"
        },
        {
          "name": "value_input_option",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "USER_ENTERED",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "value_input_option: str = USER_ENTERED"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Insert values into sheet cells</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param spreadsheet_id:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">target spreadsheet</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param sheet_range:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">target sheet range</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param values:</th><td class=\"field-body\">list of values to insert into sheet</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param major_dimension:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">major dimension of the values, default <cite>COLUMNS</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param value_input_option:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">controls whether input strings are parsed or not,\ndefault <cite>USER_ENTERED</cite></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">operation result</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples</strong></p>\n<p><strong>Python</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"n\">row_data</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">'aa'</span><span class=\"p\">,</span> <span class=\"s1\">'bb'</span><span class=\"p\">,</span> <span class=\"s1\">'cc'</span><span class=\"p\">]]</span><span class=\"w\">\n</span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">GOOGLE</span><span class=\"o\">.</span><span class=\"n\">update_sheet_values</span><span class=\"p\">(</span><span class=\"w\">\n</span>    <span class=\"n\">spreadsheet_id</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"s2\">&quot;A1:C1&quot;</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"n\">row_data</span><span class=\"p\">,</span><span class=\"w\">\n</span>    <span class=\"s2\">&quot;ROWS</span><span class=\"w\">\n</span>    <span class=\"p\">)</span>\n</pre>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${row}</span><span class=\"p\">  </span><span class=\"c\">Evaluate</span><span class=\"p\">   </span><span class=\"c\">[[22, 33 ,44]]</span><span class=\"p\">\n</span><span class=\"c\">${result}=</span><span class=\"p\">  </span><span class=\"c\">Update Sheet Values</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">   </span><span class=\"c\">${SPREADSHEET_ID}</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">   </span><span class=\"c\">A6:C6</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">   </span><span class=\"c\">${row}</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">   </span><span class=\"c\">ROWS</span>\n</pre>\n</div>\n",
      "shortdoc": "Insert values into sheet cells",
      "tags": [
        "sheets"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/sheets.py",
      "lineno": 126
    },
    {
      "name": "Upload Drive File",
      "args": [
        {
          "name": "filename",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "filename: str | None = None"
        },
        {
          "name": "folder",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "folder: str | None = None"
        },
        {
          "name": "overwrite",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "overwrite: bool = False"
        },
        {
          "name": "make_dir",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "make_dir: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Upload files into Drive</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param filename:</th><td class=\"field-body\">name of the file to upload</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param folder:</th><td class=\"field-body\">target folder for upload</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param overwrite:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">set to <cite>True</cite> if already existing file should be overwritten</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param make_dir:</th><td class=\"field-body\">set to <cite>True</cite> if folder should be created if it does not exist</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">uploaded file id</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${file1_id}=</span><span class=\"p\">  </span><span class=\"c\">Upload Drive File</span><span class=\"p\">  </span><span class=\"c\">data.json</span><span class=\"p\">  </span><span class=\"c\"># Upload file to drive root\n${file2_id}=</span><span class=\"p\">  </span><span class=\"c\">Upload Drive File</span><span class=\"p\">  </span><span class=\"c\">newdata.json</span><span class=\"p\">  </span><span class=\"c\">new_folder</span><span class=\"p\">  </span><span class=\"c\">make_dir=True</span><span class=\"p\">\n</span><span class=\"c\">${file3_id}=</span><span class=\"p\">  </span><span class=\"c\">Upload Drive File</span><span class=\"p\">  </span><span class=\"c\">data.json</span><span class=\"p\">  </span><span class=\"c\">overwrite=True</span>\n</pre>\n</div>\n",
      "shortdoc": "Upload files into Drive",
      "tags": [
        "drive"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/drive.py",
      "lineno": 69
    },
    {
      "name": "Upload Storage File",
      "args": [
        {
          "name": "bucket_name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "bucket_name: str"
        },
        {
          "name": "filename",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "filename: str"
        },
        {
          "name": "target_name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "target_name: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Upload a file into a bucket</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param bucket_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">name as string</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param filename:</th><td class=\"field-body\">filepath to upload file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param target_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">target object name</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples</strong></p>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Upload Storage File</span><span class=\"p\">  </span><span class=\"c\">${BUCKET_NAME}</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">   </span><span class=\"c\">${CURDIR}${/}test.txt</span><span class=\"p\">    </span><span class=\"c\">test.txt</span>\n</pre>\n</div>\n",
      "shortdoc": "Upload a file into a bucket",
      "tags": [
        "storage"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/storage.py",
      "lineno": 173
    },
    {
      "name": "Upload Storage Files",
      "args": [
        {
          "name": "bucket_name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "bucket_name: str"
        },
        {
          "name": "files",
          "types": [
            "dict"
          ],
          "typedocs": {
            "dict": "dictionary"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "files: dict"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Upload files into a bucket</p>\n<p>Example <cite>files</cite>:\n<cite>files = {&quot;mytestimg&quot;: &quot;image1.png&quot;, &quot;mydoc&quot;: &quot;google.pdf&quot;}</cite></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param bucket_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">name as string</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param files:</th><td class=\"field-body\">dictionary of object names and filepaths</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples</strong></p>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${files}=</span><span class=\"p\">   </span><span class=\"c\">Create Dictionary</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">   </span><span class=\"c\">test1.txt</span><span class=\"p\">   </span><span class=\"c\">${CURDIR}${/}test1.txt</span><span class=\"p\">\n</span><span class=\"c\">...</span><span class=\"p\">   </span><span class=\"c\">test2.txt</span><span class=\"p\">   </span><span class=\"c\">${CURDIR}${/}test2.txt</span><span class=\"p\">\n</span><span class=\"c\">Upload Storage Files</span><span class=\"p\">   </span><span class=\"c\">${BUCKET_NAME}</span><span class=\"p\">   </span><span class=\"c\">${files}</span>\n</pre>\n</div>\n",
      "shortdoc": "Upload files into a bucket",
      "tags": [
        "storage"
      ],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Cloud/Google/keywords/storage.py",
      "lineno": 197
    }
  ],
  "dataTypes": {
    "enums": [
      {
        "type": "Enum",
        "name": "DriveRole",
        "doc": "<div class=\"document\">\n<p>Possible Drive user roles</p>\n</div>\n",
        "members": [
          {
            "name": "OWNER",
            "value": "owner"
          },
          {
            "name": "ORGANIZER",
            "value": "organizer"
          },
          {
            "name": "FILE_ORGANIZER",
            "value": "fileOrganizer"
          },
          {
            "name": "WRITER",
            "value": "writer"
          },
          {
            "name": "COMMENTER",
            "value": "commenter"
          },
          {
            "name": "READER",
            "value": "reader"
          }
        ]
      },
      {
        "type": "Enum",
        "name": "DriveType",
        "doc": "<div class=\"document\">\n<p>Possible Drive Share types</p>\n</div>\n",
        "members": [
          {
            "name": "USER",
            "value": "user"
          },
          {
            "name": "GROUP",
            "value": "group"
          },
          {
            "name": "DOMAIN",
            "value": "domain"
          },
          {
            "name": "ANY",
            "value": "anyone"
          }
        ]
      },
      {
        "type": "Enum",
        "name": "TextType",
        "doc": "<div class=\"document\">\n<p>Possible text types.</p>\n</div>\n",
        "members": [
          {
            "name": "TEXT",
            "value": "Type.PLAIN_TEXT"
          },
          {
            "name": "HTML",
            "value": "Type.HTML"
          }
        ]
      },
      {
        "type": "Enum",
        "name": "UpdateAction",
        "doc": "<div class=\"document\">\n<p>Possible file update actions.</p>\n</div>\n",
        "members": [
          {
            "name": "trash",
            "value": "1"
          },
          {
            "name": "untrash",
            "value": "2"
          },
          {
            "name": "star",
            "value": "3"
          },
          {
            "name": "unstar",
            "value": "4"
          }
        ]
      }
    ],
    "typedDicts": []
  },
  "typedocs": [
    {
      "type": "Standard",
      "name": "boolean",
      "doc": "<p>Strings <code>TRUE</code>, <code>YES</code>, <code>ON</code> and <code>1</code> are converted to Boolean <code>True</code>, the empty string as well as strings <code>FALSE</code>, <code>NO</code>, <code>OFF</code> and <code>0</code> are converted to Boolean <code>False</code>, and the string <code>NONE</code> is converted to the Python <code>None</code> object. Other strings and other accepted values are passed as-is, allowing keywords to handle them specially if needed. All string comparisons are case-insensitive.</p>\n<p>Examples: <code>TRUE</code> (converted to <code>True</code>), <code>off</code> (converted to <code>False</code>), <code>example</code> (used as-is)</p>",
      "usages": [
        "Add Drive Share",
        "Create Message",
        "Delete Drive File",
        "Get Drive File By Id",
        "Get Drive Folder Id",
        "Init Apps Script",
        "Init Document AI",
        "Init Drive",
        "Init Gmail",
        "Init Natural Language",
        "Init Sheets",
        "Init Speech To Text",
        "Init Storage",
        "Init Text To Speech",
        "Init Translation",
        "Init Video Intelligence",
        "Init Vision",
        "List Messages",
        "Move Drive File",
        "Remove All Drive Shares",
        "Remove Drive Share By Criteria",
        "Remove Drive Share By Permission Id",
        "Search Drive Files",
        "Send Message",
        "Update Drive File",
        "Upload Drive File"
      ],
      "accepts": [
        "string",
        "integer",
        "float",
        "None"
      ]
    },
    {
      "type": "Standard",
      "name": "dictionary",
      "doc": "<p>Strings must be Python <a href=\"https://docs.python.org/library/stdtypes.html#dict\">dictionary</a> literals. They are converted to actual dictionaries using the <a href=\"https://docs.python.org/library/ast.html#ast.literal_eval\">ast.literal_eval</a> function. They can contain any values <code>ast.literal_eval</code> supports, including dictionaries and other containers.</p>\n<p>Examples: <code>{'a': 1, 'b': 2}</code>, <code>{'key': 1, 'nested': {'key': 2}}</code></p>",
      "usages": [
        "Add Drive Share",
        "Delete Drive File",
        "Download Drive Files",
        "Export Drive File",
        "Generic Spreadsheet Batch Update",
        "Move Drive File",
        "Remove All Drive Shares",
        "Remove Drive Share By Criteria",
        "Remove Drive Share By Permission Id",
        "Run Script",
        "Update Drive File",
        "Upload Storage Files"
      ],
      "accepts": [
        "string",
        "Mapping"
      ]
    },
    {
      "type": "Enum",
      "name": "DriveRole",
      "doc": "<div class=\"document\">\n<p>Possible Drive user roles</p>\n</div>\n",
      "usages": [
        "Add Drive Share"
      ],
      "accepts": [
        "string"
      ],
      "members": [
        {
          "name": "OWNER",
          "value": "owner"
        },
        {
          "name": "ORGANIZER",
          "value": "organizer"
        },
        {
          "name": "FILE_ORGANIZER",
          "value": "fileOrganizer"
        },
        {
          "name": "WRITER",
          "value": "writer"
        },
        {
          "name": "COMMENTER",
          "value": "commenter"
        },
        {
          "name": "READER",
          "value": "reader"
        }
      ]
    },
    {
      "type": "Enum",
      "name": "DriveType",
      "doc": "<div class=\"document\">\n<p>Possible Drive Share types</p>\n</div>\n",
      "usages": [
        "Add Drive Share"
      ],
      "accepts": [
        "string"
      ],
      "members": [
        {
          "name": "USER",
          "value": "user"
        },
        {
          "name": "GROUP",
          "value": "group"
        },
        {
          "name": "DOMAIN",
          "value": "domain"
        },
        {
          "name": "ANY",
          "value": "anyone"
        }
      ]
    },
    {
      "type": "Standard",
      "name": "float",
      "doc": "<p>Conversion is done using Python's <a href=\"https://docs.python.org/library/functions.html#float\">float</a> built-in function.</p>\n<p>Starting from RF 4.1, spaces and underscores can be used as visual separators for digit grouping purposes.</p>\n<p>Examples: <code>3.14</code>, <code>2.9979e8</code>, <code>10 000.000 01</code></p>",
      "usages": [
        "Download Drive Files"
      ],
      "accepts": [
        "string",
        "Real"
      ]
    },
    {
      "type": "Standard",
      "name": "integer",
      "doc": "<p>Conversion is done using Python's <a href=\"https://docs.python.org/library/functions.html#int\">int</a> built-in function. Floating point numbers are accepted only if they can be represented as integers exactly. For example, <code>1.0</code> is accepted and <code>1.1</code> is not.</p>\n<p>Starting from RF 4.1, it is possible to use hexadecimal, octal and binary numbers by prefixing values with <code>0x</code>, <code>0o</code> and <code>0b</code>, respectively.</p>\n<p>Starting from RF 4.1, spaces and underscores can be used as visual separators for digit grouping purposes.</p>\n<p>Examples: <code>42</code>, <code>-1</code>, <code>0b1010</code>, <code>10 000 000</code>, <code>0xBAD_C0FFEE</code></p>",
      "usages": [
        "Annotate Video",
        "Copy Sheet",
        "Download Drive Files",
        "List Messages",
        "Recognize Text From Audio",
        "To A1 Notation",
        "To Column Letter"
      ],
      "accepts": [
        "string",
        "float"
      ]
    },
    {
      "type": "Standard",
      "name": "list",
      "doc": "<p>Strings must be Python <a href=\"https://docs.python.org/library/stdtypes.html#list\">list</a> literals. They are converted to actual lists using the <a href=\"https://docs.python.org/library/ast.html#ast.literal_eval\">ast.literal_eval</a> function. They can contain any values <code>ast.literal_eval</code> supports, including lists and other containers.</p>\n<p>Examples: <code>['one', 'two']</code>, <code>[('one', 1), ('two', 2)]</code></p>",
      "usages": [
        "Create Message",
        "Init Apps Script",
        "Init Drive",
        "Init Gmail",
        "Init Sheets",
        "Insert Sheet Values",
        "List Messages",
        "Send Message",
        "Translate",
        "Update Sheet Values"
      ],
      "accepts": [
        "string",
        "Sequence"
      ]
    },
    {
      "type": "Standard",
      "name": "None",
      "doc": "<p>String <code>NONE</code> (case-insensitive) is converted to Python <code>None</code> object. Other values cause an error.</p>",
      "usages": [
        "__init__",
        "Add Drive Share",
        "Analyze Sentiment",
        "Annotate Image",
        "Annotate Video",
        "Classify Text",
        "Copy Sheet",
        "Create Drive Directory",
        "Create Message",
        "Delete Drive File",
        "Detect Document",
        "Detect Labels",
        "Detect Tables",
        "Detect Text",
        "Download Drive Files",
        "Export Drive File",
        "Face Detection",
        "Get All Sheet Values",
        "Get Drive Folder Id",
        "Get Sheet Values",
        "Init Apps Script",
        "Init Document AI",
        "Init Drive",
        "Init Gmail",
        "Init Natural Language",
        "Init Sheets",
        "Init Speech To Text",
        "Init Storage",
        "Init Text To Speech",
        "Init Translation",
        "Init Video Intelligence",
        "Init Vision",
        "List Messages",
        "List Shared Drive Files",
        "List Supported Voices",
        "Move Drive File",
        "Process Document",
        "Recognize Text From Audio",
        "Remove All Drive Shares",
        "Remove Drive Share By Criteria",
        "Remove Drive Share By Permission Id",
        "Run Script",
        "Search Drive Files",
        "Send Message",
        "Set Image Type",
        "Set Robocorp Vault",
        "Translate",
        "Update Drive File",
        "Upload Drive File"
      ],
      "accepts": [
        "string"
      ]
    },
    {
      "type": "Standard",
      "name": "string",
      "doc": "<p>All arguments are converted to Unicode strings.</p>",
      "usages": [
        "__init__",
        "Add Drive Share",
        "Analyze Sentiment",
        "Annotate Image",
        "Annotate Video",
        "Classify Text",
        "Clear Sheet Values",
        "Copy Sheet",
        "Copy Spreadsheet",
        "Create Drive Directory",
        "Create Message",
        "Create Sheet",
        "Create Spreadsheet",
        "Create Storage Bucket",
        "Delete Drive File",
        "Delete Sheet",
        "Delete Storage Bucket",
        "Delete Storage Files",
        "Detect Document",
        "Detect Labels",
        "Detect Tables",
        "Detect Text",
        "Download Drive Files",
        "Download Storage Files",
        "Export Drive File",
        "Face Detection",
        "Generic Spreadsheet Batch Update",
        "Get All Sheet Values",
        "Get Drive File By Id",
        "Get Drive Folder Id",
        "Get Sheet By Name",
        "Get Sheet Formulas",
        "Get Sheet Values",
        "Get Spreadsheet Basic Information",
        "Get Spreadsheet Details",
        "Get Storage Bucket",
        "Init Apps Script",
        "Init Document AI",
        "Init Drive",
        "Init Gmail",
        "Init Natural Language",
        "Init Sheets",
        "Init Speech To Text",
        "Init Storage",
        "Init Text To Speech",
        "Init Translation",
        "Init Video Intelligence",
        "Init Vision",
        "Insert Sheet Values",
        "List Messages",
        "List Processors",
        "List Shared Drive Files",
        "List Storage Files",
        "List Supported Voices",
        "Load Document Response",
        "Move Drive File",
        "Process Document",
        "Recognize Text From Audio",
        "Remove All Drive Shares",
        "Remove Drive Share By Criteria",
        "Remove Drive Share By Permission Id",
        "Rename Sheet",
        "Run Script",
        "Save Document Response",
        "Search Drive Files",
        "Send Message",
        "Set Image Type",
        "Set Robocorp Vault",
        "Synthesize Speech",
        "Translate",
        "Update Drive File",
        "Update Sheet Values",
        "Upload Drive File",
        "Upload Storage File",
        "Upload Storage Files"
      ],
      "accepts": [
        "Any"
      ]
    },
    {
      "type": "Enum",
      "name": "TextType",
      "doc": "<div class=\"document\">\n<p>Possible text types.</p>\n</div>\n",
      "usages": [
        "Analyze Sentiment",
        "Classify Text",
        "Translate"
      ],
      "accepts": [
        "string"
      ],
      "members": [
        {
          "name": "TEXT",
          "value": "Type.PLAIN_TEXT"
        },
        {
          "name": "HTML",
          "value": "Type.HTML"
        }
      ]
    },
    {
      "type": "Enum",
      "name": "UpdateAction",
      "doc": "<div class=\"document\">\n<p>Possible file update actions.</p>\n</div>\n",
      "usages": [
        "Update Drive File"
      ],
      "accepts": [
        "string"
      ],
      "members": [
        {
          "name": "trash",
          "value": "1"
        },
        {
          "name": "untrash",
          "value": "2"
        },
        {
          "name": "star",
          "value": "3"
        },
        {
          "name": "unstar",
          "value": "4"
        }
      ]
    }
  ]
}