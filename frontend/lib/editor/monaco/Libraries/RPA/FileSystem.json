{
  "specversion": 1,
  "name": "RPA.FileSystem",
  "doc": "<div class=\"document\">\n<p>The <cite>FileSystem</cite> library can be used to interact with files and directories\non the local computer. It can inspect and list files, remove and create them,\nread contents from files, and write data out.</p>\n<p>It shadows the built-in <cite>OperatingSystem</cite> library but contains keywords\nwhich are more RPA-oriented.</p>\n<p><strong>Examples</strong></p>\n<p><strong>Robot Framework</strong></p>\n<p>The library allows, for instance, iterating over files and inspecting them.</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Settings ***</span><span class=\"p\">\n</span><span class=\"kn\">Library</span><span class=\"p\">    </span><span class=\"nn\">RPA.FileSystem</span><span class=\"p\">\n\n</span><span class=\"gh\">*** Keywords ***</span><span class=\"p\">\n</span><span class=\"gu\">Delete large files</span><span class=\"p\">\n    ${</span><span class=\"nv\">files</span><span class=\"p\">}=    </span><span class=\"nf\">List files in directory</span><span class=\"p\">    </span><span class=\"s\">archive/orders/</span><span class=\"p\">\n    </span><span class=\"nf\">FOR</span><span class=\"p\">    ${</span><span class=\"nv\">file</span><span class=\"p\">}  </span><span class=\"s\">IN</span><span class=\"p\">  &#64;{</span><span class=\"nv\">FILES</span><span class=\"p\">}\n        </span><span class=\"nf\">Run keyword if</span><span class=\"p\">    ${</span><span class=\"nv\">file.size</span><span class=\"p\">}</span><span class=\"s\"> &gt; 10**8</span><span class=\"p\">    </span><span class=\"s\">Remove file</span><span class=\"p\">    ${</span><span class=\"nv\">file</span><span class=\"p\">}\n    </span><span class=\"nf\">END</span><span class=\"p\">\n\n</span><span class=\"gu\">Read process output</span><span class=\"p\">\n    </span><span class=\"nf\">Start external program</span><span class=\"p\">\n    </span><span class=\"nf\">Wait until modified</span><span class=\"p\">    </span><span class=\"s\">process.log</span><span class=\"p\">\n    ${</span><span class=\"nv\">output</span><span class=\"p\">}=  </span><span class=\"nf\">Read file</span><span class=\"p\">  </span><span class=\"s\">process.log</span><span class=\"p\">\n    [</span><span class=\"kn\">Return</span><span class=\"p\">]    ${</span><span class=\"nv\">output</span><span class=\"p\">}</span>\n</pre>\n<p><strong>Python</strong></p>\n<p>The library can also be used inside Python.</p>\n<pre class=\"code python literal-block\">\n<span class=\"kn\">from</span> <span class=\"nn\">RPA.FileSystem</span> <span class=\"kn\">import</span> <span class=\"n\">FileSystem</span><span class=\"w\">\n\n</span><span class=\"k\">def</span> <span class=\"nf\">move_to_archive</span><span class=\"p\">():</span><span class=\"w\">\n</span>    <span class=\"n\">lib</span> <span class=\"o\">=</span> <span class=\"n\">FileSystem</span><span class=\"p\">()</span><span class=\"w\">\n\n</span>    <span class=\"n\">matches</span> <span class=\"o\">=</span> <span class=\"n\">lib</span><span class=\"o\">.</span><span class=\"n\">find_files</span><span class=\"p\">(</span><span class=\"s2\">&quot;**/*.xlsx&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span>    <span class=\"k\">if</span> <span class=\"n\">matches</span><span class=\"p\">:</span><span class=\"w\">\n</span>        <span class=\"n\">lib</span><span class=\"o\">.</span><span class=\"n\">create_directory</span><span class=\"p\">(</span><span class=\"s2\">&quot;archive&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span>        <span class=\"n\">lib</span><span class=\"o\">.</span><span class=\"n\">move_files</span><span class=\"p\">(</span><span class=\"n\">matches</span><span class=\"p\">,</span> <span class=\"s2\">&quot;archive&quot;</span><span class=\"p\">)</span>\n</pre>\n</div>\n",
  "version": "",
  "generated": "2024-10-30 10:09:55",
  "type": "LIBRARY",
  "scope": "GLOBAL",
  "docFormat": "HTML",
  "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
  "lineno": 70,
  "tags": [],
  "inits": [],
  "keywords": [
    {
      "name": "Absolute Path",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str | Path"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Returns the absolute path to a file, and resolves symlinks.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path that will be resolved</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">absolute path to file as a string</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Returns the absolute path to a file, and resolves symlinks.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 815
    },
    {
      "name": "Append To Binary File",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str | Path"
        },
        {
          "name": "content",
          "types": [
            "Any"
          ],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "content: Any"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Appends binary content to the given file.</p>\n<p>See <tt class=\"docutils literal\">Create Binary File</tt> for usage example.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path to file to append to</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param content:</th><td class=\"field-body\">content to append</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Appends binary content to the given file.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 501
    },
    {
      "name": "Append To File",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str | Path"
        },
        {
          "name": "content",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "content: str"
        },
        {
          "name": "encoding",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "utf-8",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "encoding: str = utf-8"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Appends text to the given file.</p>\n<p>See <tt class=\"docutils literal\">Create File</tt> for usage example.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path to file to append to</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param content:</th><td class=\"field-body\">content to append</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param encoding:</th><td class=\"field-body\">character encoding of appended content</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Appends text to the given file.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 483
    },
    {
      "name": "Change File Extension",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str | Path"
        },
        {
          "name": "extension",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "extension: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Replaces file extension for file at given path. the file\nextension can be removed by passing an empty string.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path to file to rename</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param extension:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">new extension, e.g. .xlsx</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Change a file extension</span><span class=\"p\">\n    </span><span class=\"nf\">Change file extension</span><span class=\"p\">\n    ...    </span><span class=\"s\">devdata/work-items-in/default/orders.xls</span><span class=\"p\">\n    ...    </span><span class=\"s\">.xlsx</span>\n</pre>\n</div>\n",
      "shortdoc": "Replaces file extension for file at given path. the file extension can be removed by passing an empty string.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 776
    },
    {
      "name": "Copy Directory",
      "args": [
        {
          "name": "source",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "source: str | Path"
        },
        {
          "name": "destination",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "destination: str | Path"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Copy directory from source path to destination path.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param source:</th><td class=\"field-body\">path to source directory</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param destination:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">path to copy destination</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Copy a directory</span><span class=\"p\">\n    </span><span class=\"nf\">Copy directory</span><span class=\"p\">    </span><span class=\"s\">output</span><span class=\"p\">    </span><span class=\"s\">temp</span>\n</pre>\n</div>\n",
      "shortdoc": "Copy directory from source path to destination path.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 662
    },
    {
      "name": "Copy File",
      "args": [
        {
          "name": "source",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "source: str | Path"
        },
        {
          "name": "destination",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "destination: str | Path"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Copy a file from source path to destination path.</p>\n<p>See <tt class=\"docutils literal\">Is Directory Empty</tt> for usage example.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param source:</th><td class=\"field-body\">path to source file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param destination:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">path to copy destination</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Copy a file from source path to destination path.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 617
    },
    {
      "name": "Copy Files",
      "args": [
        {
          "name": "sources",
          "types": [
            "List[str | Path]"
          ],
          "typedocs": {
            "List[str | Path]": "list"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "sources: List[str | Path]"
        },
        {
          "name": "destination",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "destination: str | Path"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Copy multiple files to destination folder.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param sources:</th><td class=\"field-body\">list of source files</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param destination:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">path to destination folder</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Copy some files</span><span class=\"p\">\n    ${</span><span class=\"nv\">files</span><span class=\"p\">}=    </span><span class=\"nf\">Find files</span><span class=\"p\">    </span><span class=\"s\">devdata/*.json</span><span class=\"p\">\n    </span><span class=\"nf\">Copy files</span><span class=\"p\">    ${</span><span class=\"nv\">files</span><span class=\"p\">}    </span><span class=\"s\">output</span>\n</pre>\n</div>\n",
      "shortdoc": "Copy multiple files to destination folder.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 635
    },
    {
      "name": "Create Binary File",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str | Path"
        },
        {
          "name": "content",
          "types": [
            "Any",
            "None"
          ],
          "typedocs": {
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "content: Any | None = None"
        },
        {
          "name": "overwrite",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "overwrite: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Creates a new binary file, and writes content if any is given.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path to file to write</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param content:</th><td class=\"field-body\">content to write to file (optional)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param overwrite:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">replace destination file if it already exists</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Create a new file</span><span class=\"p\">\n    ${</span><span class=\"nv\">content</span><span class=\"p\">}=    </span><span class=\"nf\">Get</span><span class=\"p\">\n    ...    </span><span class=\"s\">url=https://file-examples.com/storage/fe88505b6162b2538a045ce/2017/10/file_example_JPG_100kB.jpg</span><span class=\"p\">\n    </span><span class=\"nf\">Create binary file</span><span class=\"p\">    </span><span class=\"s\">output/sample.jpg</span><span class=\"p\">    </span><span class=\"s\">content=</span><span class=\"p\">${</span><span class=\"nv\">content.content</span><span class=\"p\">}    </span><span class=\"s\">overwrite=</span><span class=\"p\">${</span><span class=\"nv\">True</span><span class=\"p\">}</span>\n</pre>\n</div>\n",
      "shortdoc": "Creates a new binary file, and writes content if any is given.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 456
    },
    {
      "name": "Create Directory",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str | Path"
        },
        {
          "name": "parents",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "parents: bool = False"
        },
        {
          "name": "exist_ok",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "True",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "exist_ok: bool = True"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Creates a directory and (optionally) non-existing parent directories.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path to new directory</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param parents:</th><td class=\"field-body\">create missing parent directories (defaults to <tt class=\"docutils literal\">False</tt>)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param exist_ok:</th><td class=\"field-body\">continue without errors if directory\nalready exists (defaults to <tt class=\"docutils literal\">True</tt>)</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Create new path</span><span class=\"p\">\n    </span><span class=\"nf\">Create directory</span><span class=\"p\">    </span><span class=\"s\">output/my/new/path</span><span class=\"p\">    </span><span class=\"s\">parents=</span><span class=\"p\">${</span><span class=\"nv\">True</span><span class=\"p\">}</span>\n</pre>\n</div>\n",
      "shortdoc": "Creates a directory and (optionally) non-existing parent directories.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 516
    },
    {
      "name": "Create File",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str | Path"
        },
        {
          "name": "content",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "content: str | None = None"
        },
        {
          "name": "encoding",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "utf-8",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "encoding: str = utf-8"
        },
        {
          "name": "overwrite",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "overwrite: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Creates a new text file, and writes content if any is given.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path to file to write</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param content:</th><td class=\"field-body\">content to write to file (optional)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param encoding:</th><td class=\"field-body\">character encoding of written content (default <tt class=\"docutils literal\"><span class=\"pre\">utf-8</span></tt>)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param overwrite:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">replace destination file if it already\nexists (default <tt class=\"docutils literal\">False</tt>)</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Create a new file</span><span class=\"p\">\n    ${</span><span class=\"nv\">content</span><span class=\"p\">}=    </span><span class=\"nf\">Get</span><span class=\"p\">    </span><span class=\"s\">url=https://www.example.com</span><span class=\"p\">\n    </span><span class=\"nf\">Create file</span><span class=\"p\">    </span><span class=\"s\">output/newfile.html</span><span class=\"p\">    </span><span class=\"s\">content=</span><span class=\"p\">${</span><span class=\"nv\">content.text</span><span class=\"p\">}\n    ...    </span><span class=\"s\">overwrite=</span><span class=\"p\">${</span><span class=\"nv\">True</span><span class=\"p\">}</span>\n</pre>\n</div>\n",
      "shortdoc": "Creates a new text file, and writes content if any is given.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 423
    },
    {
      "name": "Does Directory Exist",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str | Path"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Returns True if the given directory exists, False if not.</p>\n<p>See <tt class=\"docutils literal\">Does Directory Not Exist</tt> for usage example.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path to inspected directory</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">true or false if the directory exists</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Returns True if the given directory exists, False if not.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 285
    },
    {
      "name": "Does Directory Not Exist",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str | Path"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Returns True if the directory does not exist, False if it does.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path to inspected directory</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">true or false if the directory does not exists</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks</span><span class=\"p\">  </span><span class=\"gh\">***</span><span class=\"p\">\n</span><span class=\"gu\">Check for directory</span><span class=\"p\">\n    ${</span><span class=\"nv\">directory_exists</span><span class=\"p\">}=    </span><span class=\"nf\">Does directory not exist</span><span class=\"p\">    </span><span class=\"s\">output</span><span class=\"p\">\n    </span><span class=\"nf\">IF</span><span class=\"p\">    ${</span><span class=\"nv\">directory_exists</span><span class=\"p\">}    </span><span class=\"s\">Create directory</span><span class=\"p\">    </span><span class=\"s\">output</span>\n</pre>\n</div>\n",
      "shortdoc": "Returns True if the directory does not exist, False if it does.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 296
    },
    {
      "name": "Does File Exist",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str | Path"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Returns True if the given file exists, False if not.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path to inspected file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">true or false if file exists</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks</span><span class=\"p\">  </span><span class=\"gh\">***</span><span class=\"p\">\n</span><span class=\"gu\">Check for file</span><span class=\"p\">\n    ${</span><span class=\"nv\">log_exists</span><span class=\"p\">}=    </span><span class=\"nf\">Does file exist</span><span class=\"p\">    </span><span class=\"s\">output/log.html</span><span class=\"p\">\n    </span><span class=\"nf\">IF</span><span class=\"p\">    ${</span><span class=\"nv\">log_exists</span><span class=\"p\">}\n        ${</span><span class=\"nv\">file</span><span class=\"p\">}=    </span><span class=\"nf\">Find files</span><span class=\"p\">    </span><span class=\"s\">output/log.html</span><span class=\"p\">\n        </span><span class=\"nf\">Open user browser</span><span class=\"p\">    ${</span><span class=\"nv\">file</span><span class=\"p\">}</span><span class=\"s\">[0]</span><span class=\"p\">\n    </span><span class=\"nf\">END</span>\n</pre>\n</div>\n",
      "shortdoc": "Returns True if the given file exists, False if not.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 253
    },
    {
      "name": "Does File Not Exist",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str | Path"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Returns True if the file does not exist, False if it does.</p>\n<p>See <tt class=\"docutils literal\">Does File Exist</tt> for usage example.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path to inspected file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">true or false if the files does not exist</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Returns True if the file does not exist, False if it does.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 274
    },
    {
      "name": "Empty Directory",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str | Path"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Removes all the files in the given directory.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">directory to remove files from</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Empty out directory</span><span class=\"p\">\n    </span><span class=\"nf\">Empty directory</span><span class=\"p\">    </span><span class=\"s\">output</span>\n</pre>\n</div>\n",
      "shortdoc": "Removes all the files in the given directory.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 597
    },
    {
      "name": "Find Files",
      "args": [
        {
          "name": "pattern",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "pattern: str | Path"
        },
        {
          "name": "include_dirs",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "True",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "include_dirs: bool = True"
        },
        {
          "name": "include_files",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "True",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "include_files: bool = True"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Find files recursively according to a pattern.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param pattern:</th><td class=\"field-body\">search path in glob format pattern,\ne.g. <em>.xls or *</em>/orders.txt</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param include_dirs:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">include directories in results (defaults to True)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param include_files:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">include files in results (defaults to True)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">list of paths that match the pattern</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks</span><span class=\"p\">  </span><span class=\"gh\">***</span><span class=\"p\">\n</span><span class=\"gu\">Finding files recursively</span><span class=\"p\">\n    ${</span><span class=\"nv\">files</span><span class=\"p\">}=    </span><span class=\"nf\">Find files</span><span class=\"p\">    </span><span class=\"s\">**/*.log</span><span class=\"p\">\n    </span><span class=\"nf\">FOR</span><span class=\"p\">    ${</span><span class=\"nv\">file</span><span class=\"p\">}    </span><span class=\"s\">IN</span><span class=\"p\">    &#64;{</span><span class=\"nv\">files</span><span class=\"p\">}\n        </span><span class=\"nf\">Read file</span><span class=\"p\">    ${</span><span class=\"nv\">file</span><span class=\"p\">}\n    </span><span class=\"nf\">END</span>\n</pre>\n</div>\n",
      "shortdoc": "Find files recursively according to a pattern.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 127
    },
    {
      "name": "Get File Creation Date",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str | Path"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Returns the creation time in seconds.\nNote: Linux sets this whenever file metadata changes</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path to file to inspect</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">creation time in seconds as a float</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Returns the creation time in seconds. Note: Linux sets this whenever file metadata changes",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 875
    },
    {
      "name": "Get File Extension",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str | Path"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Returns the suffix for the file.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path to file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">file suffix as a string</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Returns the suffix for the file.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 858
    },
    {
      "name": "Get File Modified Date",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str | Path"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Returns the modified time in seconds.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path to file to inspect</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">modified time in seconds as a float</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Returns the modified time in seconds.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 866
    },
    {
      "name": "Get File Name",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str | Path"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Returns only the full file name portion of a path.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path to file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">filename portion of a path as a string</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Returns only the full file name portion of a path.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 842
    },
    {
      "name": "Get File Owner",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str | Path"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Return the name of the user who owns the file.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path to file to inspect</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">file owner as a string</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Return the name of the user who owns the file.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 894
    },
    {
      "name": "Get File Size",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str | Path"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Returns the file size in bytes.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path to file to inspect</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">file size in bytes as an int</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Returns the file size in bytes.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 885
    },
    {
      "name": "Get File Stem",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str | Path"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Returns the name of the file without its extension.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path to file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">filename without its suffix as a string</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Returns the name of the file without its extension.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 850
    },
    {
      "name": "Is Directory Empty",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "path: str | Path | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Returns True if the given directory has no files or subdirectories.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path to inspected directory</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">true or false if the directory is empty</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks</span><span class=\"p\">  </span><span class=\"gh\">***</span><span class=\"p\">\n</span><span class=\"gu\">Check for empty directory</span><span class=\"p\">\n    ${</span><span class=\"nv\">directory_empty</span><span class=\"p\">}=    </span><span class=\"nf\">Is directory empty</span><span class=\"p\">    </span><span class=\"s\">output</span><span class=\"p\">\n    </span><span class=\"nf\">IF</span><span class=\"p\">    ${</span><span class=\"nv\">directory_empty</span><span class=\"p\">}\n        </span><span class=\"nf\">Copy file</span><span class=\"p\">    ${</span><span class=\"nv\">source</span><span class=\"p\">}    </span><span class=\"s\">output/new_file.txt</span><span class=\"p\">\n    </span><span class=\"nf\">END</span>\n</pre>\n</div>\n",
      "shortdoc": "Returns True if the given directory has no files or subdirectories.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 314
    },
    {
      "name": "Is Directory Not Empty",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "path: str | Path | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Returns True if the given directory has any files or subdirectories.</p>\n<p>See <tt class=\"docutils literal\">Is Directory Empty</tt> for usage example.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path to inspected directory</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">true or false if the directory is not empty</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Returns True if the given directory has any files or subdirectories.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 338
    },
    {
      "name": "Is File Empty",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str | Path"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Returns True if the given file has no content, i.e. has zero size.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path to inspected file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">true or false if the file is empty</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Returns True if the given file has no content, i.e. has zero size.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 349
    },
    {
      "name": "Is File Not Empty",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str | Path"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Returns True if the given file has content, i.e. larger than zero size.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path to inspected file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">true or false if the file is not empty</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Check for empty file</span><span class=\"p\">\n    ${</span><span class=\"nv\">file_empty</span><span class=\"p\">}=    </span><span class=\"nf\">Is file not empty</span><span class=\"p\">    </span><span class=\"s\">output/log.html</span><span class=\"p\">\n    </span><span class=\"nf\">IF</span><span class=\"p\">    ${</span><span class=\"nv\">file_empty</span><span class=\"p\">}\n        </span><span class=\"nf\">Copy file</span><span class=\"p\">    </span><span class=\"s\">output/log.html</span><span class=\"p\">    ${</span><span class=\"nv\">alt_dir</span><span class=\"p\">}\n    </span><span class=\"nf\">END</span>\n</pre>\n</div>\n",
      "shortdoc": "Returns True if the given file has content, i.e. larger than zero size.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 360
    },
    {
      "name": "Join Path",
      "args": [
        {
          "name": "parts",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "VAR_POSITIONAL",
          "required": false,
          "repr": "*parts: str | Path"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Joins multiple parts of a path together.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param parts:</th><td class=\"field-body\">Components of the path, e.g. dir, subdir, filename.ext</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">complete file path as a single string</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Join path together</span><span class=\"p\">\n    </span><span class=\"nf\">Join path</span><span class=\"p\">    </span><span class=\"s\">output/nested</span><span class=\"p\">    </span><span class=\"s\">folder</span>\n</pre>\n</div>\n",
      "shortdoc": "Joins multiple parts of a path together.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 797
    },
    {
      "name": "List Directories In Directory",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "path: str | Path | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Lists all the directories in the given directory, relative to it.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">base directory for search, defaults to current working dir</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">list of directories in selected directory</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks</span><span class=\"p\">  </span><span class=\"gh\">***</span><span class=\"p\">\n</span><span class=\"gu\">List directories</span><span class=\"p\">\n    ${</span><span class=\"nv\">directories</span><span class=\"p\">}=    </span><span class=\"nf\">List directories in directory</span><span class=\"p\">    </span><span class=\"s\">devdata</span><span class=\"p\">\n    </span><span class=\"nf\">FOR</span><span class=\"p\">    ${</span><span class=\"nv\">path</span><span class=\"p\">}    </span><span class=\"s\">IN</span><span class=\"p\">    &#64;{</span><span class=\"nv\">directories</span><span class=\"p\">}\n        </span><span class=\"nf\">Log</span><span class=\"p\">    ${</span><span class=\"nv\">path</span><span class=\"p\">}\n    </span><span class=\"nf\">END</span>\n</pre>\n</div>\n",
      "shortdoc": "Lists all the directories in the given directory, relative to it.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 196
    },
    {
      "name": "List Files In Directory",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "path: str | Path | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Lists all the files in the given directory, relative to it.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">base directory for search, defaults to current working directory</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">list of files in directory</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks</span><span class=\"p\">  </span><span class=\"gh\">***</span><span class=\"p\">\n</span><span class=\"gu\">List directory file</span><span class=\"p\">\n    ${</span><span class=\"nv\">files</span><span class=\"p\">}=    </span><span class=\"nf\">List files in directory</span><span class=\"p\">    </span><span class=\"s\">output</span><span class=\"p\">\n    </span><span class=\"nf\">FOR</span><span class=\"p\">    ${</span><span class=\"nv\">file</span><span class=\"p\">}    </span><span class=\"s\">IN</span><span class=\"p\">    &#64;{</span><span class=\"nv\">files</span><span class=\"p\">}\n        </span><span class=\"nf\">Log</span><span class=\"p\">    ${</span><span class=\"nv\">file</span><span class=\"p\">}\n    </span><span class=\"nf\">END</span>\n</pre>\n</div>\n",
      "shortdoc": "Lists all the files in the given directory, relative to it.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 175
    },
    {
      "name": "Log Directory Tree",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "path: str | Path | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Logs all the files in the directory recursively.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">base directory to start from, defaults to current working dir</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks</span><span class=\"p\">  </span><span class=\"gh\">***</span><span class=\"p\">\n</span><span class=\"gu\">List directory tree</span><span class=\"p\">\n    </span><span class=\"nf\">Log directory tree</span>\n</pre>\n</div>\n",
      "shortdoc": "Logs all the files in the directory recursively.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 217
    },
    {
      "name": "Move Directory",
      "args": [
        {
          "name": "source",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "source: str | Path"
        },
        {
          "name": "destination",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "destination: str | Path"
        },
        {
          "name": "overwrite",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "overwrite: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Move a directory from source path to destination path.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param source:</th><td class=\"field-body\">source directory path for moving</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param destination:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">path to move to</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param overwrite:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">replace destination directory if it already\nexists (defaults to <tt class=\"docutils literal\">False</tt>)</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Move a directory</span><span class=\"p\">\n    </span><span class=\"nf\">Move directory</span><span class=\"p\">    </span><span class=\"s\">output</span><span class=\"p\">    </span><span class=\"s\">temp</span>\n</pre>\n</div>\n",
      "shortdoc": "Move a directory from source path to destination path.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 747
    },
    {
      "name": "Move File",
      "args": [
        {
          "name": "source",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "source: str | Path"
        },
        {
          "name": "destination",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "destination: str | Path"
        },
        {
          "name": "overwrite",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "overwrite: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Move a file from source path to destination path,\noptionally overwriting the destination.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param source:</th><td class=\"field-body\">source file path for moving</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param destination:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">path to move to</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param overwrite:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">replace destination file if it already\nexists (defaults to <tt class=\"docutils literal\">False</tt>)</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Move a file</span><span class=\"p\">\n    </span><span class=\"nf\">Create directory</span><span class=\"p\">    </span><span class=\"s\">temp</span><span class=\"p\">\n    </span><span class=\"nf\">Move file</span><span class=\"p\">    </span><span class=\"s\">output/log.html</span><span class=\"p\">    </span><span class=\"s\">temp/log.html</span>\n</pre>\n</div>\n",
      "shortdoc": "Move a file from source path to destination path, optionally overwriting the destination.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 687
    },
    {
      "name": "Move Files",
      "args": [
        {
          "name": "sources",
          "types": [
            "List[str | Path]"
          ],
          "typedocs": {
            "List[str | Path]": "list"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "sources: List[str | Path]"
        },
        {
          "name": "destination",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "destination: str | Path"
        },
        {
          "name": "overwrite",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "overwrite: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Move multiple files to the destination folder.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param sources:</th><td class=\"field-body\">list of files to move</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param destination:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">path to move destination</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param overwrite:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">replace destination files if they already exist</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Move some files</span><span class=\"p\">\n    </span><span class=\"nf\">Create directory</span><span class=\"p\">    </span><span class=\"s\">temp</span><span class=\"p\">\n    </span><span class=\"nf\">Move files</span><span class=\"p\">    </span><span class=\"s\">output/log.html</span><span class=\"p\">    </span><span class=\"s\">output/output.xml</span><span class=\"p\">    </span><span class=\"s\">temp</span>\n</pre>\n</div>\n",
      "shortdoc": "Move multiple files to the destination folder.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 719
    },
    {
      "name": "Normalize Path",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str | Path"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Removes redundant separators or up-level references from path.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path that will be normalized</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">path to file as a string</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Get normal path</span><span class=\"p\">\n    </span><span class=\"c\"># Normalized path becomes ../inputs/input.xlsx\n</span><span class=\"p\">    ${</span><span class=\"nv\">normalized_path</span><span class=\"p\">}=    </span><span class=\"nf\">Normalize path</span><span class=\"p\">    </span><span class=\"s\">..//inputs/./new/../input.xlsx</span><span class=\"p\">\n    </span><span class=\"nf\">Create work items</span><span class=\"p\">    ${</span><span class=\"nv\">normalized_path</span><span class=\"p\">}</span>\n</pre>\n</div>\n",
      "shortdoc": "Removes redundant separators or up-level references from path.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 823
    },
    {
      "name": "Read Binary File",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str | Path"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Reads a file in binary mode and returns the content.\nDoes not attempt to decode the content in any way.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path to file to read</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">the file content as bytes</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Read picture as binary</span><span class=\"p\">\n    ${</span><span class=\"nv\">pictures</span><span class=\"p\">}=    </span><span class=\"nf\">Find files</span><span class=\"p\">    </span><span class=\"s\">**/*.png</span><span class=\"p\">\n    </span><span class=\"nf\">FOR</span><span class=\"p\">    ${</span><span class=\"nv\">picture</span><span class=\"p\">}    </span><span class=\"s\">IN</span><span class=\"p\">    &#64;{</span><span class=\"nv\">pictures</span><span class=\"p\">}\n        </span><span class=\"nf\">Read binary file</span><span class=\"p\">    ${</span><span class=\"nv\">picture</span><span class=\"p\">}\n    </span><span class=\"nf\">END</span>\n</pre>\n</div>\n",
      "shortdoc": "Reads a file in binary mode and returns the content. Does not attempt to decode the content in any way.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 393
    },
    {
      "name": "Read File",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str | Path"
        },
        {
          "name": "encoding",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": "utf-8",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "encoding: str = utf-8"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Reads a file as text, with given <cite>encoding</cite>, and returns the content.&quot;</p>\n<p>See <tt class=\"docutils literal\">Find Files</tt> for usage example.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path to file to read</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param encoding:</th><td class=\"field-body\">character encoding of file (default <tt class=\"docutils literal\"><span class=\"pre\">utf-8</span></tt>)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">file content as string</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Reads a file as text, with given `encoding`, and returns the content.\"",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 380
    },
    {
      "name": "Remove Directory",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str | Path"
        },
        {
          "name": "recursive",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "recursive: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Removes the given directory, and optionally everything it contains.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path to directory</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param recursive:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">remove all subdirectories and files (default to <tt class=\"docutils literal\">False</tt>)</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Delete a directory</span><span class=\"p\">\n    </span><span class=\"nf\">Remove directory</span><span class=\"p\">    </span><span class=\"s\">output</span><span class=\"p\">    </span><span class=\"s\">recursive=</span><span class=\"p\">${</span><span class=\"nv\">True</span><span class=\"p\">}</span>\n</pre>\n</div>\n",
      "shortdoc": "Removes the given directory, and optionally everything it contains.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 577
    },
    {
      "name": "Remove File",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str | Path"
        },
        {
          "name": "missing_ok",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "True",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "missing_ok: bool = True"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Removes the given file.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path to the file to remove</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param missing_ok:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">ignore non-existent file (defaults to <tt class=\"docutils literal\">True</tt>)</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Delete a file</span><span class=\"p\">\n    </span><span class=\"nf\">Remove file</span><span class=\"p\">    </span><span class=\"s\">output/log.html</span>\n</pre>\n</div>\n",
      "shortdoc": "Removes the given file.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 537
    },
    {
      "name": "Remove Files",
      "args": [
        {
          "name": "paths",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "VAR_POSITIONAL",
          "required": false,
          "repr": "*paths: str | Path"
        },
        {
          "name": "missing_ok",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "True",
          "kind": "NAMED_ONLY",
          "required": false,
          "repr": "missing_ok: bool = True"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Removes multiple files.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param paths:</th><td class=\"field-body\">paths to files to be removed</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param missing_ok:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">ignore non-existent files (default to <tt class=\"docutils literal\">True</tt>)</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Delete some files</span><span class=\"p\">\n    </span><span class=\"nf\">Remove files</span><span class=\"p\">    </span><span class=\"s\">output/log.html</span><span class=\"p\">    </span><span class=\"s\">output/output.xml</span>\n</pre>\n</div>\n",
      "shortdoc": "Removes multiple files.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 558
    },
    {
      "name": "Run Keyword If File Exists",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str | Path"
        },
        {
          "name": "keyword",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "keyword: str"
        },
        {
          "name": "args",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_POSITIONAL",
          "required": false,
          "repr": "*args"
        }
      ],
      "doc": "<div class=\"document\">\n<p>If file exists at <cite>path</cite>, execute given keyword with arguments.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path to file to inspect</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param keyword:</th><td class=\"field-body\">Robot Framework keyword to execute</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param args:</th><td class=\"field-body\">arguments to keyword</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Execute if orders exists</span><span class=\"p\">\n    </span><span class=\"nf\">Run keyword if file exists</span><span class=\"p\">    </span><span class=\"s\">orders.xlsx</span><span class=\"p\">    </span><span class=\"s\">Process orders</span>\n</pre>\n</div>\n",
      "shortdoc": "If file exists at `path`, execute given keyword with arguments.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 989
    },
    {
      "name": "Touch File",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str | Path"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Creates a file with no content, or if file already exists,\nupdates the modification and access times.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path to file which is touched</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Creates a file with no content, or if file already exists, updates the modification and access times.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 415
    },
    {
      "name": "Wait Until Created",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str | Path"
        },
        {
          "name": "timeout",
          "types": [
            "int",
            "float"
          ],
          "typedocs": {
            "int": "integer",
            "float": "float"
          },
          "defaultValue": "5.0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "timeout: int | float = 5.0"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Poll path until it exists, or raise exception if timeout\nis reached.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path to poll</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param timeout:</th><td class=\"field-body\">time in seconds until keyword fails</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">path to the created file as a string</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Wait for existence</span><span class=\"p\">\n    </span><span class=\"nf\">Wait until created</span><span class=\"p\">    </span><span class=\"s\">orders.xlsx</span><span class=\"p\">    </span><span class=\"s\">10</span><span class=\"p\">\n    </span><span class=\"nf\">Process orders</span><span class=\"p\">    </span><span class=\"s\">orders.xlsx</span>\n</pre>\n</div>\n",
      "shortdoc": "Poll path until it exists, or raise exception if timeout is reached.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 926
    },
    {
      "name": "Wait Until Modified",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str | Path"
        },
        {
          "name": "timeout",
          "types": [
            "int",
            "float"
          ],
          "typedocs": {
            "int": "integer",
            "float": "float"
          },
          "defaultValue": "5.0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "timeout: int | float = 5.0"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Poll path until it has been modified after the keyword was called,\nor raise exception if timeout is reached.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path to poll</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param timeout:</th><td class=\"field-body\">time in seconds until keyword fails</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">path to the modified file as a string</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Wait for change</span><span class=\"p\">\n    </span><span class=\"nf\">Wait until modified</span><span class=\"p\">    </span><span class=\"s\">orders.xlsx</span><span class=\"p\">    </span><span class=\"s\">10</span><span class=\"p\">\n    </span><span class=\"nf\">Process orders</span><span class=\"p\">    </span><span class=\"s\">orders.xlsx</span>\n</pre>\n</div>\n",
      "shortdoc": "Poll path until it has been modified after the keyword was called, or raise exception if timeout is reached.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 951
    },
    {
      "name": "Wait Until Removed",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "Path"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str | Path"
        },
        {
          "name": "timeout",
          "types": [
            "int",
            "float"
          ],
          "typedocs": {
            "int": "integer",
            "float": "float"
          },
          "defaultValue": "5.0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "timeout: int | float = 5.0"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Poll path until it doesn't exist, or raise exception if timeout\nis reached.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path to poll</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param timeout:</th><td class=\"field-body\">time in seconds until keyword fails</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Poll path until it doesn't exist, or raise exception if timeout is reached.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/FileSystem.py",
      "lineno": 977
    }
  ],
  "dataTypes": {
    "enums": [],
    "typedDicts": []
  },
  "typedocs": [
    {
      "type": "Standard",
      "name": "boolean",
      "doc": "<p>Strings <code>TRUE</code>, <code>YES</code>, <code>ON</code> and <code>1</code> are converted to Boolean <code>True</code>, the empty string as well as strings <code>FALSE</code>, <code>NO</code>, <code>OFF</code> and <code>0</code> are converted to Boolean <code>False</code>, and the string <code>NONE</code> is converted to the Python <code>None</code> object. Other strings and other accepted values are passed as-is, allowing keywords to handle them specially if needed. All string comparisons are case-insensitive.</p>\n<p>Examples: <code>TRUE</code> (converted to <code>True</code>), <code>off</code> (converted to <code>False</code>), <code>example</code> (used as-is)</p>",
      "usages": [
        "Create Binary File",
        "Create Directory",
        "Create File",
        "Find Files",
        "Move Directory",
        "Move File",
        "Move Files",
        "Remove Directory",
        "Remove File",
        "Remove Files"
      ],
      "accepts": [
        "string",
        "integer",
        "float",
        "None"
      ]
    },
    {
      "type": "Standard",
      "name": "float",
      "doc": "<p>Conversion is done using Python's <a href=\"https://docs.python.org/library/functions.html#float\">float</a> built-in function.</p>\n<p>Starting from RF 4.1, spaces and underscores can be used as visual separators for digit grouping purposes.</p>\n<p>Examples: <code>3.14</code>, <code>2.9979e8</code>, <code>10 000.000 01</code></p>",
      "usages": [
        "Wait Until Created",
        "Wait Until Modified",
        "Wait Until Removed"
      ],
      "accepts": [
        "string",
        "Real"
      ]
    },
    {
      "type": "Standard",
      "name": "integer",
      "doc": "<p>Conversion is done using Python's <a href=\"https://docs.python.org/library/functions.html#int\">int</a> built-in function. Floating point numbers are accepted only if they can be represented as integers exactly. For example, <code>1.0</code> is accepted and <code>1.1</code> is not.</p>\n<p>Starting from RF 4.1, it is possible to use hexadecimal, octal and binary numbers by prefixing values with <code>0x</code>, <code>0o</code> and <code>0b</code>, respectively.</p>\n<p>Starting from RF 4.1, spaces and underscores can be used as visual separators for digit grouping purposes.</p>\n<p>Examples: <code>42</code>, <code>-1</code>, <code>0b1010</code>, <code>10 000 000</code>, <code>0xBAD_C0FFEE</code></p>",
      "usages": [
        "Wait Until Created",
        "Wait Until Modified",
        "Wait Until Removed"
      ],
      "accepts": [
        "string",
        "float"
      ]
    },
    {
      "type": "Standard",
      "name": "list",
      "doc": "<p>Strings must be Python <a href=\"https://docs.python.org/library/stdtypes.html#list\">list</a> literals. They are converted to actual lists using the <a href=\"https://docs.python.org/library/ast.html#ast.literal_eval\">ast.literal_eval</a> function. They can contain any values <code>ast.literal_eval</code> supports, including lists and other containers.</p>\n<p>Examples: <code>['one', 'two']</code>, <code>[('one', 1), ('two', 2)]</code></p>",
      "usages": [
        "Copy Files",
        "Move Files"
      ],
      "accepts": [
        "string",
        "Sequence"
      ]
    },
    {
      "type": "Standard",
      "name": "None",
      "doc": "<p>String <code>NONE</code> (case-insensitive) is converted to Python <code>None</code> object. Other values cause an error.</p>",
      "usages": [
        "Create Binary File",
        "Create File",
        "Is Directory Empty",
        "Is Directory Not Empty",
        "List Directories In Directory",
        "List Files In Directory",
        "Log Directory Tree"
      ],
      "accepts": [
        "string"
      ]
    },
    {
      "type": "Standard",
      "name": "string",
      "doc": "<p>All arguments are converted to Unicode strings.</p>",
      "usages": [
        "Absolute Path",
        "Append To Binary File",
        "Append To File",
        "Change File Extension",
        "Copy Directory",
        "Copy File",
        "Copy Files",
        "Create Binary File",
        "Create Directory",
        "Create File",
        "Does Directory Exist",
        "Does Directory Not Exist",
        "Does File Exist",
        "Does File Not Exist",
        "Empty Directory",
        "Find Files",
        "Get File Creation Date",
        "Get File Extension",
        "Get File Modified Date",
        "Get File Name",
        "Get File Owner",
        "Get File Size",
        "Get File Stem",
        "Is Directory Empty",
        "Is Directory Not Empty",
        "Is File Empty",
        "Is File Not Empty",
        "Join Path",
        "List Directories In Directory",
        "List Files In Directory",
        "Log Directory Tree",
        "Move Directory",
        "Move File",
        "Move Files",
        "Normalize Path",
        "Read Binary File",
        "Read File",
        "Remove Directory",
        "Remove File",
        "Remove Files",
        "Run Keyword If File Exists",
        "Touch File",
        "Wait Until Created",
        "Wait Until Modified",
        "Wait Until Removed"
      ],
      "accepts": [
        "Any"
      ]
    }
  ]
}