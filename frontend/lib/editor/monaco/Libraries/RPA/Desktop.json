{
  "specversion": 1,
  "name": "RPA.Desktop",
  "doc": "<div class=\"document\">\n<p><cite>Desktop</cite> is a cross-platform library for navigating and interacting with\ndesktop environments. It can be used to automate applications through\nthe same interfaces that are available to human users.</p>\n<p>The library includes the following features:</p>\n<ul class=\"simple\">\n<li>Mouse and keyboard input emulation</li>\n<li>Starting and stopping applications</li>\n<li>Finding elements through image template matching</li>\n<li>Scraping text from given regions</li>\n<li>Taking screenshots</li>\n<li>Clipboard management</li>\n</ul>\n<div class=\"admonition warning\">\n<p class=\"first admonition-title\">Warning</p>\n<p class=\"last\">Windows element selectors are not currently supported, and require the use of <tt class=\"docutils literal\">RPA.Desktop.Windows</tt></p>\n</div>\n<p><strong>Installation</strong></p>\n<p>The basic features such as mouse and keyboard input and application\ncontrol work with a default <tt class=\"docutils literal\">rpaframework</tt> install.</p>\n<p>Advanced computer-vision features such as image template matching and\nOCR require an additional library called <tt class=\"docutils literal\"><span class=\"pre\">rpaframework-recognition</span></tt>.</p>\n<p>The dependency should be added separately by specifing it in your <em>conda.yaml</em>\nas <tt class=\"docutils literal\"><span class=\"pre\">rpaframework-recognition==5.0.1</span></tt> for example. If installing recognition\nthrough <tt class=\"docutils literal\">pip</tt> instead of <tt class=\"docutils literal\">conda</tt>, the OCR feature also requires <tt class=\"docutils literal\">tesseract</tt>.</p>\n<p><strong>Locating elements</strong></p>\n<p>To automate actions on the desktop, a robot needs to interact with various\ngraphical elements such as buttons or input fields. The locations of these\nelements can be found using a feature called <cite>locators</cite>.</p>\n<p>A locator describes the properties or features of an element. This information\ncan be later used to locate similar elements even when window positions or\nstates change.</p>\n<p>The currently supported locator types are:</p>\n<table border=\"1\" class=\"docutils\">\n<colgroup>\n<col width=\"9%\" />\n<col width=\"40%\" />\n<col width=\"51%\" />\n</colgroup>\n<thead valign=\"bottom\">\n<tr><th class=\"head\">Name</th>\n<th class=\"head\">Arguments</th>\n<th class=\"head\">Description</th>\n</tr>\n</thead>\n<tbody valign=\"top\">\n<tr><td>alias</td>\n<td>name (str)</td>\n<td>A custom named locator from the locator database, the default.</td>\n</tr>\n<tr><td>image</td>\n<td>path (str)</td>\n<td>Image of an element that is matched to current screen content.</td>\n</tr>\n<tr><td>point</td>\n<td>x (int), y (int)</td>\n<td>Pixel coordinates as absolute position.</td>\n</tr>\n<tr><td>offset</td>\n<td>x (int), y (int)</td>\n<td>Pixel coordinates relative to current mouse position.</td>\n</tr>\n<tr><td>size</td>\n<td>width (int), height (int)</td>\n<td>Region of fixed size, around point or screen top-left</td>\n</tr>\n<tr><td>region</td>\n<td>left (int), top (int), right (int), bottom (int)</td>\n<td>Bounding coordinates for a rectangular region.</td>\n</tr>\n<tr><td>ocr</td>\n<td>text (str), confidence (float, optional)</td>\n<td>Text to find from the current screen.</td>\n</tr>\n</tbody>\n</table>\n<p>A locator is defined by its type and arguments, divided by a colon.\nSome example usages are shown below. Note that the prefix for <tt class=\"docutils literal\">alias</tt> can\nbe omitted as its the default type.</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Click</span><span class=\"p\">       </span><span class=\"c\">point:50,100</span><span class=\"p\">\n</span><span class=\"c\">Click</span><span class=\"p\">       </span><span class=\"c\">region:20,20,100,30</span><span class=\"p\">\n\n</span><span class=\"c\">Move mouse</span><span class=\"p\">  </span><span class=\"c\">image:%{ROBOT_ROOT}/logo.png</span><span class=\"p\">\n</span><span class=\"c\">Move mouse</span><span class=\"p\">  </span><span class=\"c\">offset:200,0</span><span class=\"p\">\n</span><span class=\"c\">Click</span><span class=\"p\">\n\n</span><span class=\"c\">Click</span><span class=\"p\">       </span><span class=\"c\">alias:SpareBin.Login</span><span class=\"p\">\n</span><span class=\"c\">Click</span><span class=\"p\">       </span><span class=\"c\">SpareBin.Login</span><span class=\"p\">\n\n</span><span class=\"c\">Click</span><span class=\"p\">       </span><span class=\"c\">ocr:&quot;Create New Account&quot;</span>\n</pre>\n<p>You can also pass internal <tt class=\"docutils literal\">region</tt> objects as locators:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${region}=</span><span class=\"p\">  </span><span class=\"c\">Find Element</span><span class=\"p\">  </span><span class=\"c\">ocr:&quot;Customer name&quot;</span><span class=\"p\">\n</span><span class=\"c\">Click</span><span class=\"p\">       </span><span class=\"c\">${region}</span>\n</pre>\n<p><strong>Locator chaining</strong></p>\n<p>Often it is not enough to have one locator, but instead an element\nis defined through a relationship of various locators. For this use\ncase the library supports a special syntax, which we will call\nlocator chaining.</p>\n<p>An example of chaining:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\"># Read text from area on the right side of logo\nRead text</span><span class=\"p\">    </span><span class=\"c\">image:logo.png + offset:600,0 + size:400,200</span>\n</pre>\n<p>The supported operators are:</p>\n<table border=\"1\" class=\"docutils\">\n<colgroup>\n<col width=\"20%\" />\n<col width=\"80%\" />\n</colgroup>\n<thead valign=\"bottom\">\n<tr><th class=\"head\">Operator</th>\n<th class=\"head\">Description</th>\n</tr>\n</thead>\n<tbody valign=\"top\">\n<tr><td>then, +</td>\n<td>Base locator relative to the previous one</td>\n</tr>\n<tr><td>and, &amp;&amp;, &amp;</td>\n<td>Both locators should be found</td>\n</tr>\n<tr><td>or, ||, |</td>\n<td>Either of the locators should be found</td>\n</tr>\n<tr><td>not, !</td>\n<td>The locator should not be found</td>\n</tr>\n</tbody>\n</table>\n<p>Further examples:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\"># Click below either label\nClick</span><span class=\"p\">    </span><span class=\"c\">(image:name.png or image:email.png) then offset:0,300</span><span class=\"p\">\n\n</span><span class=\"c\"># Wait until dialog disappears\nWait for element</span><span class=\"p\">    </span><span class=\"c\">not image:cookie.png</span>\n</pre>\n<p><strong>Named locators</strong></p>\n<p>The library supports storing locators in a database, which contains\nall of the required fields and various bits of metadata. This enables\nhaving one source of truth, which can be updated if a website's or applications's\nUI changes. Robot Framework scripts can then only contain a reference\nto a stored locator by name.</p>\n<p>The main way to create named locators is with <a class=\"reference external\" href=\"https://robocorp.com/docs/developer-tools/visual-studio-code/overview\">VSCode</a>.</p>\n<p>Read more on identifying elements and crafting locators:</p>\n<ul class=\"simple\">\n<li><a class=\"reference external\" href=\"https://robocorp.com/docs/development-guide/desktop\">Desktop automation and RPA</a></li>\n<li><a class=\"reference external\" href=\"https://robocorp.com/docs/development-guide/desktop/how-to-find-user-interface-elements-using-locators-and-keyboard-shortcuts-in-windows-applications\">How to find user interface elements using locators and keyboard shortcuts in Windows applications</a></li>\n</ul>\n<p><strong>Keyboard and mouse</strong></p>\n<p>Keyboard keywords can emulate typing text, but also pressing various function keys.\nThe name of a key is case-insensitive and spaces will be converted to underscores,\ni.e. the key <tt class=\"docutils literal\">Page Down</tt> and <tt class=\"docutils literal\">page_down</tt> are equivalent.</p>\n<p>The following function keys are supported:</p>\n<table border=\"1\" class=\"docutils\">\n<colgroup>\n<col width=\"16%\" />\n<col width=\"84%\" />\n</colgroup>\n<thead valign=\"bottom\">\n<tr><th class=\"head\">Key</th>\n<th class=\"head\">Description</th>\n</tr>\n</thead>\n<tbody valign=\"top\">\n<tr><td>shift</td>\n<td>A generic Shift key. This is a modifier.</td>\n</tr>\n<tr><td>shift_l</td>\n<td>The left Shift key. This is a modifier.</td>\n</tr>\n<tr><td>shift_r</td>\n<td>The right Shift key. This is a modifier.</td>\n</tr>\n<tr><td>ctrl</td>\n<td>A generic Ctrl key. This is a modifier.</td>\n</tr>\n<tr><td>ctrl_l</td>\n<td>he left Ctrl key. This is a modifier.</td>\n</tr>\n<tr><td>ctrl_r</td>\n<td>The right Ctrl key. This is a modifier.</td>\n</tr>\n<tr><td>alt</td>\n<td>A generic Alt key. This is a modifier.</td>\n</tr>\n<tr><td>alt_l</td>\n<td>The left Alt key. This is a modifier.</td>\n</tr>\n<tr><td>alt_r</td>\n<td>The right Alt key. This is a modifier.</td>\n</tr>\n<tr><td>alt_gr</td>\n<td>The AltGr key. This is a modifier.</td>\n</tr>\n<tr><td>cmd</td>\n<td>A generic command button (Windows / Command / Super key). This may be a modifier.</td>\n</tr>\n<tr><td>cmd_l</td>\n<td>The left command button (Windows / Command / Super key). This may be a modifier.</td>\n</tr>\n<tr><td>cmd_r</td>\n<td>The right command button (Windows / Command / Super key). This may be a modifier.</td>\n</tr>\n<tr><td>up</td>\n<td>An up arrow key.</td>\n</tr>\n<tr><td>down</td>\n<td>A down arrow key.</td>\n</tr>\n<tr><td>left</td>\n<td>A left arrow key.</td>\n</tr>\n<tr><td>right</td>\n<td>A right arrow key.</td>\n</tr>\n<tr><td>enter</td>\n<td>The Enter or Return key.</td>\n</tr>\n<tr><td>space</td>\n<td>The Space key.</td>\n</tr>\n<tr><td>tab</td>\n<td>The Tab key.</td>\n</tr>\n<tr><td>backspace</td>\n<td>The Backspace key.</td>\n</tr>\n<tr><td>delete</td>\n<td>The Delete key.</td>\n</tr>\n<tr><td>esc</td>\n<td>The Esc key.</td>\n</tr>\n<tr><td>home</td>\n<td>The Home key.</td>\n</tr>\n<tr><td>end</td>\n<td>The End key.</td>\n</tr>\n<tr><td>page_down</td>\n<td>The Page Down key.</td>\n</tr>\n<tr><td>page_up</td>\n<td>The Page Up key.</td>\n</tr>\n<tr><td>caps_lock</td>\n<td>The Caps Lock key.</td>\n</tr>\n<tr><td>f1 to f20</td>\n<td>The function keys.</td>\n</tr>\n<tr><td>insert</td>\n<td>The Insert key. This may be undefined for some platforms.</td>\n</tr>\n<tr><td>menu</td>\n<td>The Menu key. This may be undefined for some platforms.</td>\n</tr>\n<tr><td>num_lock</td>\n<td>The Num Lock key. This may be undefined for some platforms.</td>\n</tr>\n<tr><td>pause</td>\n<td>The Pause / Break key. This may be undefined for some platforms.</td>\n</tr>\n<tr><td>print_screen</td>\n<td>The Print Screen key. This may be undefined for some platforms.</td>\n</tr>\n<tr><td>scroll_lock</td>\n<td>The Scroll Lock key. This may be undefined for some platforms.</td>\n</tr>\n</tbody>\n</table>\n<p>When controlling the mouse, there are different types of actions that can be\ndone. Same formatting rules as function keys apply. They are as follows:</p>\n<table border=\"1\" class=\"docutils\">\n<colgroup>\n<col width=\"26%\" />\n<col width=\"74%\" />\n</colgroup>\n<thead valign=\"bottom\">\n<tr><th class=\"head\">Action</th>\n<th class=\"head\">Description</th>\n</tr>\n</thead>\n<tbody valign=\"top\">\n<tr><td>click</td>\n<td>Click with left mouse button</td>\n</tr>\n<tr><td>left_click</td>\n<td>Click with left mouse button</td>\n</tr>\n<tr><td>double_click</td>\n<td>Double click with left mouse button</td>\n</tr>\n<tr><td>triple_click</td>\n<td>Triple click with left mouse button</td>\n</tr>\n<tr><td>right_click</td>\n<td>Click with right mouse button</td>\n</tr>\n</tbody>\n</table>\n<p>The supported mouse button types are <tt class=\"docutils literal\">left</tt>, <tt class=\"docutils literal\">right</tt>, and <tt class=\"docutils literal\">middle</tt>.</p>\n<p><strong>Examples</strong></p>\n<p>Both Robot Framework and Python examples follow.</p>\n<p>The library must be imported first.</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Settings ***</span><span class=\"p\">\n</span><span class=\"kn\">Library</span><span class=\"p\">    </span><span class=\"nn\">RPA.Desktop</span>\n</pre>\n<pre class=\"code python literal-block\">\n<span class=\"kn\">from</span> <span class=\"nn\">RPA.Desktop</span> <span class=\"kn\">import</span> <span class=\"n\">Desktop</span><span class=\"w\">\n</span><span class=\"n\">desktop</span> <span class=\"o\">=</span> <span class=\"n\">Desktop</span><span class=\"p\">()</span>\n</pre>\n<p>The library can open applications and interact with them through\nkeyboard and mouse events.</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Keywords ***</span><span class=\"p\">\n</span><span class=\"gu\">Write entry in accounting</span><span class=\"p\">\n    [</span><span class=\"kn\">Arguments</span><span class=\"p\">]    ${</span><span class=\"nv\">entry</span><span class=\"p\">}\n    </span><span class=\"nf\">Open application</span><span class=\"p\">    </span><span class=\"s\">erp_client.exe</span><span class=\"p\">\n    </span><span class=\"nf\">Click</span><span class=\"p\">         </span><span class=\"s\">image:</span><span class=\"p\">%{</span><span class=\"nv\">ROBOT_ROOT</span><span class=\"p\">}</span><span class=\"s\">/images/create.png</span><span class=\"p\">\n    </span><span class=\"nf\">Type text</span><span class=\"p\">     ${</span><span class=\"nv\">entry</span><span class=\"p\">}\n    </span><span class=\"nf\">Press keys</span><span class=\"p\">    </span><span class=\"s\">ctrl</span><span class=\"p\">    </span><span class=\"s\">s</span><span class=\"p\">\n    </span><span class=\"nf\">Press keys</span><span class=\"p\">    </span><span class=\"s\">enter</span>\n</pre>\n<pre class=\"code python literal-block\">\n<span class=\"k\">def</span> <span class=\"nf\">write_entry_in_accounting</span><span class=\"p\">(</span><span class=\"n\">entry</span><span class=\"p\">):</span><span class=\"w\">\n</span>    <span class=\"n\">desktop</span><span class=\"o\">.</span><span class=\"n\">open_application</span><span class=\"p\">(</span><span class=\"s2\">&quot;erp_client.exe&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span>    <span class=\"n\">desktop</span><span class=\"o\">.</span><span class=\"n\">click</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;image:</span><span class=\"si\">{</span><span class=\"n\">ROBOT_ROOT</span><span class=\"si\">}</span><span class=\"s2\">/images/create.png&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span>    <span class=\"n\">desktop</span><span class=\"o\">.</span><span class=\"n\">type_text</span><span class=\"p\">(</span><span class=\"n\">entry</span><span class=\"p\">)</span><span class=\"w\">\n</span>    <span class=\"n\">desktop</span><span class=\"o\">.</span><span class=\"n\">press_keys</span><span class=\"p\">(</span><span class=\"s2\">&quot;ctrl&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;s&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span>    <span class=\"n\">desktop</span><span class=\"o\">.</span><span class=\"n\">press_keys</span><span class=\"p\">(</span><span class=\"s2\">&quot;enter&quot;</span><span class=\"p\">)</span>\n</pre>\n<p>Targeting can be currently done using coordinates (absolute or relative),\nbut using template matching is preferred.</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Keywords ***</span><span class=\"p\">\n</span><span class=\"gu\">Write to field</span><span class=\"p\">\n    [</span><span class=\"kn\">Arguments</span><span class=\"p\">]  ${</span><span class=\"nv\">text</span><span class=\"p\">}\n    </span><span class=\"nf\">Move mouse</span><span class=\"p\">   </span><span class=\"s\">image:input_label.png</span><span class=\"p\">\n    </span><span class=\"nf\">Move mouse</span><span class=\"p\">   </span><span class=\"s\">offset:200,0</span><span class=\"p\">\n    </span><span class=\"nf\">Click</span><span class=\"p\">\n    </span><span class=\"nf\">Type text</span><span class=\"p\">    ${</span><span class=\"nv\">text</span><span class=\"p\">}\n    </span><span class=\"nf\">Press keys</span><span class=\"p\">   </span><span class=\"s\">enter</span>\n</pre>\n<pre class=\"code python literal-block\">\n<span class=\"k\">def</span> <span class=\"nf\">write_to_field</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">):</span><span class=\"w\">\n</span>    <span class=\"n\">desktop</span><span class=\"o\">.</span><span class=\"n\">move_mouse</span><span class=\"p\">(</span><span class=\"s2\">&quot;image:input_label.png&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span>    <span class=\"n\">desktop</span><span class=\"o\">.</span><span class=\"n\">move_mouse</span><span class=\"p\">(</span><span class=\"s2\">&quot;offset:200,0&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span>    <span class=\"n\">desktop</span><span class=\"o\">.</span><span class=\"n\">click</span><span class=\"p\">()</span><span class=\"w\">\n</span>    <span class=\"n\">desktop</span><span class=\"o\">.</span><span class=\"n\">type_text</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">)</span><span class=\"w\">\n</span>    <span class=\"n\">desktop</span><span class=\"o\">.</span><span class=\"n\">press_keys</span><span class=\"p\">(</span><span class=\"s2\">&quot;enter&quot;</span><span class=\"p\">)</span>\n</pre>\n<p>Elements can be found by text too.</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Keywords ***</span><span class=\"p\">\n</span><span class=\"gu\">Click New</span><span class=\"p\">\n    </span><span class=\"nf\">Click</span><span class=\"p\">       </span><span class=\"s\">ocr:New</span>\n</pre>\n<pre class=\"code python literal-block\">\n<span class=\"k\">def</span> <span class=\"nf\">click_new</span><span class=\"p\">():</span><span class=\"w\">\n</span>    <span class=\"n\">desktop</span><span class=\"o\">.</span><span class=\"n\">click</span><span class=\"p\">(</span><span class=\"s1\">'ocr:&quot;New&quot;'</span><span class=\"p\">)</span>\n</pre>\n<p>It is recommended to wait for the elements to be visible before\ntrying any interaction. You can also pass <tt class=\"docutils literal\">region</tt> objects as locators.</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Keywords ***</span><span class=\"p\">\n</span><span class=\"gu\">Click New</span><span class=\"p\">\n    ${</span><span class=\"nv\">region</span><span class=\"p\">}=  </span><span class=\"nf\">Wait For element</span><span class=\"p\">  </span><span class=\"s\">ocr:New</span><span class=\"p\">\n    </span><span class=\"nf\">Click</span><span class=\"p\">       ${</span><span class=\"nv\">region</span><span class=\"p\">}</span>\n</pre>\n<pre class=\"code python literal-block\">\n<span class=\"k\">def</span> <span class=\"nf\">click_new</span><span class=\"p\">():</span><span class=\"w\">\n</span>    <span class=\"n\">region</span> <span class=\"o\">=</span> <span class=\"n\">desktop</span><span class=\"o\">.</span><span class=\"n\">wait_for_element</span><span class=\"p\">(</span><span class=\"s2\">&quot;ocr:New&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span>    <span class=\"n\">desktop</span><span class=\"o\">.</span><span class=\"n\">click</span><span class=\"p\">(</span><span class=\"n\">region</span><span class=\"p\">)</span>\n</pre>\n<p>Another way to find elements by offsetting from an anchor:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Keywords ***</span><span class=\"p\">\n</span><span class=\"gu\">Type Notes</span><span class=\"p\">\n    [</span><span class=\"kn\">Arguments</span><span class=\"p\">]        ${</span><span class=\"nv\">text</span><span class=\"p\">}\n    </span><span class=\"nf\">Click With Offset</span><span class=\"p\">  </span><span class=\"s\">ocr:Notes</span><span class=\"p\">  </span><span class=\"s\">500</span><span class=\"p\">  </span><span class=\"s\">0</span><span class=\"p\">\n    </span><span class=\"nf\">Type Text</span><span class=\"p\">          ${</span><span class=\"nv\">text</span><span class=\"p\">}</span>\n</pre>\n<pre class=\"code python literal-block\">\n<span class=\"k\">def</span> <span class=\"nf\">type_notes</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">):</span><span class=\"w\">\n</span>    <span class=\"n\">desktop</span><span class=\"o\">.</span><span class=\"n\">click_with_offset</span><span class=\"p\">(</span><span class=\"s2\">&quot;ocr:Notes&quot;</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\">\n</span>    <span class=\"n\">desktop</span><span class=\"o\">.</span><span class=\"n\">type_text</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">)</span>\n</pre>\n</div>\n",
  "version": "",
  "generated": "2024-10-30 10:09:52",
  "type": "LIBRARY",
  "scope": "GLOBAL",
  "docFormat": "HTML",
  "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/__init__.py",
  "lineno": 37,
  "tags": [],
  "inits": [
    {
      "name": "__init__",
      "args": [
        {
          "name": "locators_path",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "locators_path: str | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</div>\n",
      "shortdoc": "Initialize self.  See help(type(self)) for accurate signature.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/__init__.py",
      "lineno": 344
    }
  ],
  "keywords": [
    {
      "name": "Clear Clipboard",
      "args": [],
      "doc": "<div class=\"document\">\n<p>Clear the system clipboard.</p>\n</div>\n",
      "shortdoc": "Clear the system clipboard.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/keywords/clipboard.py",
      "lineno": 52
    },
    {
      "name": "Click",
      "args": [
        {
          "name": "locator",
          "types": [
            "str",
            "Locator",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "locator: str | Locator | None = None"
        },
        {
          "name": "action",
          "types": [
            "Action"
          ],
          "typedocs": {
            "Action": "Action"
          },
          "defaultValue": "click",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "action: Action = click"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Click at the element indicated by locator.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param locator:</th><td class=\"field-body\">Locator for click position</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param action:</th><td class=\"field-body\">Click action, e.g. right click</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Click</span><span class=\"p\">\n</span><span class=\"c\">Click</span><span class=\"p\">    </span><span class=\"c\">LoginForm.Button</span><span class=\"p\">\n</span><span class=\"c\">Click</span><span class=\"p\">    </span><span class=\"c\">coordinates:500,200</span><span class=\"p\">    </span><span class=\"c\">triple click</span>\n</pre>\n</div>\n",
      "shortdoc": "Click at the element indicated by locator.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/keywords/mouse.py",
      "lineno": 110
    },
    {
      "name": "Click With Offset",
      "args": [
        {
          "name": "locator",
          "types": [
            "str",
            "Locator",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "locator: str | Locator | None = None"
        },
        {
          "name": "x",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": "0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "x: int = 0"
        },
        {
          "name": "y",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": "0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "y: int = 0"
        },
        {
          "name": "action",
          "types": [
            "Action"
          ],
          "typedocs": {
            "Action": "Action"
          },
          "defaultValue": "click",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "action: Action = click"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Click at a given pixel offset from the given locator.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param locator:</th><td class=\"field-body\">Locator for click start position</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param x:</th><td class=\"field-body\">Click horizontal offset in pixels</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param y:</th><td class=\"field-body\">Click vertical offset in pixels</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param action:</th><td class=\"field-body\">Click action, e.g. right click</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Click with offset</span><span class=\"p\">    </span><span class=\"c\">Robocorp.Logo</span><span class=\"p\">    </span><span class=\"c\">y=400</span>\n</pre>\n</div>\n",
      "shortdoc": "Click at a given pixel offset from the given locator.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/keywords/mouse.py",
      "lineno": 140
    },
    {
      "name": "Close All Applications",
      "args": [],
      "doc": "<div class=\"document\">\n<p>Close all opened applications.</p>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Open file</span><span class=\"p\">    </span><span class=\"c\">order1.docx</span><span class=\"p\">\n</span><span class=\"c\">Open file</span><span class=\"p\">    </span><span class=\"c\">order2.docx</span><span class=\"p\">\n</span><span class=\"c\">Open file</span><span class=\"p\">    </span><span class=\"c\">order3.docx</span><span class=\"p\">\n</span><span class=\"c\"># Do something with Word\nClose all applications</span>\n</pre>\n</div>\n",
      "shortdoc": "Close all opened applications.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/keywords/application.py",
      "lineno": 199
    },
    {
      "name": "Close Application",
      "args": [
        {
          "name": "app",
          "types": [
            "Application"
          ],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "app: Application"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Close given application. Needs to be started\nwith this library.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param app:</th><td class=\"field-body\">App instance</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\"># Open a file with a default application\n${word}=</span><span class=\"p\">    </span><span class=\"c\">Open file</span><span class=\"p\">    </span><span class=\"c\">template.docx</span><span class=\"p\">\n</span><span class=\"c\"># Do something with Word\nClose application</span><span class=\"p\">    </span><span class=\"c\">${word}</span><span class=\"p\">\n\n</span><span class=\"c\"># Open a an application with a specific executable\n${ie}=</span><span class=\"p\">    </span><span class=\"c\">Open application</span><span class=\"p\">    </span><span class=\"c\">iexplore.exe</span><span class=\"p\">\n</span><span class=\"c\"># Do something with IE\nClose application</span><span class=\"p\">    </span><span class=\"c\">${ie}</span>\n</pre>\n</div>\n",
      "shortdoc": "Close given application. Needs to be started with this library.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/keywords/application.py",
      "lineno": 175
    },
    {
      "name": "Copy To Clipboard",
      "args": [
        {
          "name": "locator",
          "types": [
            "str",
            "Locator"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "locator: str | Locator"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Read value to system clipboard from given input element.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param locator:</th><td class=\"field-body\">Locator for element</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">returns:</th><td class=\"field-body\">Current clipboard value</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${value}=</span><span class=\"p\">    </span><span class=\"c\">Copy to clipboard</span><span class=\"p\">    </span><span class=\"c\">ResultPage.Counter</span><span class=\"p\">\n</span><span class=\"c\">Log</span><span class=\"p\">    </span><span class=\"c\">Copied text: ${value}</span>\n</pre>\n</div>\n",
      "shortdoc": "Read value to system clipboard from given input element.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/keywords/clipboard.py",
      "lineno": 11
    },
    {
      "name": "Define Region",
      "args": [
        {
          "name": "left",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "left: int"
        },
        {
          "name": "top",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "top: int"
        },
        {
          "name": "right",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "right: int"
        },
        {
          "name": "bottom",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "bottom: int"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Return a new <tt class=\"docutils literal\">Region</tt> with the given dimensions.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param left:</th><td class=\"field-body\">Left edge coordinate.</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param top:</th><td class=\"field-body\">Top edge coordinate.</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param right:</th><td class=\"field-body\">Right edge coordinate.</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param bottom:</th><td class=\"field-body\">Bottom edge coordinate.</td>\n</tr>\n</tbody>\n</table>\n<p>Usage examples:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${region}=</span><span class=\"p\">  </span><span class=\"c\">Define Region</span><span class=\"p\">  </span><span class=\"c\">10</span><span class=\"p\">  </span><span class=\"c\">10</span><span class=\"p\">  </span><span class=\"c\">50</span><span class=\"p\">  </span><span class=\"c\">30</span>\n</pre>\n<pre class=\"code python literal-block\">\n<span class=\"n\">region</span> <span class=\"o\">=</span> <span class=\"n\">desktop</span><span class=\"o\">.</span><span class=\"n\">define_region</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">)</span>\n</pre>\n</div>\n",
      "shortdoc": "Return a new ``Region`` with the given dimensions.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/keywords/screen.py",
      "lineno": 184
    },
    {
      "name": "Drag And Drop",
      "args": [
        {
          "name": "source",
          "types": [
            "str",
            "Locator"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "source: str | Locator"
        },
        {
          "name": "destination",
          "types": [
            "str",
            "Locator"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "destination: str | Locator"
        },
        {
          "name": "start_delay",
          "types": [
            "float"
          ],
          "typedocs": {
            "float": "float"
          },
          "defaultValue": "2.0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "start_delay: float = 2.0"
        },
        {
          "name": "end_delay",
          "types": [
            "float"
          ],
          "typedocs": {
            "float": "float"
          },
          "defaultValue": "0.5",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "end_delay: float = 0.5"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Drag mouse from source to destination while holding the left mouse button.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param source:</th><td class=\"field-body\">Locator for start position</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param destination:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Locator for destination position</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param start_delay:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Delay in seconds after pressing down mouse button</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param end_delay:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Delay in seconds before releasing mouse button</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Drag mouse from source to destination while holding the left mouse button.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/keywords/mouse.py",
      "lineno": 233
    },
    {
      "name": "Find Element",
      "args": [
        {
          "name": "locator",
          "types": [
            "str",
            "Locator"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "locator: str | Locator"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Find an element defined by locator, and return its position.\nRaises <tt class=\"docutils literal\">ElementNotFound</tt> if` no matches were found, or\n<tt class=\"docutils literal\">MultipleElementsFound</tt> if there were multiple matches.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param locator:</th><td class=\"field-body\">Locator string</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${match}=</span><span class=\"p\">    </span><span class=\"c\">Find element</span><span class=\"p\">    </span><span class=\"c\">image:logo.png</span><span class=\"p\">\n</span><span class=\"c\">Log</span><span class=\"p\">    </span><span class=\"c\">Found logo at ${match.right}, ${match.top}</span>\n</pre>\n</div>\n",
      "shortdoc": "Find an element defined by locator, and return its position. Raises ``ElementNotFound`` if` no matches were found, or ``MultipleElementsFound`` if there were multiple matches.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/keywords/finder.py",
      "lineno": 287
    },
    {
      "name": "Find Elements",
      "args": [
        {
          "name": "locator",
          "types": [
            "str",
            "Locator"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "locator: str | Locator"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Find all elements defined by locator, and return their positions.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param locator:</th><td class=\"field-body\">Locator string</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${matches}=</span><span class=\"p\">    </span><span class=\"c\">Find elements</span><span class=\"p\">    </span><span class=\"c\">image:icon.png</span><span class=\"p\">\n</span><span class=\"c\">FOR</span><span class=\"p\">    </span><span class=\"c\">${match}</span><span class=\"p\">  </span><span class=\"c\">IN</span><span class=\"p\">  </span><span class=\"c\">&#64;{matches}</span><span class=\"p\">\n    </span><span class=\"c\">Log</span><span class=\"p\">    </span><span class=\"c\">Found icon at ${match.right}, ${match.top}</span><span class=\"p\">\n</span><span class=\"c\">END</span>\n</pre>\n</div>\n",
      "shortdoc": "Find all elements defined by locator, and return their positions.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/keywords/finder.py",
      "lineno": 265
    },
    {
      "name": "Get Clipboard Value",
      "args": [],
      "doc": "<div class=\"document\">\n<p>Read current value from system clipboard.</p>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Copy to clipboard</span><span class=\"p\">       </span><span class=\"c\">coordinates:401,198</span><span class=\"p\">\n</span><span class=\"c\">${text}=</span><span class=\"p\">    </span><span class=\"c\">Get clipboard value</span><span class=\"p\">\n</span><span class=\"c\">Log</span><span class=\"p\">    </span><span class=\"c\">We just copied '${text}'</span>\n</pre>\n</div>\n",
      "shortdoc": "Read current value from system clipboard.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/keywords/clipboard.py",
      "lineno": 57
    },
    {
      "name": "Get Display Dimensions",
      "args": [],
      "doc": "<div class=\"document\">\n<p>Returns the dimensions of the current virtual display,\nwhich is the combined size of all physical monitors.</p>\n</div>\n",
      "shortdoc": "Returns the dimensions of the current virtual display, which is the combined size of all physical monitors.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/keywords/screen.py",
      "lineno": 158
    },
    {
      "name": "Get Mouse Position",
      "args": [],
      "doc": "<div class=\"document\">\n<p>Get current mouse position in pixel coordinates.</p>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${position}=</span><span class=\"p\">    </span><span class=\"c\">Get mouse position</span><span class=\"p\">\n</span><span class=\"c\">Log</span><span class=\"p\">    </span><span class=\"c\">Current mouse position is ${position.x}, ${position.y}</span>\n</pre>\n</div>\n",
      "shortdoc": "Get current mouse position in pixel coordinates.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/keywords/mouse.py",
      "lineno": 175
    },
    {
      "name": "Highlight Elements",
      "args": [
        {
          "name": "locator",
          "types": [
            "str",
            "Locator"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "locator: str | Locator"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Draw an outline around all matching elements.</p>\n</div>\n",
      "shortdoc": "Draw an outline around all matching elements.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/keywords/screen.py",
      "lineno": 166
    },
    {
      "name": "Move Mouse",
      "args": [
        {
          "name": "locator",
          "types": [
            "str",
            "Locator"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "locator: str | Locator"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Move mouse to given coordinates.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param locator:</th><td class=\"field-body\">Locator for mouse position</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Move mouse</span><span class=\"p\">    </span><span class=\"c\">Robocorp.Logo</span><span class=\"p\">\n</span><span class=\"c\">Move mouse</span><span class=\"p\">    </span><span class=\"c\">offset:0,400</span>\n</pre>\n</div>\n",
      "shortdoc": "Move mouse to given coordinates.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/keywords/mouse.py",
      "lineno": 192
    },
    {
      "name": "Move Region",
      "args": [
        {
          "name": "region",
          "types": [
            "Region"
          ],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "region: Region"
        },
        {
          "name": "left",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "left: int"
        },
        {
          "name": "top",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "top: int"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Return a new <tt class=\"docutils literal\">Region</tt> with an offset from the given region.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param region:</th><td class=\"field-body\">The region to move.</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param left:</th><td class=\"field-body\">Amount of pixels to move left/right.</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param top:</th><td class=\"field-body\">Amount of pixels to move up/down.</td>\n</tr>\n</tbody>\n</table>\n<p>Usage examples:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${region}=</span><span class=\"p\">          </span><span class=\"c\">Find Element</span><span class=\"p\">  </span><span class=\"c\">ocr:&quot;Net Assets&quot;</span><span class=\"p\">\n</span><span class=\"c\">${moved_region}=</span><span class=\"p\">    </span><span class=\"c\">Move Region</span><span class=\"p\">  </span><span class=\"c\">${region}</span><span class=\"p\">  </span><span class=\"c\">500</span><span class=\"p\">  </span><span class=\"c\">0</span>\n</pre>\n<pre class=\"code python literal-block\">\n<span class=\"n\">region</span> <span class=\"o\">=</span> <span class=\"n\">desktop</span><span class=\"o\">.</span><span class=\"n\">find_element</span><span class=\"p\">(</span><span class=\"s1\">'ocr:&quot;Net Assets&quot;'</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"n\">moved_region</span> <span class=\"o\">=</span> <span class=\"n\">desktop</span><span class=\"o\">.</span><span class=\"n\">move_region</span><span class=\"p\">(</span><span class=\"n\">region</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n</pre>\n</div>\n",
      "shortdoc": "Return a new ``Region`` with an offset from the given region.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/keywords/screen.py",
      "lineno": 207
    },
    {
      "name": "Open Application",
      "args": [
        {
          "name": "name_or_path",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "name_or_path: str"
        },
        {
          "name": "args",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_POSITIONAL",
          "required": false,
          "repr": "*args"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Start a given application by name (if in PATH),\nor by path to executable.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param name_or_path:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Name or path of application</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param args:</th><td class=\"field-body\">Command line arguments for application</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">returns:</th><td class=\"field-body\">Application instance</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Open application</span><span class=\"p\">    </span><span class=\"c\">notepad.exe</span><span class=\"p\">\n</span><span class=\"c\">Open application</span><span class=\"p\">    </span><span class=\"c\">c:\\path\\to\\program.exe</span><span class=\"p\">    </span><span class=\"c\">--example-argument</span>\n</pre>\n</div>\n",
      "shortdoc": "Start a given application by name (if in PATH), or by path to executable.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/keywords/application.py",
      "lineno": 79
    },
    {
      "name": "Open File",
      "args": [
        {
          "name": "path",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Open a file with the default application.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">Path to file</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Open file</span><span class=\"p\">    </span><span class=\"c\">orders.xlsx</span>\n</pre>\n</div>\n",
      "shortdoc": "Open a file with the default application.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/keywords/application.py",
      "lineno": 98
    },
    {
      "name": "Paste From Clipboard",
      "args": [
        {
          "name": "locator",
          "types": [
            "str",
            "Locator"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "locator: str | Locator"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Paste value from system clipboard into given element.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param locator:</th><td class=\"field-body\">Locator for element</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Copy to clipboard</span><span class=\"p\">       </span><span class=\"c\">coordinates:401,198</span><span class=\"p\">\n</span><span class=\"c\">Paste from clipboard</span><span class=\"p\">    </span><span class=\"c\">coordinates:822,710</span>\n</pre>\n</div>\n",
      "shortdoc": "Paste value from system clipboard into given element.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/keywords/clipboard.py",
      "lineno": 33
    },
    {
      "name": "Press Keys",
      "args": [
        {
          "name": "keys",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "VAR_POSITIONAL",
          "required": false,
          "repr": "*keys: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Press multiple keys down simultaneously.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param keys:</th><td class=\"field-body\">Keys to press</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Press keys</span><span class=\"p\">    </span><span class=\"c\">ctrl</span><span class=\"p\">  </span><span class=\"c\">alt</span><span class=\"p\">  </span><span class=\"c\">delete</span><span class=\"p\">\n\n</span><span class=\"c\">Press keys</span><span class=\"p\">    </span><span class=\"c\">ctrl</span><span class=\"p\">  </span><span class=\"c\">a</span><span class=\"p\">\n</span><span class=\"c\">Press keys</span><span class=\"p\">    </span><span class=\"c\">ctrl</span><span class=\"p\">  </span><span class=\"c\">c</span><span class=\"p\">\n</span><span class=\"c\">${all_text}=</span><span class=\"p\">  </span><span class=\"c\">Get clipboard value</span><span class=\"p\">\n</span><span class=\"c\">Log</span><span class=\"p\">    </span><span class=\"c\">Text box content was: ${all_text}</span>\n</pre>\n</div>\n",
      "shortdoc": "Press multiple keys down simultaneously.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/keywords/keyboard.py",
      "lineno": 73
    },
    {
      "name": "Press Mouse Button",
      "args": [
        {
          "name": "button",
          "types": [
            "Any"
          ],
          "typedocs": {},
          "defaultValue": "left",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "button: Any = left"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Press down mouse button and keep it pressed.</p>\n</div>\n",
      "shortdoc": "Press down mouse button and keep it pressed.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/keywords/mouse.py",
      "lineno": 211
    },
    {
      "name": "Read Text",
      "args": [
        {
          "name": "locator",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "locator: str | None = None"
        },
        {
          "name": "invert",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "invert: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Read text using OCR from the screen, or an area of the\nscreen defined by the given locator.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param locator:</th><td class=\"field-body\">Location of element to read text from</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param invert:</th><td class=\"field-body\">Invert image colors, useful for reading white text\non dark background</td>\n</tr>\n</tbody>\n</table>\n<p>Usage examples:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${label_region}=</span><span class=\"p\">  </span><span class=\"c\">Find Element</span><span class=\"p\">  </span><span class=\"c\">image:label.png</span><span class=\"p\">\n</span><span class=\"c\">${value_region}=</span><span class=\"p\">  </span><span class=\"c\">Move Region</span><span class=\"p\">   </span><span class=\"c\">${label_region}</span><span class=\"p\">  </span><span class=\"c\">100</span><span class=\"p\">  </span><span class=\"c\">0</span><span class=\"p\">\n</span><span class=\"c\">${text}=</span><span class=\"p\">          </span><span class=\"c\">Read Text</span><span class=\"p\">     </span><span class=\"c\">${value_region}</span>\n</pre>\n<pre class=\"code python literal-block\">\n<span class=\"n\">label_region</span> <span class=\"o\">=</span> <span class=\"n\">desktop</span><span class=\"o\">.</span><span class=\"n\">find_element</span><span class=\"p\">(</span><span class=\"s2\">&quot;image:label.png&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"n\">value_region</span> <span class=\"o\">=</span> <span class=\"n\">desktop</span><span class=\"o\">.</span><span class=\"n\">move_region</span><span class=\"p\">(</span><span class=\"n\">label_region</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">desktop</span><span class=\"o\">.</span><span class=\"n\">read_text</span><span class=\"p\">(</span><span class=\"n\">value_region</span><span class=\"p\">)</span>\n</pre>\n</div>\n",
      "shortdoc": "Read text using OCR from the screen, or an area of the screen defined by the given locator.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/keywords/text.py",
      "lineno": 24
    },
    {
      "name": "Release Mouse Button",
      "args": [
        {
          "name": "button",
          "types": [
            "Any"
          ],
          "typedocs": {},
          "defaultValue": "left",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "button: Any = left"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Release mouse button that was previously pressed.</p>\n</div>\n",
      "shortdoc": "Release mouse button that was previously pressed.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/keywords/mouse.py",
      "lineno": 222
    },
    {
      "name": "Resize Region",
      "args": [
        {
          "name": "region",
          "types": [
            "Region"
          ],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "region: Region"
        },
        {
          "name": "left",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": "0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "left: int = 0"
        },
        {
          "name": "top",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": "0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "top: int = 0"
        },
        {
          "name": "right",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": "0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "right: int = 0"
        },
        {
          "name": "bottom",
          "types": [
            "int"
          ],
          "typedocs": {
            "int": "integer"
          },
          "defaultValue": "0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "bottom: int = 0"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Return a resized new <tt class=\"docutils literal\">Region</tt> from a given region.</p>\n<p>Extends edges the given amount outward from the center,\ni.e. positive left values move the left edge to the left.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param region:</th><td class=\"field-body\">The region to resize.</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param left:</th><td class=\"field-body\">Amount of pixels to resize left edge.</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param top:</th><td class=\"field-body\">Amount of pixels to resize top edge.</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param right:</th><td class=\"field-body\">Amount of pixels to resize right edge.</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param bottom:</th><td class=\"field-body\">Amount of pixels to resize bottom edge.</td>\n</tr>\n</tbody>\n</table>\n<p>Usage examples:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${region}=</span><span class=\"p\">          </span><span class=\"c\">Find Element</span><span class=\"p\">  </span><span class=\"c\">ocr:&quot;Net Assets&quot;</span><span class=\"p\">\n</span><span class=\"c\">${resized_region}=</span><span class=\"p\">  </span><span class=\"c\">Resize Region</span><span class=\"p\">  </span><span class=\"c\">${region}</span><span class=\"p\">  </span><span class=\"c\">bottom=10</span>\n</pre>\n<pre class=\"code python literal-block\">\n<span class=\"n\">region</span> <span class=\"o\">=</span> <span class=\"n\">desktop</span><span class=\"o\">.</span><span class=\"n\">find_element</span><span class=\"p\">(</span><span class=\"s1\">'ocr:&quot;Net Assets&quot;'</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"n\">resized_region</span> <span class=\"o\">=</span> <span class=\"n\">desktop</span><span class=\"o\">.</span><span class=\"n\">resize_region</span><span class=\"p\">(</span><span class=\"n\">region</span><span class=\"p\">,</span> <span class=\"n\">bottom</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n</div>\n",
      "shortdoc": "Return a resized new ``Region`` from a given region.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/keywords/screen.py",
      "lineno": 231
    },
    {
      "name": "Set Clipboard Value",
      "args": [
        {
          "name": "text",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "text: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Write given value to system clipboard.</p>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Set clipboard value</span><span class=\"p\">     </span><span class=\"c\">This is some text.</span><span class=\"p\">\n</span><span class=\"c\">Paste from clipboard</span><span class=\"p\">    </span><span class=\"c\">coordinates:822,710</span>\n</pre>\n</div>\n",
      "shortdoc": "Write given value to system clipboard.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/keywords/clipboard.py",
      "lineno": 71
    },
    {
      "name": "Set Default Confidence",
      "args": [
        {
          "name": "confidence",
          "types": [
            "float",
            "None"
          ],
          "typedocs": {
            "float": "float",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "confidence: float | None = None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Set the default template matching confidence.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param confidence:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Value from 1 to 100</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Set the default template matching confidence.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/keywords/finder.py",
      "lineno": 364
    },
    {
      "name": "Set Default Timeout",
      "args": [
        {
          "name": "timeout",
          "types": [
            "float"
          ],
          "typedocs": {
            "float": "float"
          },
          "defaultValue": "3.0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "timeout: float = 3.0"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Set the default time to wait for elements.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param timeout:</th><td class=\"field-body\">Time in seconds</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Set the default time to wait for elements.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/keywords/finder.py",
      "lineno": 356
    },
    {
      "name": "Take Screenshot",
      "args": [
        {
          "name": "path",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "path: str | None = None"
        },
        {
          "name": "locator",
          "types": [
            "str",
            "Locator",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "locator: str | Locator | None = None"
        },
        {
          "name": "embed",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "True",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "embed: bool = True"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Take a screenshot of the whole screen, or an element\nidentified by the given locator.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">Path to screenshot. The string <tt class=\"docutils literal\">{index}</tt> will be replaced with\nan index number to avoid overwriting previous screenshots.</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param locator:</th><td class=\"field-body\">Element to crop screenshot to</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param embed:</th><td class=\"field-body\">Embed screenshot into Robot Framework log</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Take a screenshot of the whole screen, or an element identified by the given locator.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/keywords/screen.py",
      "lineno": 120
    },
    {
      "name": "Type Text",
      "args": [
        {
          "name": "text",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "text: str"
        },
        {
          "name": "modifiers",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "VAR_POSITIONAL",
          "required": false,
          "repr": "*modifiers: str"
        },
        {
          "name": "enter",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "NAMED_ONLY",
          "required": false,
          "repr": "enter: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Type text one letter at a time.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param text:</th><td class=\"field-body\">Text to write</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param modifiers:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Modifier or functions keys held during typing</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param enter:</th><td class=\"field-body\">Press Enter / Return key after typing text</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Type text</span><span class=\"p\">    </span><span class=\"c\">this text will be uppercase</span><span class=\"p\">    </span><span class=\"c\">shift</span>\n</pre>\n</div>\n",
      "shortdoc": "Type text one letter at a time.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/keywords/keyboard.py",
      "lineno": 47
    },
    {
      "name": "Type Text Into",
      "args": [
        {
          "name": "locator",
          "types": [
            "str",
            "Locator"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "locator: str | Locator"
        },
        {
          "name": "text",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "text: str"
        },
        {
          "name": "clear",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "clear: bool = False"
        },
        {
          "name": "enter",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "enter: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Type text at the position indicated by given locator.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param locator:</th><td class=\"field-body\">Locator of input element</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param text:</th><td class=\"field-body\">Text to write</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param clear:</th><td class=\"field-body\">Clear element before writing</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param enter:</th><td class=\"field-body\">Press Enter / Return key after typing text</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Type text into</span><span class=\"p\">    </span><span class=\"c\">LoginForm.Name</span><span class=\"p\">      </span><span class=\"c\">Marky Mark</span><span class=\"p\">\n</span><span class=\"c\">Type text into</span><span class=\"p\">    </span><span class=\"c\">LoginForm.Password</span><span class=\"p\">  </span><span class=\"c\">${PASSWORD}</span>\n</pre>\n</div>\n",
      "shortdoc": "Type text at the position indicated by given locator.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/keywords/keyboard.py",
      "lineno": 103
    },
    {
      "name": "Wait For Element",
      "args": [
        {
          "name": "locator",
          "types": [
            "str",
            "Locator"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "locator: str | Locator"
        },
        {
          "name": "timeout",
          "types": [
            "float",
            "None"
          ],
          "typedocs": {
            "float": "float",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "timeout: float | None = None"
        },
        {
          "name": "interval",
          "types": [
            "float"
          ],
          "typedocs": {
            "float": "float"
          },
          "defaultValue": "0.5",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "interval: float = 0.5"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Wait for an element defined by locator to exist, or\nraise a TimeoutException if none were found within timeout.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param locator:</th><td class=\"field-body\">Locator string</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Wait for element</span><span class=\"p\">    </span><span class=\"c\">alias:CookieConsent</span><span class=\"p\">    </span><span class=\"c\">timeout=30</span><span class=\"p\">\n</span><span class=\"c\">Click</span><span class=\"p\">    </span><span class=\"c\">image:%{ROBOT_ROOT}/accept.png</span>\n</pre>\n</div>\n",
      "shortdoc": "Wait for an element defined by locator to exist, or raise a TimeoutException if none were found within timeout.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Desktop/keywords/finder.py",
      "lineno": 317
    }
  ],
  "dataTypes": {
    "enums": [
      {
        "type": "Enum",
        "name": "Action",
        "doc": "<div class=\"document\">\n<p>Possible mouse click actions.</p>\n</div>\n",
        "members": [
          {
            "name": "click",
            "value": "0"
          },
          {
            "name": "left_click",
            "value": "0"
          },
          {
            "name": "double_click",
            "value": "1"
          },
          {
            "name": "triple_click",
            "value": "2"
          },
          {
            "name": "right_click",
            "value": "3"
          }
        ]
      }
    ],
    "typedDicts": []
  },
  "typedocs": [
    {
      "type": "Enum",
      "name": "Action",
      "doc": "<div class=\"document\">\n<p>Possible mouse click actions.</p>\n</div>\n",
      "usages": [
        "Click",
        "Click With Offset"
      ],
      "accepts": [
        "string"
      ],
      "members": [
        {
          "name": "click",
          "value": "0"
        },
        {
          "name": "left_click",
          "value": "0"
        },
        {
          "name": "double_click",
          "value": "1"
        },
        {
          "name": "triple_click",
          "value": "2"
        },
        {
          "name": "right_click",
          "value": "3"
        }
      ]
    },
    {
      "type": "Standard",
      "name": "boolean",
      "doc": "<p>Strings <code>TRUE</code>, <code>YES</code>, <code>ON</code> and <code>1</code> are converted to Boolean <code>True</code>, the empty string as well as strings <code>FALSE</code>, <code>NO</code>, <code>OFF</code> and <code>0</code> are converted to Boolean <code>False</code>, and the string <code>NONE</code> is converted to the Python <code>None</code> object. Other strings and other accepted values are passed as-is, allowing keywords to handle them specially if needed. All string comparisons are case-insensitive.</p>\n<p>Examples: <code>TRUE</code> (converted to <code>True</code>), <code>off</code> (converted to <code>False</code>), <code>example</code> (used as-is)</p>",
      "usages": [
        "Read Text",
        "Take Screenshot",
        "Type Text",
        "Type Text Into"
      ],
      "accepts": [
        "string",
        "integer",
        "float",
        "None"
      ]
    },
    {
      "type": "Standard",
      "name": "float",
      "doc": "<p>Conversion is done using Python's <a href=\"https://docs.python.org/library/functions.html#float\">float</a> built-in function.</p>\n<p>Starting from RF 4.1, spaces and underscores can be used as visual separators for digit grouping purposes.</p>\n<p>Examples: <code>3.14</code>, <code>2.9979e8</code>, <code>10 000.000 01</code></p>",
      "usages": [
        "Drag And Drop",
        "Set Default Confidence",
        "Set Default Timeout",
        "Wait For Element"
      ],
      "accepts": [
        "string",
        "Real"
      ]
    },
    {
      "type": "Standard",
      "name": "integer",
      "doc": "<p>Conversion is done using Python's <a href=\"https://docs.python.org/library/functions.html#int\">int</a> built-in function. Floating point numbers are accepted only if they can be represented as integers exactly. For example, <code>1.0</code> is accepted and <code>1.1</code> is not.</p>\n<p>Starting from RF 4.1, it is possible to use hexadecimal, octal and binary numbers by prefixing values with <code>0x</code>, <code>0o</code> and <code>0b</code>, respectively.</p>\n<p>Starting from RF 4.1, spaces and underscores can be used as visual separators for digit grouping purposes.</p>\n<p>Examples: <code>42</code>, <code>-1</code>, <code>0b1010</code>, <code>10 000 000</code>, <code>0xBAD_C0FFEE</code></p>",
      "usages": [
        "Click With Offset",
        "Define Region",
        "Move Region",
        "Resize Region"
      ],
      "accepts": [
        "string",
        "float"
      ]
    },
    {
      "type": "Standard",
      "name": "None",
      "doc": "<p>String <code>NONE</code> (case-insensitive) is converted to Python <code>None</code> object. Other values cause an error.</p>",
      "usages": [
        "__init__",
        "Click",
        "Click With Offset",
        "Read Text",
        "Set Default Confidence",
        "Take Screenshot",
        "Wait For Element"
      ],
      "accepts": [
        "string"
      ]
    },
    {
      "type": "Standard",
      "name": "string",
      "doc": "<p>All arguments are converted to Unicode strings.</p>",
      "usages": [
        "__init__",
        "Click",
        "Click With Offset",
        "Copy To Clipboard",
        "Drag And Drop",
        "Find Element",
        "Find Elements",
        "Highlight Elements",
        "Move Mouse",
        "Open Application",
        "Open File",
        "Paste From Clipboard",
        "Press Keys",
        "Read Text",
        "Set Clipboard Value",
        "Take Screenshot",
        "Type Text",
        "Type Text Into",
        "Wait For Element"
      ],
      "accepts": [
        "Any"
      ]
    }
  ]
}