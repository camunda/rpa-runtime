{
  "specversion": 1,
  "name": "RPA.Robocorp.Vault",
  "doc": "<div class=\"document\">\n<p><cite>Vault</cite> is a library for interacting with secrets stored in the <a class=\"reference external\" href=\"https://robocorp.com/docs/development-guide/variables-and-secrets/vault\">Robocorp\nControl Room Vault</a> (by default) or file-based secrets, which can be taken\ninto use by setting some environment variables.</p>\n<p>Robocorp Vault relies on environment variables, which are normally set\nautomatically by the Robocorp Work Agent or Assistant when a run is\ninitialized by the Robocorp Control Room. When developing robots locally\nin VSCode, you can use the <a class=\"reference external\" href=\"https://robocorp.com/docs/developer-tools/visual-studio-code/extension-features#connecting-to-control-room-vault\">Robocorp Code Extension</a> to set these\nvariables automatically as well.</p>\n<p>Alternatively, you may set these environment variable manually using\n<a class=\"reference external\" href=\"https://robocorp.com/docs/rcc/workflow\">rcc</a> or directly in some other fashion. The specific variables which\nmust exist are:</p>\n<ul class=\"simple\">\n<li><tt class=\"docutils literal\">RC_API_SECRET_HOST</tt>: URL to Robocorp Vault API</li>\n<li><tt class=\"docutils literal\">RC_API_SECRET_TOKEN</tt>: API Token for Robocorp Vault API</li>\n<li><tt class=\"docutils literal\">RC_WORKSPACE_ID</tt>: Control Room Workspace ID</li>\n</ul>\n<p>File-based secrets can be set by defining two environment variables.</p>\n<ul class=\"simple\">\n<li><tt class=\"docutils literal\">RPA_SECRET_MANAGER</tt>: RPA.Robocorp.Vault.FileSecrets</li>\n<li><tt class=\"docutils literal\">RPA_SECRET_FILE</tt>: Absolute path to the secrets database file</li>\n</ul>\n<p>Example content of local secrets file:</p>\n<pre class=\"code json literal-block\">\n<span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nt\">&quot;swaglabs&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n        </span><span class=\"nt\">&quot;username&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;standard_user&quot;</span><span class=\"p\">,</span><span class=\"w\">\n        </span><span class=\"nt\">&quot;password&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;secret_sauce&quot;</span><span class=\"w\">\n    </span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"p\">}</span>\n</pre>\n<p>OR</p>\n<pre class=\"code YAML literal-block\">\n<span class=\"nt\">swaglabs</span><span class=\"p\">:</span><span class=\"w\">\n    </span><span class=\"nt\">username</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l-Scalar-Plain\">standard_user</span><span class=\"w\">\n    </span><span class=\"nt\">password</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l-Scalar-Plain\">secret_sauce</span>\n</pre>\n<p><strong>Examples of Using Secrets in a Robot</strong></p>\n<p><strong>Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Settings ***</span><span class=\"p\">\n</span><span class=\"kn\">Library</span><span class=\"p\">    </span><span class=\"nn\">Collections</span><span class=\"p\">\n</span><span class=\"kn\">Library</span><span class=\"p\">    </span><span class=\"nn\">RPA.Robocorp.Vault</span><span class=\"p\">\n\n</span><span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Reading secrets</span><span class=\"p\">\n    ${</span><span class=\"nv\">secret</span><span class=\"p\">}=    </span><span class=\"nf\">Get Secret</span><span class=\"p\">  </span><span class=\"s\">swaglabs</span><span class=\"p\">\n    </span><span class=\"nf\">Log Many</span><span class=\"p\">      ${</span><span class=\"nv\">secret</span><span class=\"p\">}\n\n</span><span class=\"gu\">Modifying secrets</span><span class=\"p\">\n    ${</span><span class=\"nv\">secret</span><span class=\"p\">}=          </span><span class=\"nf\">Get Secret</span><span class=\"p\">      </span><span class=\"s\">swaglabs</span><span class=\"p\">\n    ${</span><span class=\"nv\">level</span><span class=\"p\">}=           </span><span class=\"nf\">Set Log Level</span><span class=\"p\">   </span><span class=\"s\">NONE</span><span class=\"p\">\n    </span><span class=\"nf\">Set To Dictionary</span><span class=\"p\">   ${</span><span class=\"nv\">secret</span><span class=\"p\">}       </span><span class=\"s\">username</span><span class=\"p\">    </span><span class=\"s\">nobody</span><span class=\"p\">\n    </span><span class=\"nf\">Set Log Level</span><span class=\"p\">       ${</span><span class=\"nv\">level</span><span class=\"p\">}\n    </span><span class=\"nf\">Set Secret</span><span class=\"p\">          ${</span><span class=\"nv\">secret</span><span class=\"p\">}</span>\n</pre>\n<p><strong>Python</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"kn\">from</span> <span class=\"nn\">RPA.Robocorp.Vault</span> <span class=\"kn\">import</span> <span class=\"n\">Vault</span><span class=\"w\">\n\n</span><span class=\"n\">VAULT</span> <span class=\"o\">=</span> <span class=\"n\">Vault</span><span class=\"p\">()</span><span class=\"w\">\n\n</span><span class=\"k\">def</span> <span class=\"nf\">reading_secrets</span><span class=\"p\">():</span><span class=\"w\">\n</span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;My secrets: </span><span class=\"si\">{</span><span class=\"n\">VAULT</span><span class=\"o\">.</span><span class=\"n\">get_secret</span><span class=\"p\">(</span><span class=\"s1\">'swaglabs'</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span><span class=\"w\">\n\n</span><span class=\"k\">def</span> <span class=\"nf\">modifying_secrets</span><span class=\"p\">():</span><span class=\"w\">\n</span>    <span class=\"n\">secret</span> <span class=\"o\">=</span> <span class=\"n\">VAULT</span><span class=\"o\">.</span><span class=\"n\">get_secret</span><span class=\"p\">(</span><span class=\"s2\">&quot;swaglabs&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span>    <span class=\"n\">secret</span><span class=\"p\">[</span><span class=\"s2\">&quot;username&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;nobody&quot;</span><span class=\"w\">\n</span>    <span class=\"n\">VAULT</span><span class=\"o\">.</span><span class=\"n\">set_secret</span><span class=\"p\">(</span><span class=\"n\">secret</span><span class=\"p\">)</span>\n</pre>\n</div>\n",
  "version": "",
  "generated": "2024-10-30 10:10:07",
  "type": "LIBRARY",
  "scope": "GLOBAL",
  "docFormat": "HTML",
  "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Robocorp/Vault.py",
  "lineno": 471,
  "tags": [],
  "inits": [
    {
      "name": "__init__",
      "args": [
        {
          "name": "args",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_POSITIONAL",
          "required": false,
          "repr": "*args"
        },
        {
          "name": "kwargs",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_NAMED",
          "required": false,
          "repr": "**kwargs"
        }
      ],
      "doc": "<div class=\"document\">\n<p>The selected adapter can be set with the environment variable\n<tt class=\"docutils literal\">RPA_SECRET_MANAGER</tt>, or the keyword argument <tt class=\"docutils literal\">default_adapter</tt>.\nDefaults to Robocorp Vault if not defined.</p>\n<p>All other library arguments are passed to the adapter.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param default_adapter:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Override default secret adapter</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "The selected adapter can be set with the environment variable ``RPA_SECRET_MANAGER``, or the keyword argument ``default_adapter``. Defaults to Robocorp Vault if not defined.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Robocorp/Vault.py",
      "lineno": 562
    }
  ],
  "keywords": [
    {
      "name": "Get Secret",
      "args": [
        {
          "name": "secret_name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "secret_name: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Read a secret from the configured source, e.g. Robocorp Vault,\nand return it as a <tt class=\"docutils literal\">Secret</tt> object.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param secret_name:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Name of secret</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Read a secret from the configured source, e.g. Robocorp Vault, and return it as a ``Secret`` object.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Robocorp/Vault.py",
      "lineno": 605
    },
    {
      "name": "Set Secret",
      "args": [
        {
          "name": "secret",
          "types": [
            "Secret"
          ],
          "typedocs": {
            "Secret": "dictionary"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "secret: Secret"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Overwrite an existing secret with new values.</p>\n<dl class=\"docutils\">\n<dt>Note: Only allows modifying existing secrets, and replaces</dt>\n<dd>all values contained within it.</dd>\n</dl>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param secret:</th><td class=\"field-body\">Secret as a <tt class=\"docutils literal\">Secret</tt> object, from e.g. <tt class=\"docutils literal\">Get Secret</tt></td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Overwrite an existing secret with new values.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Robocorp/Vault.py",
      "lineno": 613
    }
  ],
  "dataTypes": {
    "enums": [],
    "typedDicts": []
  },
  "typedocs": [
    {
      "type": "Standard",
      "name": "dictionary",
      "doc": "<p>Strings must be Python <a href=\"https://docs.python.org/library/stdtypes.html#dict\">dictionary</a> literals. They are converted to actual dictionaries using the <a href=\"https://docs.python.org/library/ast.html#ast.literal_eval\">ast.literal_eval</a> function. They can contain any values <code>ast.literal_eval</code> supports, including dictionaries and other containers.</p>\n<p>Examples: <code>{'a': 1, 'b': 2}</code>, <code>{'key': 1, 'nested': {'key': 2}}</code></p>",
      "usages": [
        "Set Secret"
      ],
      "accepts": [
        "string",
        "Mapping"
      ]
    },
    {
      "type": "Standard",
      "name": "string",
      "doc": "<p>All arguments are converted to Unicode strings.</p>",
      "usages": [
        "Get Secret"
      ],
      "accepts": [
        "Any"
      ]
    }
  ]
}