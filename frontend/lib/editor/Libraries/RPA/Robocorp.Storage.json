{
  "specversion": 1,
  "name": "RPA.Robocorp.Storage",
  "doc": "<div class=\"document\">\n<p>Control Room <cite>Asset Storage</cite> library operating with the cloud built-in key-value\nstore.</p>\n<p>Library requires at the minimum <cite>rpaframework</cite> version <strong>24.0.0</strong>.</p>\n<p><strong>Usage</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Manage Assets</span><span class=\"p\">\n    &#64;{</span><span class=\"nv\">assets</span><span class=\"p\">} =    </span><span class=\"nf\">List Assets</span><span class=\"p\">\n    </span><span class=\"nf\">Log List</span><span class=\"p\">    ${</span><span class=\"nv\">assets</span><span class=\"p\">}\n\n    </span><span class=\"nf\">Set Text Asset</span><span class=\"p\">    </span><span class=\"s\">my-asset</span><span class=\"p\">    </span><span class=\"s\">My string asset value</span><span class=\"p\">\n    ${</span><span class=\"nv\">value</span><span class=\"p\">} =      </span><span class=\"nf\">Get Text Asset</span><span class=\"p\">       </span><span class=\"s\">my-asset</span><span class=\"p\">\n    </span><span class=\"nf\">Log</span><span class=\"p\">     </span><span class=\"s\">Asset value: </span><span class=\"p\">${</span><span class=\"nv\">value</span><span class=\"p\">}\n\n    </span><span class=\"nf\">Delete Asset</span><span class=\"p\">    </span><span class=\"s\">my-asset</span>\n</pre>\n<pre class=\"code python literal-block\">\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span><span class=\"w\">\n</span><span class=\"kn\">from</span> <span class=\"nn\">RPA.Robocorp.Storage</span> <span class=\"kn\">import</span> <span class=\"n\">Storage</span><span class=\"w\">\n\n</span><span class=\"n\">storage</span> <span class=\"o\">=</span> <span class=\"n\">Storage</span><span class=\"p\">()</span><span class=\"w\">\n\n</span><span class=\"k\">def</span> <span class=\"nf\">manage_assets</span><span class=\"p\">():</span><span class=\"w\">\n</span>    <span class=\"n\">assets</span> <span class=\"o\">=</span> <span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">list_assets</span><span class=\"p\">()</span><span class=\"w\">\n</span>    <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"n\">assets</span><span class=\"p\">)</span><span class=\"w\">\n\n</span>    <span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">set_text_asset</span><span class=\"p\">(</span><span class=\"s2\">&quot;my-asset&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;My string asset value&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span>    <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">get_text_asset</span><span class=\"p\">(</span><span class=\"s2\">&quot;my-asset&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span>    <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Asset value: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span><span class=\"w\">\n\n</span>    <span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">delete_asset</span><span class=\"p\">(</span><span class=\"s2\">&quot;my-asset&quot;</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Caveats</strong></p>\n<p>Currently, there's no local file adapter support, therefore you need to be linked\nto Control Room and connected to a Workspace in VSCode before being able to develop\nlocally robots using this functionality.</p>\n<p>While the content type can be controlled (during bytes and file setting), it is\ncurrently disabled in this version of the library for simplicity reasons.</p>\n</div>\n",
  "version": "",
  "generated": "2024-10-30 10:10:08",
  "type": "LIBRARY",
  "scope": "GLOBAL",
  "docFormat": "HTML",
  "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Robocorp/Storage.py",
  "lineno": 8,
  "tags": [],
  "inits": [],
  "keywords": [
    {
      "name": "Delete Asset",
      "args": [
        {
          "name": "name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "name: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Delete an asset by providing its <cite>name</cite>.</p>\n<p>This operation cannot be undone.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param name:</th><td class=\"field-body\">Name of the asset to delete</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">raises AssetNotFound:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Asset with the given name does not exist</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example: Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Remove An Asset</span><span class=\"p\">\n    </span><span class=\"nf\">Delete Asset</span><span class=\"p\">    </span><span class=\"s\">my-asset</span>\n</pre>\n<p><strong>Example: Python</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"k\">def</span> <span class=\"nf\">remove_an_asset</span><span class=\"p\">():</span><span class=\"w\">\n</span>    <span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">delete_asset</span><span class=\"p\">(</span><span class=\"s2\">&quot;my-asset&quot;</span><span class=\"p\">)</span>\n</pre>\n</div>\n",
      "shortdoc": "Delete an asset by providing its `name`.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Robocorp/Storage.py",
      "lineno": 302
    },
    {
      "name": "Get Bytes Asset",
      "args": [
        {
          "name": "name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "name: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Get the asset's bytes value by providing its <cite>name</cite>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param name:</th><td class=\"field-body\">Name of the asset</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">raises AssetNotFound:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Asset with the given name does not exist</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">returns:</th><td class=\"field-body\">The current value of this asset as bytes</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example: Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Retrieve An Asset</span><span class=\"p\">\n    ${</span><span class=\"nv\">value</span><span class=\"p\">} =      </span><span class=\"nf\">Get Bytes Asset</span><span class=\"p\">       </span><span class=\"s\">my-bytes-asset</span><span class=\"p\">\n    </span><span class=\"nf\">Log</span><span class=\"p\">     </span><span class=\"s\">Asset bytes value: </span><span class=\"p\">${</span><span class=\"nv\">value</span><span class=\"p\">}</span>\n</pre>\n<p><strong>Example: Python</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"k\">def</span> <span class=\"nf\">retrieve_an_asset</span><span class=\"p\">():</span><span class=\"w\">\n</span>    <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">get_bytes_asset</span><span class=\"p\">(</span><span class=\"s2\">&quot;my-bytes-asset&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s2\">&quot;Asset bytes value:&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n</pre>\n</div>\n",
      "shortdoc": "Get the asset's bytes value by providing its `name`.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Robocorp/Storage.py",
      "lineno": 113
    },
    {
      "name": "Get File Asset",
      "args": [
        {
          "name": "name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "name: str"
        },
        {
          "name": "path",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str"
        },
        {
          "name": "overwrite",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "overwrite: bool = False"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Get the asset's content saved to disk by providing its <cite>name</cite>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param name:</th><td class=\"field-body\">Name of the asset</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">Destination path to the downloaded file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param overwrite:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Replace destination file if it already exists (default False)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">raises AssetNotFound:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Asset with the given name does not exist</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">returns:</th><td class=\"field-body\">A local path pointing to the retrieved file</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example: Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Retrieve An Asset</span><span class=\"p\">\n    ${</span><span class=\"nv\">path</span><span class=\"p\">} =      </span><span class=\"nf\">Get File Asset</span><span class=\"p\">       </span><span class=\"s\">my-file-asset</span><span class=\"p\">    </span><span class=\"s\">report.pdf</span><span class=\"p\">\n    </span><span class=\"nf\">Log</span><span class=\"p\">     </span><span class=\"s\">Asset file path: </span><span class=\"p\">${</span><span class=\"nv\">path</span><span class=\"p\">}</span>\n</pre>\n<p><strong>Example: Python</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"k\">def</span> <span class=\"nf\">retrieve_an_asset</span><span class=\"p\">():</span><span class=\"w\">\n</span>    <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">get_file_asset</span><span class=\"p\">(</span><span class=\"s2\">&quot;my-file-asset&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;report.pdf&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Asset file path:&quot;</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">)</span>\n</pre>\n</div>\n",
      "shortdoc": "Get the asset's content saved to disk by providing its `name`.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Robocorp/Storage.py",
      "lineno": 273
    },
    {
      "name": "Get JSON Asset",
      "args": [
        {
          "name": "name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "name: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Get the asset's dictionary value by providing its <cite>name</cite>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param name:</th><td class=\"field-body\">Name of the asset</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">raises AssetNotFound:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Asset with the given name does not exist</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">returns:</th><td class=\"field-body\">The current value of this asset as a dictionary</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example: Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Retrieve An Asset</span><span class=\"p\">\n    &amp;{</span><span class=\"nv\">value</span><span class=\"p\">} =      </span><span class=\"nf\">Get JSON Asset</span><span class=\"p\">       </span><span class=\"s\">my-json-asset</span><span class=\"p\">\n    </span><span class=\"nf\">Log</span><span class=\"p\">     </span><span class=\"s\">Asset dictionary value: </span><span class=\"p\">${</span><span class=\"nv\">value</span><span class=\"p\">}</span>\n</pre>\n<p><strong>Example: Python</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"k\">def</span> <span class=\"nf\">retrieve_an_asset</span><span class=\"p\">():</span><span class=\"w\">\n</span>    <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">get_json_asset</span><span class=\"p\">(</span><span class=\"s2\">&quot;my-json-asset&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Asset dictionary value:&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n</pre>\n</div>\n",
      "shortdoc": "Get the asset's dictionary value by providing its `name`.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Robocorp/Storage.py",
      "lineno": 220
    },
    {
      "name": "Get Text Asset",
      "args": [
        {
          "name": "name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "name: str"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Get the asset's text value by providing its <cite>name</cite>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param name:</th><td class=\"field-body\">Name of the asset</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">raises AssetNotFound:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Asset with the given name does not exist</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">returns:</th><td class=\"field-body\">The current value of this asset as text</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example: Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Retrieve An Asset</span><span class=\"p\">\n    ${</span><span class=\"nv\">value</span><span class=\"p\">} =      </span><span class=\"nf\">Get Text Asset</span><span class=\"p\">       </span><span class=\"s\">my-text-asset</span><span class=\"p\">\n    </span><span class=\"nf\">Log</span><span class=\"p\">     </span><span class=\"s\">Asset text value: </span><span class=\"p\">${</span><span class=\"nv\">value</span><span class=\"p\">}</span>\n</pre>\n<p><strong>Example: Python</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"k\">def</span> <span class=\"nf\">retrieve_an_asset</span><span class=\"p\">():</span><span class=\"w\">\n</span>    <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">get_text_asset</span><span class=\"p\">(</span><span class=\"s2\">&quot;my-text-asset&quot;</span><span class=\"p\">)</span><span class=\"w\">\n</span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Asset text value:&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n</pre>\n</div>\n",
      "shortdoc": "Get the asset's text value by providing its `name`.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Robocorp/Storage.py",
      "lineno": 165
    },
    {
      "name": "List Assets",
      "args": [],
      "doc": "<div class=\"document\">\n<p>List all the existing assets.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">returns:</th><td class=\"field-body\">A list of available assets' names</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example: Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Print All Assets</span><span class=\"p\">\n    &#64;{</span><span class=\"nv\">assets</span><span class=\"p\">} =    </span><span class=\"nf\">List Assets</span><span class=\"p\">\n    </span><span class=\"nf\">Log List</span><span class=\"p\">    ${</span><span class=\"nv\">assets</span><span class=\"p\">}</span>\n</pre>\n<p><strong>Example: Python</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"k\">def</span> <span class=\"nf\">print_all_assets</span><span class=\"p\">():</span><span class=\"w\">\n</span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">list_assets</span><span class=\"p\">())</span>\n</pre>\n</div>\n",
      "shortdoc": "List all the existing assets.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Robocorp/Storage.py",
      "lineno": 60
    },
    {
      "name": "Set Bytes Asset",
      "args": [
        {
          "name": "name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "name: str"
        },
        {
          "name": "value",
          "types": [
            "bytes"
          ],
          "typedocs": {
            "bytes": "bytes"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "value: bytes"
        },
        {
          "name": "wait",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "True",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "wait: bool = True"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Creates or updates an asset named <cite>name</cite> with the provided bytes <cite>value</cite>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param name:</th><td class=\"field-body\">Name of the existing or new asset to create (if missing)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param value:</th><td class=\"field-body\">The new bytes value to set within the asset</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param wait:</th><td class=\"field-body\">Wait for the value to be set successfully</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example: Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Set An Asset</span><span class=\"p\">\n    ${</span><span class=\"nv\">random_bytes</span><span class=\"p\">} =      </span><span class=\"nf\">Evaluate</span><span class=\"p\">    </span><span class=\"s\">os.urandom(10)</span><span class=\"p\">      </span><span class=\"s\">modules=os</span><span class=\"p\">\n    </span><span class=\"nf\">Set Bytes Asset</span><span class=\"p\">    </span><span class=\"s\">my-bytes-asset</span><span class=\"p\">    ${</span><span class=\"nv\">random_bytes</span><span class=\"p\">}</span>\n</pre>\n<p><strong>Example: Python</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"kn\">import</span> <span class=\"nn\">os</span><span class=\"w\">\n\n</span><span class=\"k\">def</span> <span class=\"nf\">set_an_asset</span><span class=\"p\">():</span><span class=\"w\">\n</span>    <span class=\"n\">random_bytes</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">urandom</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span><span class=\"w\">\n</span>    <span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">set_bytes_asset</span><span class=\"p\">(</span><span class=\"s2\">&quot;my-bytes-asset&quot;</span><span class=\"p\">,</span> <span class=\"n\">random_bytes</span><span class=\"p\">)</span>\n</pre>\n</div>\n",
      "shortdoc": "Creates or updates an asset named `name` with the provided bytes `value`.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Robocorp/Storage.py",
      "lineno": 84
    },
    {
      "name": "Set File Asset",
      "args": [
        {
          "name": "name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "name: str"
        },
        {
          "name": "path",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path: str"
        },
        {
          "name": "wait",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "True",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "wait: bool = True"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Creates or updates an asset named <cite>name</cite> with the content of the given\n<cite>path</cite> file.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param name:</th><td class=\"field-body\">Name of the existing or new asset to create (if missing)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">The file path whose content to be set within the asset</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param wait:</th><td class=\"field-body\">Wait for the value to be set successfully</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example: Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Set An Asset</span><span class=\"p\">\n    </span><span class=\"nf\">Set File Asset</span><span class=\"p\">    </span><span class=\"s\">my-file-asset</span><span class=\"p\">      </span><span class=\"s\">report.pdf</span>\n</pre>\n<p><strong>Example: Python</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"k\">def</span> <span class=\"nf\">set_an_asset</span><span class=\"p\">():</span><span class=\"w\">\n</span>    <span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">set_file_asset</span><span class=\"p\">(</span><span class=\"s2\">&quot;my-file-asset&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;report.pdf&quot;</span><span class=\"p\">)</span>\n</pre>\n</div>\n",
      "shortdoc": "Creates or updates an asset named `name` with the content of the given `path` file.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Robocorp/Storage.py",
      "lineno": 247
    },
    {
      "name": "Set JSON Asset",
      "args": [
        {
          "name": "name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "name: str"
        },
        {
          "name": "value",
          "types": [
            "Dict"
          ],
          "typedocs": {
            "Dict": "dictionary"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "value: Dict"
        },
        {
          "name": "wait",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "True",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "wait: bool = True"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Creates or updates an asset named <cite>name</cite> with the provided dictionary\n<cite>value</cite>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param name:</th><td class=\"field-body\">Name of the existing or new asset to create (if missing)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param value:</th><td class=\"field-body\">The new dictionary value to set within the asset</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param wait:</th><td class=\"field-body\">Wait for the value to be set successfully</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example: Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Set An Asset</span><span class=\"p\">\n    &amp;{</span><span class=\"nv\">entries</span><span class=\"p\">} =    </span><span class=\"nf\">Create Dictionary</span><span class=\"p\">   </span><span class=\"s\">dogs</span><span class=\"p\">    ${</span><span class=\"nv\">10</span><span class=\"p\">}\n    </span><span class=\"nf\">Set JSON Asset</span><span class=\"p\">    </span><span class=\"s\">my-json-asset</span><span class=\"p\">    ${</span><span class=\"nv\">entries</span><span class=\"p\">}</span>\n</pre>\n<p><strong>Example: Python</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"k\">def</span> <span class=\"nf\">set_an_asset</span><span class=\"p\">():</span><span class=\"w\">\n</span>    <span class=\"n\">entries</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;dogs&quot;</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">}</span><span class=\"w\">\n</span>    <span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">set_json_asset</span><span class=\"p\">(</span><span class=\"s2\">&quot;my-json-asset&quot;</span><span class=\"p\">,</span> <span class=\"n\">entries</span><span class=\"p\">)</span>\n</pre>\n</div>\n",
      "shortdoc": "Creates or updates an asset named `name` with the provided dictionary `value`.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Robocorp/Storage.py",
      "lineno": 192
    },
    {
      "name": "Set Text Asset",
      "args": [
        {
          "name": "name",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "name: str"
        },
        {
          "name": "value",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "value: str"
        },
        {
          "name": "wait",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "True",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "wait: bool = True"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Creates or updates an asset named <cite>name</cite> with the provided text <cite>value</cite>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param name:</th><td class=\"field-body\">Name of the existing or new asset to create (if missing)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param value:</th><td class=\"field-body\">The new text value to set within the asset</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param wait:</th><td class=\"field-body\">Wait for the value to be set successfully</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example: Robot Framework</strong></p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Set An Asset</span><span class=\"p\">\n    </span><span class=\"nf\">Set Text Asset</span><span class=\"p\">    </span><span class=\"s\">my-text-asset</span><span class=\"p\">    </span><span class=\"s\">My asset value as text</span>\n</pre>\n<p><strong>Example: Python</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"k\">def</span> <span class=\"nf\">set_an_asset</span><span class=\"p\">():</span><span class=\"w\">\n</span>    <span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">set_text_asset</span><span class=\"p\">(</span><span class=\"s2\">&quot;my-text-asset&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;My asset value as text&quot;</span><span class=\"p\">)</span>\n</pre>\n</div>\n",
      "shortdoc": "Creates or updates an asset named `name` with the provided text `value`.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/Robocorp/Storage.py",
      "lineno": 140
    }
  ],
  "dataTypes": {
    "enums": [],
    "typedDicts": []
  },
  "typedocs": [
    {
      "type": "Standard",
      "name": "boolean",
      "doc": "<p>Strings <code>TRUE</code>, <code>YES</code>, <code>ON</code> and <code>1</code> are converted to Boolean <code>True</code>, the empty string as well as strings <code>FALSE</code>, <code>NO</code>, <code>OFF</code> and <code>0</code> are converted to Boolean <code>False</code>, and the string <code>NONE</code> is converted to the Python <code>None</code> object. Other strings and other accepted values are passed as-is, allowing keywords to handle them specially if needed. All string comparisons are case-insensitive.</p>\n<p>Examples: <code>TRUE</code> (converted to <code>True</code>), <code>off</code> (converted to <code>False</code>), <code>example</code> (used as-is)</p>",
      "usages": [
        "Get File Asset",
        "Set Bytes Asset",
        "Set File Asset",
        "Set JSON Asset",
        "Set Text Asset"
      ],
      "accepts": [
        "string",
        "integer",
        "float",
        "None"
      ]
    },
    {
      "type": "Standard",
      "name": "bytes",
      "doc": "<p>Strings are converted to bytes so that each Unicode code point below 256 is directly mapped to a matching byte. Higher code points are not allowed. Robot Framework's <code>\\xHH</code> escape syntax is convenient with bytes having non-printable values.</p>\n<p>Examples: <code>good</code>, <code>hyv\u00e4</code> (same as <code>hyv\\xE4</code>), <code>\\x00</code> (the null byte)</p>",
      "usages": [
        "Set Bytes Asset"
      ],
      "accepts": [
        "string",
        "bytearray"
      ]
    },
    {
      "type": "Standard",
      "name": "dictionary",
      "doc": "<p>Strings must be Python <a href=\"https://docs.python.org/library/stdtypes.html#dict\">dictionary</a> literals. They are converted to actual dictionaries using the <a href=\"https://docs.python.org/library/ast.html#ast.literal_eval\">ast.literal_eval</a> function. They can contain any values <code>ast.literal_eval</code> supports, including dictionaries and other containers.</p>\n<p>Examples: <code>{'a': 1, 'b': 2}</code>, <code>{'key': 1, 'nested': {'key': 2}}</code></p>",
      "usages": [
        "Set JSON Asset"
      ],
      "accepts": [
        "string",
        "Mapping"
      ]
    },
    {
      "type": "Standard",
      "name": "string",
      "doc": "<p>All arguments are converted to Unicode strings.</p>",
      "usages": [
        "Delete Asset",
        "Get Bytes Asset",
        "Get File Asset",
        "Get JSON Asset",
        "Get Text Asset",
        "Set Bytes Asset",
        "Set File Asset",
        "Set JSON Asset",
        "Set Text Asset"
      ],
      "accepts": [
        "Any"
      ]
    }
  ]
}