{
  "specversion": 1,
  "name": "RPA.HTTP",
  "doc": "<div class=\"document\">\n<p>The <em>RPA.HTTP</em> library extends functionality of the <a class=\"reference external\" href=\"https://marketsquare.github.io/robotframework-requests/doc/RequestsLibrary.html\">RequestsLibrary</a>.\nSee that documentation for several examples of how to issue <tt class=\"docutils literal\">GET</tt>\nrequests and utilize the returned <tt class=\"docutils literal\">result</tt> objects.</p>\n<p>This extension provides helper keywords to get an HTTP resource on a\nsession. The <tt class=\"docutils literal\">HTTP Get</tt> and <tt class=\"docutils literal\">Download</tt> keywords will initiate a\nsession if one does not exist for the provided URL, or use an existing\nsession. When using these keywords, you do not need to manage\nsessions with <tt class=\"docutils literal\">Create Session</tt>. Session management is still\nrequired if you use the underlying session keywords, e.g.,\n<tt class=\"docutils literal\">* On Session</tt>.</p>\n</div>\n",
  "version": "0.9.7",
  "generated": "2024-10-30 10:09:56",
  "type": "LIBRARY",
  "scope": "GLOBAL",
  "docFormat": "HTML",
  "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/HTTP.py",
  "lineno": 71,
  "tags": [],
  "inits": [
    {
      "name": "__init__",
      "args": [
        {
          "name": "args",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_POSITIONAL",
          "required": false,
          "repr": "*args"
        },
        {
          "name": "kwargs",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_NAMED",
          "required": false,
          "repr": "**kwargs"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</div>\n",
      "shortdoc": "Initialize self.  See help(type(self)) for accurate signature.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/HTTP.py",
      "lineno": 91
    }
  ],
  "keywords": [
    {
      "name": "Check Vulnerabilities",
      "args": [],
      "doc": "<div class=\"document\">\n<p>Check for possible vulnerabilities in the installed runtime\nenvironment packages.</p>\n<p>Currently will check only for OpenSSL version and outputs warning message on any\ndiscovered vulnerability.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">list of all check results</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Vulnerability Check</span><span class=\"p\">\n    ${</span><span class=\"nv\">results</span><span class=\"p\">}=    </span><span class=\"nf\">Check Vulnerabilities</span><span class=\"p\">\n    </span><span class=\"nf\">FOR</span><span class=\"p\">    ${</span><span class=\"nv\">result</span><span class=\"p\">}    </span><span class=\"s\">IN</span><span class=\"p\">    &#64;{</span><span class=\"nv\">results</span><span class=\"p\">}\n        </span><span class=\"nf\">Log To Console</span><span class=\"p\">    </span><span class=\"s\">TYPE: </span><span class=\"p\">${</span><span class=\"nv\">result</span><span class=\"p\">}</span><span class=\"s\">[type]</span><span class=\"p\">\n        </span><span class=\"nf\">Log To Console</span><span class=\"p\">    </span><span class=\"s\">VULNERABLE: </span><span class=\"p\">${</span><span class=\"nv\">result</span><span class=\"p\">}</span><span class=\"s\">[vulnerable]</span><span class=\"p\">\n        </span><span class=\"nf\">Log To Console</span><span class=\"p\">    </span><span class=\"s\">MESSAGE: </span><span class=\"p\">${</span><span class=\"nv\">result</span><span class=\"p\">}</span><span class=\"s\">[message]</span><span class=\"p\">\n    </span><span class=\"nf\">END</span>\n</pre>\n</div>\n",
      "shortdoc": "Check for possible vulnerabilities in the installed runtime environment packages.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/HTTP.py",
      "lineno": 262
    },
    {
      "name": "Create Client Cert Session",
      "args": [
        {
          "name": "alias",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "alias"
        },
        {
          "name": "url",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "url"
        },
        {
          "name": "headers",
          "types": [],
          "typedocs": {},
          "defaultValue": "{}",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "headers={}"
        },
        {
          "name": "cookies",
          "types": [],
          "typedocs": {},
          "defaultValue": "{}",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "cookies={}"
        },
        {
          "name": "client_certs",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "client_certs=None"
        },
        {
          "name": "timeout",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "timeout=None"
        },
        {
          "name": "proxies",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "proxies=None"
        },
        {
          "name": "verify",
          "types": [],
          "typedocs": {},
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "verify=False"
        },
        {
          "name": "debug",
          "types": [],
          "typedocs": {},
          "defaultValue": "0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "debug=0"
        },
        {
          "name": "max_retries",
          "types": [],
          "typedocs": {},
          "defaultValue": "3",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "max_retries=3"
        },
        {
          "name": "backoff_factor",
          "types": [],
          "typedocs": {},
          "defaultValue": "0.1",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "backoff_factor=0.1"
        },
        {
          "name": "disable_warnings",
          "types": [],
          "typedocs": {},
          "defaultValue": "0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "disable_warnings=0"
        },
        {
          "name": "retry_status_list",
          "types": [],
          "typedocs": {},
          "defaultValue": "[]",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "retry_status_list=[]"
        },
        {
          "name": "retry_method_list",
          "types": [],
          "typedocs": {},
          "defaultValue": "['DELETE', 'GET', 'HEAD', 'PUT', 'TRACE', 'OPTIONS']",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "retry_method_list=['DELETE', 'GET', 'HEAD', 'PUT', 'TRACE', 'OPTIONS']"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Create Session: create a HTTP session to a server</p>\n<p><tt class=\"docutils literal\">url</tt> Base url of the server</p>\n<p><tt class=\"docutils literal\">alias</tt> Robot Framework alias to identify the session</p>\n<p><tt class=\"docutils literal\">headers</tt> Dictionary of default headers</p>\n<p><tt class=\"docutils literal\">cookies</tt> Dictionary of cookies</p>\n<p><tt class=\"docutils literal\">client_certs</tt> ['client certificate', 'client key'] PEM files containing the client key and certificate</p>\n<p><tt class=\"docutils literal\">timeout</tt> Connection timeout</p>\n<dl class=\"docutils\">\n<dt><tt class=\"docutils literal\">proxies</tt> Dictionary mapping protocol or protocol and host to the URL of the proxy</dt>\n<dd>(e.g. {'http': 'foo.bar:3128', 'http://host.name': 'foo.bar:4012'})</dd>\n<dt><tt class=\"docutils literal\">verify</tt> Whether the SSL cert will be verified. A CA_BUNDLE path can also be provided.</dt>\n<dd>Defaults to False.</dd>\n<dt><tt class=\"docutils literal\">debug</tt> Enable http verbosity option more information</dt>\n<dd><a class=\"reference external\" href=\"https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel\">https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel</a></dd>\n<dt><tt class=\"docutils literal\">max_retries</tt> Number of maximum retries each connection should attempt.</dt>\n<dd>By default it will retry 3 times in case of connection errors only.\nA 0 value will disable any kind of retries regardless of other retry settings.\nIn case the number of retries is reached a retry exception is raised.</dd>\n</dl>\n<p><tt class=\"docutils literal\">disable_warnings</tt> Disable requests warning useful when you have large number of testcases</p>\n<dl class=\"docutils\">\n<dt><tt class=\"docutils literal\">backoff_factor</tt> Introduces a delay time between retries that is longer after each retry.</dt>\n<dd>eg. if backoff_factor is set to 0.1\nthe sleep between attemps will be: 0.0, 0.2, 0.4\nMore info here: <a class=\"reference external\" href=\"https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html\">https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html</a></dd>\n<dt><tt class=\"docutils literal\">retry_method_list</tt> List of uppercased HTTP method verbs where retries are allowed.</dt>\n<dd>By default retries are allowed only on HTTP requests methods that are considered to be\nidempotent (multiple requests with the same parameters end with the same state).\neg. set to ['POST', 'GET'] to retry only those kind of requests.</dd>\n<dt><tt class=\"docutils literal\">retry_status_list</tt> List of integer HTTP status codes that, if returned, a retry is attempted.</dt>\n<dd>eg. set to [502, 503] to retry requests if those status are returned.\nNote that max_retries must be greater than 0.</dd>\n</dl>\n</div>\n",
      "shortdoc": "Create Session: create a HTTP session to a server",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/SessionKeywords.py",
      "lineno": 191
    },
    {
      "name": "Create Custom Session",
      "args": [
        {
          "name": "alias",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "alias"
        },
        {
          "name": "url",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "url"
        },
        {
          "name": "auth",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "auth"
        },
        {
          "name": "headers",
          "types": [],
          "typedocs": {},
          "defaultValue": "{}",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "headers={}"
        },
        {
          "name": "cookies",
          "types": [],
          "typedocs": {},
          "defaultValue": "{}",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "cookies={}"
        },
        {
          "name": "timeout",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "timeout=None"
        },
        {
          "name": "proxies",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "proxies=None"
        },
        {
          "name": "verify",
          "types": [],
          "typedocs": {},
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "verify=False"
        },
        {
          "name": "debug",
          "types": [],
          "typedocs": {},
          "defaultValue": "0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "debug=0"
        },
        {
          "name": "max_retries",
          "types": [],
          "typedocs": {},
          "defaultValue": "3",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "max_retries=3"
        },
        {
          "name": "backoff_factor",
          "types": [],
          "typedocs": {},
          "defaultValue": "0.1",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "backoff_factor=0.1"
        },
        {
          "name": "disable_warnings",
          "types": [],
          "typedocs": {},
          "defaultValue": "0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "disable_warnings=0"
        },
        {
          "name": "retry_status_list",
          "types": [],
          "typedocs": {},
          "defaultValue": "[]",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "retry_status_list=[]"
        },
        {
          "name": "retry_method_list",
          "types": [],
          "typedocs": {},
          "defaultValue": "['DELETE', 'GET', 'HEAD', 'PUT', 'TRACE', 'OPTIONS']",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "retry_method_list=['DELETE', 'GET', 'HEAD', 'PUT', 'TRACE', 'OPTIONS']"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Create Session: create a HTTP session to a server</p>\n<p><tt class=\"docutils literal\">url</tt> Base url of the server</p>\n<p><tt class=\"docutils literal\">alias</tt> Robot Framework alias to identify the session</p>\n<p><tt class=\"docutils literal\">headers</tt> Dictionary of default headers</p>\n<p><tt class=\"docutils literal\">cookies</tt> Dictionary of cookies</p>\n<dl class=\"docutils\">\n<dt><tt class=\"docutils literal\">auth</tt> A Custom Authentication object to be passed on to the requests library.</dt>\n<dd><a class=\"reference external\" href=\"http://docs.python-requests.org/en/master/user/advanced/#custom-authentication\">http://docs.python-requests.org/en/master/user/advanced/#custom-authentication</a></dd>\n</dl>\n<p><tt class=\"docutils literal\">timeout</tt> Connection timeout</p>\n<dl class=\"docutils\">\n<dt><tt class=\"docutils literal\">proxies</tt> Dictionary mapping protocol or protocol and host to the URL of the proxy</dt>\n<dd>(e.g. {'http': 'foo.bar:3128', 'http://host.name': 'foo.bar:4012'})</dd>\n<dt><tt class=\"docutils literal\">verify</tt> Whether the SSL cert will be verified. A CA_BUNDLE path can also be provided.</dt>\n<dd>Defaults to False.</dd>\n<dt><tt class=\"docutils literal\">debug</tt> Enable http verbosity option more information</dt>\n<dd><a class=\"reference external\" href=\"https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel\">https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel</a></dd>\n<dt><tt class=\"docutils literal\">max_retries</tt> Number of maximum retries each connection should attempt.</dt>\n<dd>By default it will retry 3 times in case of connection errors only.\nA 0 value will disable any kind of retries regardless of other retry settings.\nIn case the number of retries is reached a retry exception is raised.</dd>\n</dl>\n<p><tt class=\"docutils literal\">disable_warnings</tt> Disable requests warning useful when you have large number of testcases</p>\n<dl class=\"docutils\">\n<dt><tt class=\"docutils literal\">backoff_factor</tt> Introduces a delay time between retries that is longer after each retry.</dt>\n<dd>eg. if backoff_factor is set to 0.1\nthe sleep between attemps will be: 0.0, 0.2, 0.4\nMore info here: <a class=\"reference external\" href=\"https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html\">https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html</a></dd>\n<dt><tt class=\"docutils literal\">retry_method_list</tt> List of uppercased HTTP method verbs where retries are allowed.</dt>\n<dd>By default retries are allowed only on HTTP requests methods that are considered to be\nidempotent (multiple requests with the same parameters end with the same state).\neg. set to ['POST', 'GET'] to retry only those kind of requests.</dd>\n<dt><tt class=\"docutils literal\">retry_status_list</tt> List of integer HTTP status codes that, if returned, a retry is attempted.</dt>\n<dd>eg. set to [502, 503] to retry requests if those status are returned.\nNote that max_retries must be greater than 0.</dd>\n</dl>\n</div>\n",
      "shortdoc": "Create Session: create a HTTP session to a server",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/SessionKeywords.py",
      "lineno": 277
    },
    {
      "name": "Create Digest Session",
      "args": [
        {
          "name": "alias",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "alias"
        },
        {
          "name": "url",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "url"
        },
        {
          "name": "auth",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "auth"
        },
        {
          "name": "headers",
          "types": [],
          "typedocs": {},
          "defaultValue": "{}",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "headers={}"
        },
        {
          "name": "cookies",
          "types": [],
          "typedocs": {},
          "defaultValue": "{}",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "cookies={}"
        },
        {
          "name": "timeout",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "timeout=None"
        },
        {
          "name": "proxies",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "proxies=None"
        },
        {
          "name": "verify",
          "types": [],
          "typedocs": {},
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "verify=False"
        },
        {
          "name": "debug",
          "types": [],
          "typedocs": {},
          "defaultValue": "0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "debug=0"
        },
        {
          "name": "max_retries",
          "types": [],
          "typedocs": {},
          "defaultValue": "3",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "max_retries=3"
        },
        {
          "name": "backoff_factor",
          "types": [],
          "typedocs": {},
          "defaultValue": "0.1",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "backoff_factor=0.1"
        },
        {
          "name": "disable_warnings",
          "types": [],
          "typedocs": {},
          "defaultValue": "0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "disable_warnings=0"
        },
        {
          "name": "retry_status_list",
          "types": [],
          "typedocs": {},
          "defaultValue": "[]",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "retry_status_list=[]"
        },
        {
          "name": "retry_method_list",
          "types": [],
          "typedocs": {},
          "defaultValue": "['DELETE', 'GET', 'HEAD', 'PUT', 'TRACE', 'OPTIONS']",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "retry_method_list=['DELETE', 'GET', 'HEAD', 'PUT', 'TRACE', 'OPTIONS']"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Create Session: create a HTTP session to a server</p>\n<p><tt class=\"docutils literal\">url</tt> Base url of the server</p>\n<p><tt class=\"docutils literal\">alias</tt> Robot Framework alias to identify the session</p>\n<p><tt class=\"docutils literal\">headers</tt> Dictionary of default headers</p>\n<p><tt class=\"docutils literal\">cookies</tt> Dictionary of cookies</p>\n<p><tt class=\"docutils literal\">auth</tt> ['DOMAIN', 'username', 'password'] for NTLM Authentication</p>\n<p><tt class=\"docutils literal\">timeout</tt> Connection timeout</p>\n<dl class=\"docutils\">\n<dt><tt class=\"docutils literal\">proxies</tt> Dictionary mapping protocol or protocol and host to the URL of the proxy</dt>\n<dd>(e.g. {'http': 'foo.bar:3128', 'http://host.name': 'foo.bar:4012'})</dd>\n<dt><tt class=\"docutils literal\">verify</tt> Whether the SSL cert will be verified. A CA_BUNDLE path can also be provided.</dt>\n<dd>Defaults to False.</dd>\n<dt><tt class=\"docutils literal\">debug</tt> Enable http verbosity option more information</dt>\n<dd><a class=\"reference external\" href=\"https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel\">https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel</a></dd>\n<dt><tt class=\"docutils literal\">max_retries</tt> Number of maximum retries each connection should attempt.</dt>\n<dd>By default it will retry 3 times in case of connection errors only.\nA 0 value will disable any kind of retries regardless of other retry settings.\nIn case the number of retries is reached a retry exception is raised.</dd>\n</dl>\n<p><tt class=\"docutils literal\">disable_warnings</tt> Disable requests warning useful when you have large number of testcases</p>\n<dl class=\"docutils\">\n<dt><tt class=\"docutils literal\">backoff_factor</tt> Introduces a delay time between retries that is longer after each retry.</dt>\n<dd>eg. if backoff_factor is set to 0.1\nthe sleep between attemps will be: 0.0, 0.2, 0.4\nMore info here: <a class=\"reference external\" href=\"https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html\">https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html</a></dd>\n<dt><tt class=\"docutils literal\">retry_method_list</tt> List of uppercased HTTP method verbs where retries are allowed.</dt>\n<dd>By default retries are allowed only on HTTP requests methods that are considered to be\nidempotent (multiple requests with the same parameters end with the same state).\neg. set to ['POST', 'GET'] to retry only those kind of requests.</dd>\n<dt><tt class=\"docutils literal\">retry_status_list</tt> List of integer HTTP status codes that, if returned, a retry is attempted.</dt>\n<dd>eg. set to [502, 503] to retry requests if those status are returned.\nNote that max_retries must be greater than 0.</dd>\n</dl>\n</div>\n",
      "shortdoc": "Create Session: create a HTTP session to a server",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/SessionKeywords.py",
      "lineno": 361
    },
    {
      "name": "Create Ntlm Session",
      "args": [
        {
          "name": "alias",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "alias"
        },
        {
          "name": "url",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "url"
        },
        {
          "name": "auth",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "auth"
        },
        {
          "name": "headers",
          "types": [],
          "typedocs": {},
          "defaultValue": "{}",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "headers={}"
        },
        {
          "name": "cookies",
          "types": [],
          "typedocs": {},
          "defaultValue": "{}",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "cookies={}"
        },
        {
          "name": "timeout",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "timeout=None"
        },
        {
          "name": "proxies",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "proxies=None"
        },
        {
          "name": "verify",
          "types": [],
          "typedocs": {},
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "verify=False"
        },
        {
          "name": "debug",
          "types": [],
          "typedocs": {},
          "defaultValue": "0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "debug=0"
        },
        {
          "name": "max_retries",
          "types": [],
          "typedocs": {},
          "defaultValue": "3",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "max_retries=3"
        },
        {
          "name": "backoff_factor",
          "types": [],
          "typedocs": {},
          "defaultValue": "0.1",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "backoff_factor=0.1"
        },
        {
          "name": "disable_warnings",
          "types": [],
          "typedocs": {},
          "defaultValue": "0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "disable_warnings=0"
        },
        {
          "name": "retry_status_list",
          "types": [],
          "typedocs": {},
          "defaultValue": "[]",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "retry_status_list=[]"
        },
        {
          "name": "retry_method_list",
          "types": [],
          "typedocs": {},
          "defaultValue": "['DELETE', 'GET', 'HEAD', 'PUT', 'TRACE', 'OPTIONS']",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "retry_method_list=['DELETE', 'GET', 'HEAD', 'PUT', 'TRACE', 'OPTIONS']"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Create Session: create a HTTP session to a server</p>\n<p><tt class=\"docutils literal\">url</tt> Base url of the server</p>\n<p><tt class=\"docutils literal\">alias</tt> Robot Framework alias to identify the session</p>\n<p><tt class=\"docutils literal\">headers</tt> Dictionary of default headers</p>\n<p><tt class=\"docutils literal\">cookies</tt> Dictionary of cookies</p>\n<p><tt class=\"docutils literal\">auth</tt> ['DOMAIN', 'username', 'password'] for NTLM Authentication</p>\n<p><tt class=\"docutils literal\">timeout</tt> Connection timeout</p>\n<dl class=\"docutils\">\n<dt><tt class=\"docutils literal\">proxies</tt> Dictionary mapping protocol or protocol and host to the URL of the proxy</dt>\n<dd>(e.g. {'http': 'foo.bar:3128', 'http://host.name': 'foo.bar:4012'})</dd>\n<dt><tt class=\"docutils literal\">verify</tt> Whether the SSL cert will be verified. A CA_BUNDLE path can also be provided.</dt>\n<dd>Defaults to False.</dd>\n<dt><tt class=\"docutils literal\">debug</tt> Enable http verbosity option more information</dt>\n<dd><a class=\"reference external\" href=\"https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel\">https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel</a></dd>\n<dt><tt class=\"docutils literal\">max_retries</tt> Number of maximum retries each connection should attempt.</dt>\n<dd>By default it will retry 3 times in case of connection errors only.\nA 0 value will disable any kind of retries regardless of other retry settings.\nIn case the number of retries is reached a retry exception is raised.</dd>\n</dl>\n<p><tt class=\"docutils literal\">disable_warnings</tt> Disable requests warning useful when you have large number of testcases</p>\n<dl class=\"docutils\">\n<dt><tt class=\"docutils literal\">backoff_factor</tt> Introduces a delay time between retries that is longer after each retry.</dt>\n<dd>eg. if backoff_factor is set to 0.1\nthe sleep between attemps will be: 0.0, 0.2, 0.4\nMore info here: <a class=\"reference external\" href=\"https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html\">https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html</a></dd>\n<dt><tt class=\"docutils literal\">retry_method_list</tt> List of uppercased HTTP method verbs where retries are allowed.</dt>\n<dd>By default retries are allowed only on HTTP requests methods that are considered to be\nidempotent (multiple requests with the same parameters end with the same state).\neg. set to ['POST', 'GET'] to retry only those kind of requests.</dd>\n<dt><tt class=\"docutils literal\">retry_status_list</tt> List of integer HTTP status codes that, if returned, a retry is attempted.</dt>\n<dd>eg. set to [502, 503] to retry requests if those status are returned.\nNote that max_retries must be greater than 0.</dd>\n</dl>\n</div>\n",
      "shortdoc": "Create Session: create a HTTP session to a server",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/SessionKeywords.py",
      "lineno": 439
    },
    {
      "name": "Create Session",
      "args": [
        {
          "name": "alias",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "alias"
        },
        {
          "name": "url",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "url"
        },
        {
          "name": "headers",
          "types": [],
          "typedocs": {},
          "defaultValue": "{}",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "headers={}"
        },
        {
          "name": "cookies",
          "types": [],
          "typedocs": {},
          "defaultValue": "{}",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "cookies={}"
        },
        {
          "name": "auth",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "auth=None"
        },
        {
          "name": "timeout",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "timeout=None"
        },
        {
          "name": "proxies",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "proxies=None"
        },
        {
          "name": "verify",
          "types": [],
          "typedocs": {},
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "verify=False"
        },
        {
          "name": "debug",
          "types": [],
          "typedocs": {},
          "defaultValue": "0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "debug=0"
        },
        {
          "name": "max_retries",
          "types": [],
          "typedocs": {},
          "defaultValue": "3",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "max_retries=3"
        },
        {
          "name": "backoff_factor",
          "types": [],
          "typedocs": {},
          "defaultValue": "0.1",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "backoff_factor=0.1"
        },
        {
          "name": "disable_warnings",
          "types": [],
          "typedocs": {},
          "defaultValue": "0",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "disable_warnings=0"
        },
        {
          "name": "retry_status_list",
          "types": [],
          "typedocs": {},
          "defaultValue": "[]",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "retry_status_list=[]"
        },
        {
          "name": "retry_method_list",
          "types": [],
          "typedocs": {},
          "defaultValue": "['DELETE', 'GET', 'HEAD', 'PUT', 'TRACE', 'OPTIONS']",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "retry_method_list=['DELETE', 'GET', 'HEAD', 'PUT', 'TRACE', 'OPTIONS']"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Create Session: create a HTTP session to a server</p>\n<p><tt class=\"docutils literal\">alias</tt> Robot Framework alias to identify the session</p>\n<p><tt class=\"docutils literal\">url</tt> Base url of the server</p>\n<p><tt class=\"docutils literal\">headers</tt> Dictionary of default headers</p>\n<p><tt class=\"docutils literal\">cookies</tt> Dictionary of cookies</p>\n<p><tt class=\"docutils literal\">auth</tt> List of username &amp; password for HTTP Basic Auth</p>\n<p><tt class=\"docutils literal\">timeout</tt> Connection timeout</p>\n<dl class=\"docutils\">\n<dt><tt class=\"docutils literal\">proxies</tt> Dictionary mapping protocol or protocol and host to the URL of the proxy</dt>\n<dd>(e.g. {'http': 'foo.bar:3128', 'http://host.name': 'foo.bar:4012'})</dd>\n</dl>\n<p><tt class=\"docutils literal\">verify</tt> Whether the SSL cert will be verified. A CA_BUNDLE path can also be provided.</p>\n<dl class=\"docutils\">\n<dt><tt class=\"docutils literal\">debug</tt> Enable http verbosity option more information</dt>\n<dd><a class=\"reference external\" href=\"https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel\">https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel</a></dd>\n<dt><tt class=\"docutils literal\">max_retries</tt> Number of maximum retries each connection should attempt.</dt>\n<dd>By default it will retry 3 times in case of connection errors only.\nA 0 value will disable any kind of retries regardless of other retry settings.\nIn case the number of retries is reached a retry exception is raised.</dd>\n</dl>\n<p><tt class=\"docutils literal\">disable_warnings</tt> Disable requests warning useful when you have large number of testcases</p>\n<dl class=\"docutils\">\n<dt><tt class=\"docutils literal\">backoff_factor</tt> Introduces a delay time between retries that is longer after each retry.</dt>\n<dd>eg. if backoff_factor is set to 0.1\nthe sleep between attemps will be: 0.0, 0.2, 0.4\nMore info here: <a class=\"reference external\" href=\"https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html\">https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html</a></dd>\n<dt><tt class=\"docutils literal\">retry_method_list</tt> List of uppercased HTTP method verbs where retries are allowed.</dt>\n<dd>By default retries are allowed only on HTTP requests methods that are considered to be\nidempotent (multiple requests with the same parameters end with the same state).\neg. set to ['POST', 'GET'] to retry only those kind of requests.</dd>\n<dt><tt class=\"docutils literal\">retry_status_list</tt> List of integer HTTP status codes that, if returned, a retry is attempted.</dt>\n<dd>eg. set to [502, 503] to retry requests if those status are returned.\nNote that max_retries must be greater than 0.</dd>\n</dl>\n</div>\n",
      "shortdoc": "Create Session: create a HTTP session to a server",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/SessionKeywords.py",
      "lineno": 109
    },
    {
      "name": "DELETE",
      "args": [
        {
          "name": "args",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_POSITIONAL",
          "required": false,
          "repr": "*args"
        },
        {
          "name": "kwargs",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_NAMED",
          "required": false,
          "repr": "**kwargs"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Sends a DELETE request.</p>\n<p>The endpoint used to send the request is the <tt class=\"docutils literal\">url</tt> parameter.</p>\n<p>By default this keyword fails if a status code with error values is returned in the response,\nthis behavior can be modified using the <tt class=\"docutils literal\">expected_status</tt> and <tt class=\"docutils literal\">msg</tt> parameters,\nread more about it in <cite>Status Should Be</cite> keyword documentation.\nIn order to disable this implicit assert mechanism you can pass as <tt class=\"docutils literal\">expected_status</tt> the values <tt class=\"docutils literal\">any</tt> or\n<tt class=\"docutils literal\">anything</tt>.</p>\n<p>Other optional requests arguments can be passed using <tt class=\"docutils literal\">**kwargs</tt>\nsee the <cite>GET</cite> keyword for the complete list.</p>\n</div>\n",
      "shortdoc": "Sends a DELETE request.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/utils.py",
      "lineno": 136
    },
    {
      "name": "Delete All Sessions",
      "args": [],
      "doc": "<div class=\"document\">\n<p>Removes all the session objects</p>\n</div>\n",
      "shortdoc": "Removes all the session objects",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/SessionKeywords.py",
      "lineno": 544
    },
    {
      "name": "DELETE On Session",
      "args": [
        {
          "name": "args",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_POSITIONAL",
          "required": false,
          "repr": "*args"
        },
        {
          "name": "kwargs",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_NAMED",
          "required": false,
          "repr": "**kwargs"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Sends a DELETE request on a previously created HTTP Session.</p>\n<p>Session will be identified using the <tt class=\"docutils literal\">alias</tt> name.\nThe endpoint used to send the request is the <tt class=\"docutils literal\">url</tt> parameter.</p>\n<p>By default this keyword fails if a status code with error values is returned in the response,\nthis behavior can be modified using the <tt class=\"docutils literal\">expected_status</tt> and <tt class=\"docutils literal\">msg</tt> parameters,\nread more about it in <cite>Status Should Be</cite> keyword documentation.\nIn order to disable this implicit assert mechanism you can pass as <tt class=\"docutils literal\">expected_status</tt> the values <tt class=\"docutils literal\">any</tt> or\n<tt class=\"docutils literal\">anything</tt>.</p>\n<p>Other optional requests arguments can be passed using <tt class=\"docutils literal\">**kwargs</tt>\nsee the <cite>GET</cite> keyword for the complete list.</p>\n</div>\n",
      "shortdoc": "Sends a DELETE request on a previously created HTTP Session.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/utils.py",
      "lineno": 149
    },
    {
      "name": "Delete Request",
      "args": [
        {
          "name": "alias",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "alias"
        },
        {
          "name": "uri",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "uri"
        },
        {
          "name": "data",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "data=None"
        },
        {
          "name": "json",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "json=None"
        },
        {
          "name": "params",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "params=None"
        },
        {
          "name": "headers",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "headers=None"
        },
        {
          "name": "allow_redirects",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "allow_redirects=None"
        },
        {
          "name": "timeout",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "timeout=None"
        }
      ],
      "doc": "<div class=\"document\">\n<p><em>DEPRECATED</em> Please use <cite>DELETE On Session</cite> instead.</p>\n<p>Send a DELETE request on the session object found using the\ngiven <cite>alias</cite></p>\n<p><tt class=\"docutils literal\">alias</tt> that will be used to identify the Session object in the cache</p>\n<p><tt class=\"docutils literal\">uri</tt> to send the DELETE request to</p>\n<dl class=\"docutils\">\n<dt><tt class=\"docutils literal\">json</tt> a value that will be json encoded</dt>\n<dd>and sent as request data if data is not specified</dd>\n</dl>\n<p><tt class=\"docutils literal\">headers</tt> a dictionary of headers to use with the request</p>\n<p><tt class=\"docutils literal\">allow_redirects</tt> Boolean. Set to True if POST/PUT/DELETE redirect following is allowed.</p>\n<p><tt class=\"docutils literal\">timeout</tt> connection timeout</p>\n</div>\n",
      "shortdoc": "*DEPRECATED* Please use `DELETE On Session` instead.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/DeprecatedKeywords.py",
      "lineno": 261
    },
    {
      "name": "Download",
      "args": [
        {
          "name": "url",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "url: str"
        },
        {
          "name": "target_file",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "target_file: str | None = None"
        },
        {
          "name": "verify",
          "types": [
            "bool",
            "str"
          ],
          "typedocs": {
            "bool": "boolean",
            "str": "string"
          },
          "defaultValue": "True",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "verify: bool | str = True"
        },
        {
          "name": "force_new_session",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "force_new_session: bool = False"
        },
        {
          "name": "overwrite",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "overwrite: bool = False"
        },
        {
          "name": "stream",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "stream: bool = False"
        },
        {
          "name": "kwargs",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_NAMED",
          "required": false,
          "repr": "**kwargs"
        }
      ],
      "doc": "<div class=\"document\">\n<p>An alias for the <tt class=\"docutils literal\">HTTP Get</tt> keyword.</p>\n<p>The difference in use is that the URL is always downloaded based on\nthe URL path (even without <tt class=\"docutils literal\">target_file</tt>). If there is a filename\nin the path, then that is used as <tt class=\"docutils literal\">target_file</tt> to save to. By default,\nthe filename will be &quot;downloaded.html&quot;.</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Settings ***</span><span class=\"p\">\n</span><span class=\"kn\">Library</span><span class=\"p\">    </span><span class=\"nn\">RPA.HTTP</span><span class=\"p\">\n\n</span><span class=\"gh\">*** Variables ***</span><span class=\"p\">\n${</span><span class=\"nv\">DOWNLOAD_PATH</span><span class=\"p\">}=   ${</span><span class=\"nv\">OUTPUT DIR</span><span class=\"p\">}${</span><span class=\"nv\">/</span><span class=\"p\">}</span><span class=\"s\">downloads</span><span class=\"p\">\n${</span><span class=\"nv\">WORD_EXAMPLE</span><span class=\"p\">}=    </span><span class=\"s\">https://file-examples.com/wp-content/uploads/2017/02/file-sample_100kB.doc</span><span class=\"p\">\n${</span><span class=\"nv\">EXCEL_EXAMPLE</span><span class=\"p\">}=   </span><span class=\"s\">https://file-examples.com/wp-content/uploads/2017/02/file_example_XLS_10.xls</span><span class=\"p\">\n\n</span><span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Download files with reused session with provided file names</span><span class=\"p\">\n    </span><span class=\"c\"># Starts a new session\n</span><span class=\"p\">    </span><span class=\"nf\">Download</span><span class=\"p\">    ${</span><span class=\"nv\">WORD_EXAMPLE</span><span class=\"p\">}    </span><span class=\"s\">target_file=</span><span class=\"p\">${</span><span class=\"nv\">DOWNLOAD_PATH</span><span class=\"p\">}\n    </span><span class=\"c\"># Uses the previous session\n</span><span class=\"p\">    </span><span class=\"nf\">Download</span><span class=\"p\">    ${</span><span class=\"nv\">EXCEL_EXAMPLE</span><span class=\"p\">}    </span><span class=\"s\">target_file=</span><span class=\"p\">${</span><span class=\"nv\">DOWNLOAD_PATH</span><span class=\"p\">}\n    </span><span class=\"c\"># Above files are downloaded using the same names as they have\n</span><span class=\"p\">    </span><span class=\"c\"># on the remote server.</span>\n</pre>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param url:</th><td class=\"field-body\">target URL for GET request</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param target_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">filepath to save request content, default <tt class=\"docutils literal\">None</tt></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param verify:</th><td class=\"field-body\">if SSL verification should be done, default <tt class=\"docutils literal\">True</tt>,\na CA_BUNDLE path can also be provided</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param force_new_session:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">if new HTTP session should be created,\ndefault <tt class=\"docutils literal\">False</tt></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param overwrite:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">used together with <tt class=\"docutils literal\">target_file</tt>, if <tt class=\"docutils literal\">True</tt> will overwrite\nthe target file, default <tt class=\"docutils literal\">False</tt></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param stream:</th><td class=\"field-body\">if <tt class=\"docutils literal\">False</tt> the response content will be immediately downloaded</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">request response as a dict</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "An alias for the ``HTTP Get`` keyword.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/HTTP.py",
      "lineno": 188
    },
    {
      "name": "GET",
      "args": [
        {
          "name": "args",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_POSITIONAL",
          "required": false,
          "repr": "*args"
        },
        {
          "name": "kwargs",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_NAMED",
          "required": false,
          "repr": "**kwargs"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Sends a GET request.</p>\n<p>The endpoint used to retrieve the resource is the <tt class=\"docutils literal\">url</tt>, while query\nstring parameters can be passed as string, dictionary (or list of tuples or bytes)\nthrough the <tt class=\"docutils literal\">params</tt>.</p>\n<p>By default this keyword fails if a status code with error values is returned in the response,\nthis behavior can be modified using the <tt class=\"docutils literal\">expected_status</tt> and <tt class=\"docutils literal\">msg</tt> parameters,\nread more about it in <cite>Status Should Be</cite> keyword documentation.\nIn order to disable this implicit assert mechanism you can pass as <tt class=\"docutils literal\">expected_status</tt> the values <tt class=\"docutils literal\">any</tt> or\n<tt class=\"docutils literal\">anything</tt>.</p>\n<p>Other optional requests arguments can be passed using <tt class=\"docutils literal\">**kwargs</tt> here is a list:</p>\n<div class=\"line-block\">\n<div class=\"line\"><tt class=\"docutils literal\">data</tt>     | Dictionary, list of tuples, bytes, or file-like object to send in the body of the request. |</div>\n<div class=\"line\"><tt class=\"docutils literal\">json</tt>     | A JSON serializable Python object to send in the body of the request. |</div>\n<div class=\"line\"><tt class=\"docutils literal\">headers</tt>  | Dictionary of HTTP Headers to send with the request. |</div>\n<div class=\"line\"><tt class=\"docutils literal\">cookies</tt>  | Dict or CookieJar object to send with the request. |</div>\n<div class=\"line\"><tt class=\"docutils literal\">files</tt>    | Dictionary of file-like-objects (or <tt class=\"docutils literal\">{'name': <span class=\"pre\">file-tuple}</span></tt>) for multipart encoding upload. |</div>\n<div class=\"line\"><tt class=\"docutils literal\"><span class=\"pre\">file-tuple</span></tt> | can be a 2-tuple <tt class=\"docutils literal\">('filename', fileobj)</tt>, 3-tuple <tt class=\"docutils literal\">('filename', fileobj, 'content_type')</tt> or a 4-tuple <tt class=\"docutils literal\">('filename', fileobj, 'content_type', custom_headers)</tt>, where <tt class=\"docutils literal\"><span class=\"pre\">'content-type'</span></tt> is a string defining the content type of the given file and <tt class=\"docutils literal\">custom_headers</tt> a dict-like object containing additional headers to add for the file. |</div>\n<div class=\"line\"><tt class=\"docutils literal\">auth</tt> | Auth tuple to enable Basic/Digest/Custom HTTP Auth. |</div>\n<div class=\"line\"><tt class=\"docutils literal\">timeout</tt> | How many seconds to wait for the server to send data before giving up, as a float, or a <tt class=\"docutils literal\">(connect timeout, read timeout)</tt> tuple. |</div>\n<div class=\"line\"><tt class=\"docutils literal\">allow_redirects</tt> | Boolean. Enable/disable GET/OPTIONS/POST/PUT/PATCH/DELETE/HEAD redirection. Defaults to <tt class=\"docutils literal\">${True}</tt>. |</div>\n<div class=\"line\"><tt class=\"docutils literal\">proxies</tt> | Dictionary mapping protocol or protocol and host to the URL of the proxy (e.g. {'http': 'foo.bar:3128', 'http://host.name': 'foo.bar:4012'}) |</div>\n<div class=\"line\"><tt class=\"docutils literal\">verify</tt>  | Either a boolean, in which case it controls whether we verify the server's TLS certificate, or a string, in which case it must be a path to a CA bundle to use. Defaults to <tt class=\"docutils literal\">${True}</tt>. Warning: if a session has been created with <tt class=\"docutils literal\"><span class=\"pre\">verify=${False}</span></tt> any other requests will not verify the SSL certificate. |</div>\n<div class=\"line\"><tt class=\"docutils literal\">stream</tt> | if <tt class=\"docutils literal\">${False}</tt>, the response content will be immediately downloaded. |</div>\n<div class=\"line\"><tt class=\"docutils literal\">cert</tt> | if String, path to ssl client cert file (.pem). If Tuple, ('cert', 'key') pair. |</div>\n</div>\n<p>For more updated and complete information verify the official Requests api documentation:\n<a class=\"reference external\" href=\"https://requests.readthedocs.io/en/latest/api/\">https://requests.readthedocs.io/en/latest/api/</a></p>\n</div>\n",
      "shortdoc": "Sends a GET request.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/utils.py",
      "lineno": 136
    },
    {
      "name": "Get Current Session Alias",
      "args": [],
      "doc": "<div class=\"document\">\n<p>Get request session alias that was used with the <tt class=\"docutils literal\">HTTP Get</tt> keyword.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">name of session alias as a string</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Get request session alias that was used with the ``HTTP Get`` keyword.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/HTTP.py",
      "lineno": 181
    },
    {
      "name": "Get File For Streaming Upload",
      "args": [
        {
          "name": "path",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "path"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Opens and returns a file descriptor of a specified file to be passed as <tt class=\"docutils literal\">data</tt> parameter\nto other requests keywords.</p>\n<p>This allows streaming upload of large files without reading them into memory.</p>\n<p>File descriptor is binary mode and read only. Requests keywords will automatically close the file,\nif used outside this library it's up to the caller to close it.</p>\n</div>\n",
      "shortdoc": "Opens and returns a file descriptor of a specified file to be passed as ``data`` parameter to other requests keywords.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/RequestsKeywords.py",
      "lineno": 142
    },
    {
      "name": "GET On Session",
      "args": [
        {
          "name": "args",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_POSITIONAL",
          "required": false,
          "repr": "*args"
        },
        {
          "name": "kwargs",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_NAMED",
          "required": false,
          "repr": "**kwargs"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Sends a GET request on a previously created HTTP Session.</p>\n<p>Session will be identified using the <tt class=\"docutils literal\">alias</tt> name.\nThe endpoint used to retrieve the resource is the <tt class=\"docutils literal\">url</tt>, while query\nstring parameters can be passed as string, dictionary (or list of tuples or bytes)\nthrough the <tt class=\"docutils literal\">params</tt>.</p>\n<p>By default this keyword fails if a status code with error values is returned in the response,\nthis behavior can be modified using the <tt class=\"docutils literal\">expected_status</tt> and <tt class=\"docutils literal\">msg</tt> parameters,\nread more about it in <cite>Status Should Be</cite> keyword documentation.\nIn order to disable this implicit assert mechanism you can pass as <tt class=\"docutils literal\">expected_status</tt> the values <tt class=\"docutils literal\">any</tt> or\n<tt class=\"docutils literal\">anything</tt>.</p>\n<p>Other optional requests arguments can be passed using <tt class=\"docutils literal\">**kwargs</tt>\nsee the <cite>GET</cite> keyword for the complete list.</p>\n</div>\n",
      "shortdoc": "Sends a GET request on a previously created HTTP Session.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/utils.py",
      "lineno": 149
    },
    {
      "name": "Get Request",
      "args": [
        {
          "name": "alias",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "alias"
        },
        {
          "name": "uri",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "uri"
        },
        {
          "name": "headers",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "headers=None"
        },
        {
          "name": "data",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "data=None"
        },
        {
          "name": "json",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "json=None"
        },
        {
          "name": "params",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "params=None"
        },
        {
          "name": "allow_redirects",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "allow_redirects=None"
        },
        {
          "name": "timeout",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "timeout=None"
        }
      ],
      "doc": "<div class=\"document\">\n<p><em>DEPRECATED</em> Please use <cite>GET On Session</cite> instead.</p>\n<p>Send a GET request on the session object found using the\ngiven <cite>alias</cite></p>\n<p><tt class=\"docutils literal\">alias</tt> that will be used to identify the Session object in the cache</p>\n<p><tt class=\"docutils literal\">uri</tt> to send the GET request to</p>\n<p><tt class=\"docutils literal\">params</tt> url parameters to append to the uri</p>\n<p><tt class=\"docutils literal\">headers</tt> a dictionary of headers to use with the request</p>\n<dl class=\"docutils\">\n<dt><tt class=\"docutils literal\">data</tt> a dictionary of key-value pairs that will be urlencoded</dt>\n<dd>and sent as GET data\nor binary data that is sent as the raw body content</dd>\n<dt><tt class=\"docutils literal\">json</tt> a value that will be json encoded</dt>\n<dd>and sent as GET data if data is not specified</dd>\n</dl>\n<p><tt class=\"docutils literal\">allow_redirects</tt> Boolean. Set to True if POST/PUT/DELETE redirect following is allowed.</p>\n<p><tt class=\"docutils literal\">timeout</tt> connection timeout</p>\n</div>\n",
      "shortdoc": "*DEPRECATED* Please use `GET On Session` instead.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/DeprecatedKeywords.py",
      "lineno": 36
    },
    {
      "name": "HEAD",
      "args": [
        {
          "name": "args",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_POSITIONAL",
          "required": false,
          "repr": "*args"
        },
        {
          "name": "kwargs",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_NAMED",
          "required": false,
          "repr": "**kwargs"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Sends a HEAD request.</p>\n<p>The endpoint used to retrieve the HTTP headers is the <tt class=\"docutils literal\">url</tt>.</p>\n<p><tt class=\"docutils literal\">allow_redirects</tt> parameter is not provided, it will be set to <cite>False</cite> (as\nopposed to the default behavior).</p>\n<p>By default this keyword fails if a status code with error values is returned in the response,\nthis behavior can be modified using the <tt class=\"docutils literal\">expected_status</tt> and <tt class=\"docutils literal\">msg</tt> parameters,\nread more about it in <cite>Status Should Be</cite> keyword documentation.\nIn order to disable this implicit assert mechanism you can pass as <tt class=\"docutils literal\">expected_status</tt> the values <tt class=\"docutils literal\">any</tt> or\n<tt class=\"docutils literal\">anything</tt>.</p>\n<p>Other optional requests arguments can be passed using <tt class=\"docutils literal\">**kwargs</tt>\nsee the <cite>GET</cite> keyword for the complete list.</p>\n</div>\n",
      "shortdoc": "Sends a HEAD request.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/utils.py",
      "lineno": 136
    },
    {
      "name": "HEAD On Session",
      "args": [
        {
          "name": "args",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_POSITIONAL",
          "required": false,
          "repr": "*args"
        },
        {
          "name": "kwargs",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_NAMED",
          "required": false,
          "repr": "**kwargs"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Sends a HEAD request on a previously created HTTP Session.</p>\n<p>Session will be identified using the <tt class=\"docutils literal\">alias</tt> name.\nThe endpoint used to retrieve the HTTP headers is the <tt class=\"docutils literal\">url</tt>.</p>\n<p><tt class=\"docutils literal\">allow_redirects</tt> parameter is not provided, it will be set to <cite>False</cite> (as\nopposed to the default behavior).</p>\n<p>By default this keyword fails if a status code with error values is returned in the response,\nthis behavior can be modified using the <tt class=\"docutils literal\">expected_status</tt> and <tt class=\"docutils literal\">msg</tt> parameters,\nread more about it in <cite>Status Should Be</cite> keyword documentation.\nIn order to disable this implicit assert mechanism you can pass as <tt class=\"docutils literal\">expected_status</tt> the values <tt class=\"docutils literal\">any</tt> or\n<tt class=\"docutils literal\">anything</tt>.</p>\n<p>Other optional requests arguments can be passed using <tt class=\"docutils literal\">**kwargs</tt>\nsee the <cite>GET</cite> keyword for the complete list.</p>\n</div>\n",
      "shortdoc": "Sends a HEAD request on a previously created HTTP Session.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/utils.py",
      "lineno": 149
    },
    {
      "name": "Head Request",
      "args": [
        {
          "name": "alias",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "alias"
        },
        {
          "name": "uri",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "uri"
        },
        {
          "name": "headers",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "headers=None"
        },
        {
          "name": "allow_redirects",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "allow_redirects=None"
        },
        {
          "name": "timeout",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "timeout=None"
        }
      ],
      "doc": "<div class=\"document\">\n<p><em>DEPRECATED</em> Please use <cite>HEAD On Session</cite> instead.</p>\n<p>Send a HEAD request on the session object found using the\ngiven <cite>alias</cite></p>\n<p><tt class=\"docutils literal\">alias</tt> that will be used to identify the Session object in the cache</p>\n<p><tt class=\"docutils literal\">uri</tt> to send the HEAD request to</p>\n<p><tt class=\"docutils literal\">allow_redirects</tt> Boolean. Set to True if POST/PUT/DELETE redirect following is allowed.</p>\n<p><tt class=\"docutils literal\">headers</tt> a dictionary of headers to use with the request</p>\n<p><tt class=\"docutils literal\">timeout</tt> connection timeout</p>\n</div>\n",
      "shortdoc": "*DEPRECATED* Please use `HEAD On Session` instead.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/DeprecatedKeywords.py",
      "lineno": 308
    },
    {
      "name": "Http Get",
      "args": [
        {
          "name": "url",
          "types": [
            "str"
          ],
          "typedocs": {
            "str": "string"
          },
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "url: str"
        },
        {
          "name": "target_file",
          "types": [
            "str",
            "None"
          ],
          "typedocs": {
            "str": "string",
            "None": "None"
          },
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "target_file: str | None = None"
        },
        {
          "name": "verify",
          "types": [
            "bool",
            "str"
          ],
          "typedocs": {
            "bool": "boolean",
            "str": "string"
          },
          "defaultValue": "True",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "verify: bool | str = True"
        },
        {
          "name": "force_new_session",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "force_new_session: bool = False"
        },
        {
          "name": "overwrite",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "overwrite: bool = False"
        },
        {
          "name": "stream",
          "types": [
            "bool"
          ],
          "typedocs": {
            "bool": "boolean"
          },
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "stream: bool = False"
        },
        {
          "name": "kwargs",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_NAMED",
          "required": false,
          "repr": "**kwargs"
        }
      ],
      "doc": "<div class=\"document\">\n<p>A helper method for <tt class=\"docutils literal\">Get Request</tt> that will create a session, perform GET\nrequest, and store the target file, if set by the <tt class=\"docutils literal\">target_file</tt> parameter.</p>\n<p>The old session will be used if the URL scheme and the host are the same as\npreviously, e.g., '<a class=\"reference external\" href=\"https://www.google.fi\">https://www.google.fi</a>' part of the URL.</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Settings ***</span><span class=\"p\">\n</span><span class=\"kn\">Library</span><span class=\"p\">    </span><span class=\"nn\">RPA.HTTP</span><span class=\"p\">\n\n</span><span class=\"gh\">*** Variables ***</span><span class=\"p\">\n${</span><span class=\"nv\">DOWNLOAD_PATH</span><span class=\"p\">}=   ${</span><span class=\"nv\">OUTPUT DIR</span><span class=\"p\">}${</span><span class=\"nv\">/</span><span class=\"p\">}</span><span class=\"s\">downloads</span><span class=\"p\">\n${</span><span class=\"nv\">WORD_EXAMPLE</span><span class=\"p\">}=    </span><span class=\"s\">https://file-examples.com/wp-content/uploads/2017/02/file-sample_100kB.doc</span><span class=\"p\">\n${</span><span class=\"nv\">EXCEL_EXAMPLE</span><span class=\"p\">}=   </span><span class=\"s\">https://file-examples.com/wp-content/uploads/2017/02/file_example_XLS_10.xls</span><span class=\"p\">\n\n</span><span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Download files with reused session</span><span class=\"p\">\n    </span><span class=\"c\"># Starts a new session\n</span><span class=\"p\">    </span><span class=\"nf\">HTTP Get</span><span class=\"p\">    ${</span><span class=\"nv\">WORD_EXAMPLE</span><span class=\"p\">}    </span><span class=\"s\">target_file=</span><span class=\"p\">${</span><span class=\"nv\">DOWNLOAD_PATH</span><span class=\"p\">}${</span><span class=\"nv\">/</span><span class=\"p\">}</span><span class=\"s\">word-example.doc</span><span class=\"p\">\n    </span><span class=\"c\"># Uses the previous session\n</span><span class=\"p\">    </span><span class=\"nf\">HTTP Get</span><span class=\"p\">    ${</span><span class=\"nv\">EXCEL_EXAMPLE</span><span class=\"p\">}    </span><span class=\"s\">target_file=</span><span class=\"p\">${</span><span class=\"nv\">DOWNLOAD_PATH</span><span class=\"p\">}${</span><span class=\"nv\">/</span><span class=\"p\">}</span><span class=\"s\">excel-example.xls</span>\n</pre>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param url:</th><td class=\"field-body\">target URL for GET request</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param target_file:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">filepath to save request content, default <tt class=\"docutils literal\">None</tt></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param verify:</th><td class=\"field-body\">if SSL verification should be done, default <tt class=\"docutils literal\">True</tt>,\na CA_BUNDLE path can also be provided</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param force_new_session:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">if new HTTP session should be created,\ndefault <tt class=\"docutils literal\">False</tt></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param overwrite:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">used together with <tt class=\"docutils literal\">target_file</tt>, if <tt class=\"docutils literal\">True</tt> will overwrite\nthe target file, default <tt class=\"docutils literal\">False</tt></td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param stream:</th><td class=\"field-body\">if <tt class=\"docutils literal\">False</tt>, the response content will be immediately downloaded</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">request response as a dict</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "A helper method for ``Get Request`` that will create a session, perform GET request, and store the target file, if set by the ``target_file`` parameter.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RPA/HTTP.py",
      "lineno": 98
    },
    {
      "name": "OPTIONS",
      "args": [
        {
          "name": "args",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_POSITIONAL",
          "required": false,
          "repr": "*args"
        },
        {
          "name": "kwargs",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_NAMED",
          "required": false,
          "repr": "**kwargs"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Sends a OPTIONS request.</p>\n<p>The endpoint used to retrieve the resource is the <tt class=\"docutils literal\">url</tt>.</p>\n<p>By default this keyword fails if a status code with error values is returned in the response,\nthis behavior can be modified using the <tt class=\"docutils literal\">expected_status</tt> and <tt class=\"docutils literal\">msg</tt> parameters,\nread more about it in <cite>Status Should Be</cite> keyword documentation.\nIn order to disable this implicit assert mechanism you can pass as <tt class=\"docutils literal\">expected_status</tt> the values <tt class=\"docutils literal\">any</tt> or\n<tt class=\"docutils literal\">anything</tt>.</p>\n<p>Other optional requests arguments can be passed using <tt class=\"docutils literal\">**kwargs</tt>\nsee the <cite>GET</cite> keyword for the complete list.</p>\n</div>\n",
      "shortdoc": "Sends a OPTIONS request.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/utils.py",
      "lineno": 136
    },
    {
      "name": "OPTIONS On Session",
      "args": [
        {
          "name": "args",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_POSITIONAL",
          "required": false,
          "repr": "*args"
        },
        {
          "name": "kwargs",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_NAMED",
          "required": false,
          "repr": "**kwargs"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Sends a OPTIONS request on a previously created HTTP Session.</p>\n<p>Session will be identified using the <tt class=\"docutils literal\">alias</tt> name.\nThe endpoint used to retrieve the resource is the <tt class=\"docutils literal\">url</tt>.</p>\n<p>By default this keyword fails if a status code with error values is returned in the response,\nthis behavior can be modified using the <tt class=\"docutils literal\">expected_status</tt> and <tt class=\"docutils literal\">msg</tt> parameters,\nread more about it in <cite>Status Should Be</cite> keyword documentation.\nIn order to disable this implicit assert mechanism you can pass as <tt class=\"docutils literal\">expected_status</tt> the values <tt class=\"docutils literal\">any</tt> or\n<tt class=\"docutils literal\">anything</tt>.</p>\n<p>Other optional requests arguments can be passed using <tt class=\"docutils literal\">**kwargs</tt>\nsee the <cite>GET</cite> keyword for the complete list.</p>\n</div>\n",
      "shortdoc": "Sends a OPTIONS request on a previously created HTTP Session.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/utils.py",
      "lineno": 149
    },
    {
      "name": "Options Request",
      "args": [
        {
          "name": "alias",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "alias"
        },
        {
          "name": "uri",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "uri"
        },
        {
          "name": "headers",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "headers=None"
        },
        {
          "name": "allow_redirects",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "allow_redirects=None"
        },
        {
          "name": "timeout",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "timeout=None"
        }
      ],
      "doc": "<div class=\"document\">\n<p><em>DEPRECATED</em> Please use <cite>OPTIONS On Session</cite> instead.</p>\n<p>Send an OPTIONS request on the session object found using the\ngiven <cite>alias</cite></p>\n<p><tt class=\"docutils literal\">alias</tt> that will be used to identify the Session object in the cache</p>\n<p><tt class=\"docutils literal\">uri</tt> to send the OPTIONS request to</p>\n<p><tt class=\"docutils literal\">allow_redirects</tt> Boolean. Set to True if POST/PUT/DELETE redirect following is allowed.</p>\n<p><tt class=\"docutils literal\">headers</tt> a dictionary of headers to use with the request</p>\n<p><tt class=\"docutils literal\">timeout</tt> connection timeout</p>\n</div>\n",
      "shortdoc": "*DEPRECATED* Please use `OPTIONS On Session` instead.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/DeprecatedKeywords.py",
      "lineno": 344
    },
    {
      "name": "PATCH",
      "args": [
        {
          "name": "args",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_POSITIONAL",
          "required": false,
          "repr": "*args"
        },
        {
          "name": "kwargs",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_NAMED",
          "required": false,
          "repr": "**kwargs"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Sends a PUT request.</p>\n<p>The endpoint used to send the request is the <tt class=\"docutils literal\">url</tt> parameter, while its body\ncan be passed using <tt class=\"docutils literal\">data</tt> or <tt class=\"docutils literal\">json</tt> parameters.</p>\n<p><tt class=\"docutils literal\">data</tt> can be a dictionary, list of tuples, bytes, or file-like object.\nIf you want to pass a json body pass a dictionary as <tt class=\"docutils literal\">json</tt> parameter.</p>\n<p>By default this keyword fails if a status code with error values is returned in the response,\nthis behavior can be modified using the <tt class=\"docutils literal\">expected_status</tt> and <tt class=\"docutils literal\">msg</tt> parameters,\nread more about it in <cite>Status Should Be</cite> keyword documentation.\nIn order to disable this implicit assert mechanism you can pass as <tt class=\"docutils literal\">expected_status</tt> the values <tt class=\"docutils literal\">any</tt> or\n<tt class=\"docutils literal\">anything</tt>.</p>\n<p>Other optional requests arguments can be passed using <tt class=\"docutils literal\">**kwargs</tt>\nsee the <cite>GET</cite> keyword for the complete list.</p>\n</div>\n",
      "shortdoc": "Sends a PUT request.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/utils.py",
      "lineno": 136
    },
    {
      "name": "PATCH On Session",
      "args": [
        {
          "name": "args",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_POSITIONAL",
          "required": false,
          "repr": "*args"
        },
        {
          "name": "kwargs",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_NAMED",
          "required": false,
          "repr": "**kwargs"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Sends a PATCH request on a previously created HTTP Session.</p>\n<p>Session will be identified using the <tt class=\"docutils literal\">alias</tt> name.\nThe endpoint used to send the request is the <tt class=\"docutils literal\">url</tt> parameter, while its body\ncan be passed using <tt class=\"docutils literal\">data</tt> or <tt class=\"docutils literal\">json</tt> parameters.</p>\n<p><tt class=\"docutils literal\">data</tt> can be a dictionary, list of tuples, bytes, or file-like object.\nIf you want to pass a json body pass a dictionary as <tt class=\"docutils literal\">json</tt> parameter.</p>\n<p>By default this keyword fails if a status code with error values is returned in the response,\nthis behavior can be modified using the <tt class=\"docutils literal\">expected_status</tt> and <tt class=\"docutils literal\">msg</tt> parameters,\nread more about it in <cite>Status Should Be</cite> keyword documentation.\nIn order to disable this implicit assert mechanism you can pass as <tt class=\"docutils literal\">expected_status</tt> the values <tt class=\"docutils literal\">any</tt> or\n<tt class=\"docutils literal\">anything</tt>.</p>\n<p>Other optional requests arguments can be passed using <tt class=\"docutils literal\">**kwargs</tt>\nsee the <cite>GET</cite> keyword for the complete list.</p>\n</div>\n",
      "shortdoc": "Sends a PATCH request on a previously created HTTP Session.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/utils.py",
      "lineno": 149
    },
    {
      "name": "Patch Request",
      "args": [
        {
          "name": "alias",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "alias"
        },
        {
          "name": "uri",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "uri"
        },
        {
          "name": "data",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "data=None"
        },
        {
          "name": "json",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "json=None"
        },
        {
          "name": "params",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "params=None"
        },
        {
          "name": "headers",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "headers=None"
        },
        {
          "name": "files",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "files=None"
        },
        {
          "name": "allow_redirects",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "allow_redirects=None"
        },
        {
          "name": "timeout",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "timeout=None"
        }
      ],
      "doc": "<div class=\"document\">\n<p><em>DEPRECATED</em> Please use <cite>PATCH On Session</cite> instead.</p>\n<p>Send a PATCH request on the session object found using the\ngiven <cite>alias</cite></p>\n<p><tt class=\"docutils literal\">alias</tt> that will be used to identify the Session object in the cache</p>\n<p><tt class=\"docutils literal\">uri</tt> to send the PATCH request to</p>\n<dl class=\"docutils\">\n<dt><tt class=\"docutils literal\">data</tt> a dictionary of key-value pairs that will be urlencoded</dt>\n<dd>and sent as PATCH data\nor binary data that is sent as the raw body content\nor file descriptor retrieved by Get File For Streaming Upload</dd>\n<dt><tt class=\"docutils literal\">json</tt> a value that will be json encoded</dt>\n<dd>and sent as PATCH data if data is not specified</dd>\n</dl>\n<p><tt class=\"docutils literal\">headers</tt> a dictionary of headers to use with the request</p>\n<p><tt class=\"docutils literal\">files</tt> a dictionary of file names containing file data to PATCH to the server</p>\n<p><tt class=\"docutils literal\">allow_redirects</tt> Boolean. Set to True if POST/PUT/DELETE redirect following is allowed.</p>\n<p><tt class=\"docutils literal\">params</tt> url parameters to append to the uri</p>\n<p><tt class=\"docutils literal\">timeout</tt> connection timeout</p>\n</div>\n",
      "shortdoc": "*DEPRECATED* Please use `PATCH On Session` instead.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/DeprecatedKeywords.py",
      "lineno": 147
    },
    {
      "name": "POST",
      "args": [
        {
          "name": "args",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_POSITIONAL",
          "required": false,
          "repr": "*args"
        },
        {
          "name": "kwargs",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_NAMED",
          "required": false,
          "repr": "**kwargs"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Sends a POST request.</p>\n<p>The endpoint used to send the request is the <tt class=\"docutils literal\">url</tt> parameter, while its body\ncan be passed using <tt class=\"docutils literal\">data</tt> or <tt class=\"docutils literal\">json</tt> parameters.</p>\n<p><tt class=\"docutils literal\">data</tt> can be a dictionary, list of tuples, bytes, or file-like object.\nIf you want to pass a json body pass a dictionary as <tt class=\"docutils literal\">json</tt> parameter.</p>\n<p>By default this keyword fails if a status code with error values is returned in the response,\nthis behavior can be modified using the <tt class=\"docutils literal\">expected_status</tt> and <tt class=\"docutils literal\">msg</tt> parameters,\nread more about it in <cite>Status Should Be</cite> keyword documentation.\nIn order to disable this implicit assert mechanism you can pass as <tt class=\"docutils literal\">expected_status</tt> the values <tt class=\"docutils literal\">any</tt> or\n<tt class=\"docutils literal\">anything</tt>.</p>\n<p>Other optional requests arguments can be passed using <tt class=\"docutils literal\">**kwargs</tt>\nsee the <cite>GET</cite> keyword for the complete list.</p>\n</div>\n",
      "shortdoc": "Sends a POST request.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/utils.py",
      "lineno": 136
    },
    {
      "name": "POST On Session",
      "args": [
        {
          "name": "args",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_POSITIONAL",
          "required": false,
          "repr": "*args"
        },
        {
          "name": "kwargs",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_NAMED",
          "required": false,
          "repr": "**kwargs"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Sends a POST request on a previously created HTTP Session.</p>\n<p>Session will be identified using the <tt class=\"docutils literal\">alias</tt> name.\nThe endpoint used to send the request is the <tt class=\"docutils literal\">url</tt> parameter, while its body\ncan be passed using <tt class=\"docutils literal\">data</tt> or <tt class=\"docutils literal\">json</tt> parameters.</p>\n<p><tt class=\"docutils literal\">data</tt> can be a dictionary, list of tuples, bytes, or file-like object.\nIf you want to pass a json body pass a dictionary as <tt class=\"docutils literal\">json</tt> parameter.</p>\n<p>By default this keyword fails if a status code with error values is returned in the response,\nthis behavior can be modified using the <tt class=\"docutils literal\">expected_status</tt> and <tt class=\"docutils literal\">msg</tt> parameters,\nread more about it in <cite>Status Should Be</cite> keyword documentation.\nIn order to disable this implicit assert mechanism you can pass as <tt class=\"docutils literal\">expected_status</tt> the values <tt class=\"docutils literal\">any</tt> or\n<tt class=\"docutils literal\">anything</tt>.</p>\n<p>Other optional requests arguments can be passed using <tt class=\"docutils literal\">**kwargs</tt>\nsee the <cite>GET</cite> keyword for the complete list.</p>\n</div>\n",
      "shortdoc": "Sends a POST request on a previously created HTTP Session.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/utils.py",
      "lineno": 149
    },
    {
      "name": "Post Request",
      "args": [
        {
          "name": "alias",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "alias"
        },
        {
          "name": "uri",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "uri"
        },
        {
          "name": "data",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "data=None"
        },
        {
          "name": "json",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "json=None"
        },
        {
          "name": "params",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "params=None"
        },
        {
          "name": "headers",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "headers=None"
        },
        {
          "name": "files",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "files=None"
        },
        {
          "name": "allow_redirects",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "allow_redirects=None"
        },
        {
          "name": "timeout",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "timeout=None"
        }
      ],
      "doc": "<div class=\"document\">\n<p><em>DEPRECATED</em> Please use <cite>POST On Session</cite> instead.</p>\n<p>Send a POST request on the session object found using the\ngiven <cite>alias</cite></p>\n<p><tt class=\"docutils literal\">alias</tt> that will be used to identify the Session object in the cache</p>\n<p><tt class=\"docutils literal\">uri</tt> to send the POST request to</p>\n<dl class=\"docutils\">\n<dt><tt class=\"docutils literal\">data</tt> a dictionary of key-value pairs that will be urlencoded</dt>\n<dd>and sent as POST data\nor binary data that is sent as the raw body content\nor passed as such for multipart form data if <tt class=\"docutils literal\">files</tt> is also defined\nor file descriptor retrieved by Get File For Streaming Upload</dd>\n<dt><tt class=\"docutils literal\">json</tt> a value that will be json encoded</dt>\n<dd>and sent as POST data if files or data is not specified</dd>\n</dl>\n<p><tt class=\"docutils literal\">params</tt> url parameters to append to the uri</p>\n<p><tt class=\"docutils literal\">headers</tt> a dictionary of headers to use with the request</p>\n<p><tt class=\"docutils literal\">files</tt> a dictionary of file names containing file data to POST to the server</p>\n<p><tt class=\"docutils literal\">allow_redirects</tt> Boolean. Set to True if POST/PUT/DELETE redirect following is allowed.</p>\n<p><tt class=\"docutils literal\">timeout</tt> connection timeout</p>\n</div>\n",
      "shortdoc": "*DEPRECATED* Please use `POST On Session` instead.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/DeprecatedKeywords.py",
      "lineno": 88
    },
    {
      "name": "PUT",
      "args": [
        {
          "name": "args",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_POSITIONAL",
          "required": false,
          "repr": "*args"
        },
        {
          "name": "kwargs",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_NAMED",
          "required": false,
          "repr": "**kwargs"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Sends a PUT request.</p>\n<p>The endpoint used to send the request is the <tt class=\"docutils literal\">url</tt> parameter, while its body\ncan be passed using <tt class=\"docutils literal\">data</tt> or <tt class=\"docutils literal\">json</tt> parameters.</p>\n<p><tt class=\"docutils literal\">data</tt> can be a dictionary, list of tuples, bytes, or file-like object.\nIf you want to pass a json body pass a dictionary as <tt class=\"docutils literal\">json</tt> parameter.</p>\n<p>By default this keyword fails if a status code with error values is returned in the response,\nthis behavior can be modified using the <tt class=\"docutils literal\">expected_status</tt> and <tt class=\"docutils literal\">msg</tt> parameters,\nread more about it in <cite>Status Should Be</cite> keyword documentation.\nIn order to disable this implicit assert mechanism you can pass as <tt class=\"docutils literal\">expected_status</tt> the values <tt class=\"docutils literal\">any</tt> or\n<tt class=\"docutils literal\">anything</tt>.</p>\n<p>Other optional requests arguments can be passed using <tt class=\"docutils literal\">**kwargs</tt>\nsee the <cite>GET</cite> keyword for the complete list.</p>\n</div>\n",
      "shortdoc": "Sends a PUT request.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/utils.py",
      "lineno": 136
    },
    {
      "name": "PUT On Session",
      "args": [
        {
          "name": "args",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_POSITIONAL",
          "required": false,
          "repr": "*args"
        },
        {
          "name": "kwargs",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "VAR_NAMED",
          "required": false,
          "repr": "**kwargs"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Sends a PUT request on a previously created HTTP Session.</p>\n<p>Session will be identified using the <tt class=\"docutils literal\">alias</tt> name.\nThe endpoint used to send the request is the <tt class=\"docutils literal\">url</tt> parameter, while its body\ncan be passed using <tt class=\"docutils literal\">data</tt> or <tt class=\"docutils literal\">json</tt> parameters.</p>\n<p><tt class=\"docutils literal\">data</tt> can be a dictionary, list of tuples, bytes, or file-like object.\nIf you want to pass a json body pass a dictionary as <tt class=\"docutils literal\">json</tt> parameter.</p>\n<p>By default this keyword fails if a status code with error values is returned in the response,\nthis behavior can be modified using the <tt class=\"docutils literal\">expected_status</tt> and <tt class=\"docutils literal\">msg</tt> parameters,\nread more about it in <cite>Status Should Be</cite> keyword documentation.\nIn order to disable this implicit assert mechanism you can pass as <tt class=\"docutils literal\">expected_status</tt> the values <tt class=\"docutils literal\">any</tt> or\n<tt class=\"docutils literal\">anything</tt>.</p>\n<p>Other optional requests arguments can be passed using <tt class=\"docutils literal\">**kwargs</tt>\nsee the <cite>GET</cite> keyword for the complete list.</p>\n</div>\n",
      "shortdoc": "Sends a PUT request on a previously created HTTP Session.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/utils.py",
      "lineno": 149
    },
    {
      "name": "Put Request",
      "args": [
        {
          "name": "alias",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "alias"
        },
        {
          "name": "uri",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "uri"
        },
        {
          "name": "data",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "data=None"
        },
        {
          "name": "json",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "json=None"
        },
        {
          "name": "params",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "params=None"
        },
        {
          "name": "files",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "files=None"
        },
        {
          "name": "headers",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "headers=None"
        },
        {
          "name": "allow_redirects",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "allow_redirects=None"
        },
        {
          "name": "timeout",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "timeout=None"
        }
      ],
      "doc": "<div class=\"document\">\n<p><em>DEPRECATED</em> Please use <cite>PUT On Session</cite> instead.</p>\n<p>Send a PUT request on the session object found using the\ngiven <cite>alias</cite></p>\n<p><tt class=\"docutils literal\">alias</tt> that will be used to identify the Session object in the cache</p>\n<p><tt class=\"docutils literal\">uri</tt> to send the PUT request to</p>\n<dl class=\"docutils\">\n<dt><tt class=\"docutils literal\">data</tt> a dictionary of key-value pairs that will be urlencoded</dt>\n<dd>and sent as PUT data\nor binary data that is sent as the raw body content\nor file descriptor retrieved by Get File For Streaming Upload</dd>\n<dt><tt class=\"docutils literal\">json</tt> a value that will be json encoded</dt>\n<dd>and sent as PUT data if data is not specified</dd>\n</dl>\n<p><tt class=\"docutils literal\">headers</tt> a dictionary of headers to use with the request</p>\n<p><tt class=\"docutils literal\">allow_redirects</tt> Boolean. Set to True if POST/PUT/DELETE redirect following is allowed.</p>\n<p><tt class=\"docutils literal\">params</tt> url parameters to append to the uri</p>\n<p><tt class=\"docutils literal\">timeout</tt> connection timeout</p>\n</div>\n",
      "shortdoc": "*DEPRECATED* Please use `PUT On Session` instead.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/DeprecatedKeywords.py",
      "lineno": 205
    },
    {
      "name": "Request Should Be Successful",
      "args": [
        {
          "name": "response",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "response=None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Fails if response status code is a client or server error (4xx, 5xx).</p>\n<p><tt class=\"docutils literal\">response</tt> is the output of other requests keywords like <cite>GET On Session</cite>.\nIf omitted the last response will be used.</p>\n<p>In case of failure an HTTPError will be automatically raised.</p>\n<p>For a more versatile assert keyword see <cite>Status Should Be</cite>.</p>\n</div>\n",
      "shortdoc": "Fails if response status code is a client or server error (4xx, 5xx).",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/RequestsKeywords.py",
      "lineno": 125
    },
    {
      "name": "Session Exists",
      "args": [
        {
          "name": "alias",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "alias"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Return True if the session has been already created</p>\n<p><tt class=\"docutils literal\">alias</tt> that has been used to identify the Session object in the cache</p>\n</div>\n",
      "shortdoc": "Return True if the session has been already created",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/SessionKeywords.py",
      "lineno": 532
    },
    {
      "name": "Status Should Be",
      "args": [
        {
          "name": "expected_status",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "expected_status"
        },
        {
          "name": "response",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "response=None"
        },
        {
          "name": "msg",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "msg=None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Fails if response status code is different than the expected.</p>\n<p><tt class=\"docutils literal\">expected_status</tt> could be the code number as an integer or as string.\nBut it could also be a named status code like 'ok', 'created', 'accepted' or\n'bad request', 'not found' etc.</p>\n<p><tt class=\"docutils literal\">response</tt> is the output of other requests keywords like <cite>GET</cite> or <cite>GET On Session</cite>.\nIf omitted the last response will be used.</p>\n<p>In case of failure an HTTPError will be automatically raised.\nA custom failure message <tt class=\"docutils literal\">msg</tt> can be added like in built-in keywords.</p>\n<p>New requests keywords like <cite>GET</cite> or <cite>GET On Session</cite> (starting from 0.8 version) already have an implicit assert\nmechanism that, by default, verifies the response status code.\n<cite>Status Should Be</cite> keyword can be useful when you disable implicit assert using <tt class=\"docutils literal\">expected_status=anything</tt>.</p>\n<p>For example when you have a nested keyword that is used for both OK and ERROR responses:</p>\n<div class=\"line-block\">\n<div class=\"line\"><strong>* Test Cases *</strong></div>\n<div class=\"line\"><br /></div>\n<div class=\"line\">Test Get Request And Make Sure Is A 404 Response</div>\n<div class=\"line-block\">\n<div class=\"line\">${resp}=            GET Custom Keyword That Returns OK or ERROR Response  case=notfound</div>\n<div class=\"line\">Status Should Be    404    ${resp}</div>\n<div class=\"line\">Should Be Equal As Strings  NOT FOUND  ${resp.reason}</div>\n<div class=\"line\"><br /></div>\n</div>\n<div class=\"line\">Test Get Request And Make Sure Is OK</div>\n<div class=\"line-block\">\n<div class=\"line\">${resp}=            GET Custom Keyword That Returns OK or ERROR Response  case=pass</div>\n<div class=\"line\">Status Should Be    200    ${resp}</div>\n<div class=\"line\">Should Be Equal As Strings  OK  ${resp.reason}</div>\n<div class=\"line\"><br /></div>\n</div>\n<div class=\"line\"><strong>* Keywords *</strong></div>\n<div class=\"line\"><br /></div>\n<div class=\"line\">GET Custom Keyword That Returns OK or ERROR Response</div>\n<div class=\"line\">[Arguments]  $case</div>\n<div class=\"line-block\">\n<div class=\"line-block\">\n<div class=\"line\">[...]</div>\n</div>\n<div class=\"line\">IF $case == notfound</div>\n<div class=\"line-block\">\n<div class=\"line\">$resp=     GET [...] expected_status=Anything</div>\n<div class=\"line\">[Return]   $resp</div>\n</div>\n<div class=\"line\">ELSE</div>\n<div class=\"line-block\">\n<div class=\"line\">[...]</div>\n</div>\n</div>\n</div>\n</div>\n",
      "shortdoc": "Fails if response status code is different than the expected.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/RequestsKeywords.py",
      "lineno": 77
    },
    {
      "name": "To Json",
      "args": [
        {
          "name": "content",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "content"
        },
        {
          "name": "pretty_print",
          "types": [],
          "typedocs": {},
          "defaultValue": "False",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "pretty_print=False"
        }
      ],
      "doc": "<div class=\"document\">\n<p><em>DEPRECATED</em> Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</p>\n<p>Convert a string to a JSON object</p>\n<p><tt class=\"docutils literal\">content</tt> String content to convert into JSON</p>\n<p><tt class=\"docutils literal\">pretty_print</tt> If defined, will output JSON is pretty print format</p>\n</div>\n",
      "shortdoc": "*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/DeprecatedKeywords.py",
      "lineno": 15
    },
    {
      "name": "Update Session",
      "args": [
        {
          "name": "alias",
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "alias"
        },
        {
          "name": "headers",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "headers=None"
        },
        {
          "name": "cookies",
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "cookies=None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Updates HTTP Session Headers and Cookies.</p>\n<p>Session will be identified using the <tt class=\"docutils literal\">alias</tt> name.\nDictionary of <tt class=\"docutils literal\">headers</tt> and <tt class=\"docutils literal\">cookies</tt> to be updated and merged into session data.</p>\n</div>\n",
      "shortdoc": "Updates HTTP Session Headers and Cookies.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/.venv/lib/python3.10/site-packages/RequestsLibrary/SessionKeywords.py",
      "lineno": 552
    }
  ],
  "dataTypes": {
    "enums": [],
    "typedDicts": []
  },
  "typedocs": [
    {
      "type": "Standard",
      "name": "boolean",
      "doc": "<p>Strings <code>TRUE</code>, <code>YES</code>, <code>ON</code> and <code>1</code> are converted to Boolean <code>True</code>, the empty string as well as strings <code>FALSE</code>, <code>NO</code>, <code>OFF</code> and <code>0</code> are converted to Boolean <code>False</code>, and the string <code>NONE</code> is converted to the Python <code>None</code> object. Other strings and other accepted values are passed as-is, allowing keywords to handle them specially if needed. All string comparisons are case-insensitive.</p>\n<p>Examples: <code>TRUE</code> (converted to <code>True</code>), <code>off</code> (converted to <code>False</code>), <code>example</code> (used as-is)</p>",
      "usages": [
        "Download",
        "Http Get"
      ],
      "accepts": [
        "string",
        "integer",
        "float",
        "None"
      ]
    },
    {
      "type": "Standard",
      "name": "None",
      "doc": "<p>String <code>NONE</code> (case-insensitive) is converted to Python <code>None</code> object. Other values cause an error.</p>",
      "usages": [
        "Download",
        "Http Get"
      ],
      "accepts": [
        "string"
      ]
    },
    {
      "type": "Standard",
      "name": "string",
      "doc": "<p>All arguments are converted to Unicode strings.</p>",
      "usages": [
        "Download",
        "Http Get"
      ],
      "accepts": [
        "Any"
      ]
    }
  ]
}