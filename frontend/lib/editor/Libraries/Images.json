{
  "specversion": 2,
  "name": "Camunda.Images",
  "doc": "<div class=\"document\">\n<p><cite>Images</cite> is a library for general image manipulation.\nFor image-based desktop automation, use the <tt class=\"docutils literal\">Camunda.Desktop</tt> library.</p>\n<p><strong>Coordinates</strong></p>\n<p>The coordinates used in the library are pairs of x and y values that\nrepresent pixels. The upper left corner of the image or screen\nis (0, 0). The x-coordinate increases towards the right, and the y-coordinate\nincreases towards the bottom.</p>\n<p>Regions are represented as tuples of (left, top, right, bottom). For example,\na 400 by 200-pixel region in the upper left corner would be (0, 0, 400, 200).</p>\n<p><strong>Template matching</strong></p>\n<p>Template matching refers to an operation where the (potential) location of\na smaller image is searched from a larger image. It can be used for verifying\ncertain conditions or locating UI elements for desktop or web automation.</p>\n<p><strong>Requirements</strong></p>\n<p>The default installation depends on <a class=\"reference external\" href=\"https://python-pillow.org/\">Pillow</a>\nlibrary, which is used for general image manipulation operations.</p>\n<p>For more robust and faster template matching, the library can use a combination\nof <a class=\"reference external\" href=\"https://numpy.org/\">NumPy</a> and <a class=\"reference external\" href=\"https://opencv.org/\">OpenCV</a>.\nThey can be installed by opting in to the recognition dependency:</p>\n<p><tt class=\"docutils literal\">pip install rpaframework <span class=\"pre\">rpaframework-recognition</span></tt></p>\n<p><strong>Examples</strong></p>\n<p><strong>Robot Framework</strong></p>\n<p>The <cite>Images</cite> library can be imported and used directly in Robot Framework,\nfor instance, for capturing screenshots or verifying something on the screen.</p>\n<p>Desktop automation based on images should be done using the corresponding\ndesktop library, i.e. <tt class=\"docutils literal\">Camunda.Desktop</tt>.</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Settings ***</span><span class=\"p\">\n</span><span class=\"kn\">Library</span><span class=\"p\">    </span><span class=\"nn\">Camunda.Images</span><span class=\"p\">\n\n</span><span class=\"gh\">*** Keywords ***</span><span class=\"p\">\n</span><span class=\"gu\">Should show success</span><span class=\"p\">\n    [</span><span class=\"kn\">Documentation</span><span class=\"p\">]    </span><span class=\"s\">Raises ImageNotFoundError if success image is not on screen</span><span class=\"p\">\n    </span><span class=\"nf\">Find template on screen</span><span class=\"p\">    ${</span><span class=\"nv\">CURDIR</span><span class=\"p\">}${</span><span class=\"nv\">/</span><span class=\"p\">}</span><span class=\"s\">success.png</span><span class=\"p\">\n\n</span><span class=\"gu\">Save screenshot to results</span><span class=\"p\">\n    [</span><span class=\"kn\">Documentation</span><span class=\"p\">]    </span><span class=\"s\">Saves screenshot of desktop with unique name</span><span class=\"p\">\n    ${</span><span class=\"nv\">timestamp</span><span class=\"p\">}=      </span><span class=\"nf\">Get current date</span><span class=\"p\">    </span><span class=\"s\">result_format=%H%M%S</span><span class=\"p\">\n    </span><span class=\"nf\">Take screenshot</span><span class=\"p\">    </span><span class=\"s\">filename=</span><span class=\"p\">${</span><span class=\"nv\">OUTPUT_DIR</span><span class=\"p\">}${</span><span class=\"nv\">/</span><span class=\"p\">}</span><span class=\"s\">desktop_</span><span class=\"p\">${</span><span class=\"nv\">timestamp</span><span class=\"p\">}</span><span class=\"s\">.png</span>\n</pre>\n<p><strong>Python</strong></p>\n<pre class=\"code python literal-block\">\n<span class=\"kn\">from</span> <span class=\"nn\">Camunda.Images</span> <span class=\"kn\">import</span> <span class=\"n\">Images</span><span class=\"w\">\n\n</span><span class=\"k\">def</span> <span class=\"nf\">draw_matches_on_image</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"p\">):</span><span class=\"w\">\n</span>    <span class=\"n\">matches</span> <span class=\"o\">=</span> <span class=\"n\">lib</span><span class=\"o\">.</span><span class=\"n\">find_template_in_image</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"p\">)</span><span class=\"w\">\n</span>    <span class=\"k\">for</span> <span class=\"n\">match</span> <span class=\"ow\">in</span> <span class=\"n\">matches</span><span class=\"p\">:</span><span class=\"w\">\n</span>        <span class=\"n\">lib</span><span class=\"o\">.</span><span class=\"n\">show_region_in_image</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"p\">,</span> <span class=\"n\">match</span><span class=\"p\">)</span><span class=\"w\">\n\n</span>    <span class=\"n\">source</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s2\">&quot;matches.png&quot;</span><span class=\"p\">)</span>\n</pre>\n</div>\n",
  "version": "",
  "generated": "2025-02-03T12:59:54+00:00",
  "type": "LIBRARY",
  "scope": "GLOBAL",
  "docFormat": "HTML",
  "source": "/home/stamm/Develop/RPA/worker/runtime/.venv/lib/python3.10/site-packages/RPA/Images.py",
  "lineno": 68,
  "tags": [],
  "inits": [],
  "keywords": [
    {
      "name": "Crop Image",
      "args": [
        {
          "name": "image",
          "type": null,
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "image"
        },
        {
          "name": "region",
          "type": null,
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "region"
        },
        {
          "name": "filename",
          "type": null,
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "filename=None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Crop an existing image.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param image:</th><td class=\"field-body\">Image to crop</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param region:</th><td class=\"field-body\">Region to crop image to</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param filename:</th><td class=\"field-body\">Save cropped image to filename</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Crop an existing image.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/runtime/.venv/lib/python3.10/site-packages/RPA/Images.py",
      "lineno": 145
    },
    {
      "name": "Find Template In Image",
      "args": [
        {
          "name": "image",
          "type": null,
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "image"
        },
        {
          "name": "template",
          "type": null,
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "template"
        },
        {
          "name": "region",
          "type": null,
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "region=None"
        },
        {
          "name": "limit",
          "type": null,
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "limit=None"
        },
        {
          "name": "tolerance",
          "type": null,
          "types": [],
          "typedocs": {},
          "defaultValue": "None",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "tolerance=None"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Attempt to find the template from the given image.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param image:</th><td class=\"field-body\">Path to image or Image instance, used to search from</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param template:</th><td class=\"field-body\">Path to image or Image instance, used to search with</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param limit:</th><td class=\"field-body\">Limit returned results to maximum of <cite>limit</cite>.</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param region:</th><td class=\"field-body\">Area to search from. Can speed up search significantly.</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param tolerance:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Tolerance for matching, value between 0.1 and 1.0</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">List of matching regions</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">raises ImageNotFoundError:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">No match was found</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">raises ValueError:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Template is larger than search region</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Attempt to find the template from the given image.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/runtime/.venv/lib/python3.10/site-packages/RPA/Images.py",
      "lineno": 163
    },
    {
      "name": "Get Pixel Color In Image",
      "args": [
        {
          "name": "image",
          "type": null,
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "image"
        },
        {
          "name": "point",
          "type": null,
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "point"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Get the RGB value of a pixel in the image.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param image:</th><td class=\"field-body\">image to get pixel from</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param point:</th><td class=\"field-body\">coordinates for pixel or Point object</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">RGB value of pixel in image</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Get the RGB value of a pixel in the image.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/runtime/.venv/lib/python3.10/site-packages/RPA/Images.py",
      "lineno": 227
    },
    {
      "name": "Show Region In Image",
      "args": [
        {
          "name": "image",
          "type": null,
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "image"
        },
        {
          "name": "region",
          "type": null,
          "types": [],
          "typedocs": {},
          "defaultValue": null,
          "kind": "POSITIONAL_OR_NAMED",
          "required": true,
          "repr": "region"
        },
        {
          "name": "color",
          "type": null,
          "types": [],
          "typedocs": {},
          "defaultValue": "red",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "color=red"
        },
        {
          "name": "width",
          "type": null,
          "types": [],
          "typedocs": {},
          "defaultValue": "5",
          "kind": "POSITIONAL_OR_NAMED",
          "required": false,
          "repr": "width=5"
        }
      ],
      "doc": "<div class=\"document\">\n<p>Draw a rectangle onto the image around the given region.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param image:</th><td class=\"field-body\">image to draw onto</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param region:</th><td class=\"field-body\">coordinates for region or Region object</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param color:</th><td class=\"field-body\">color of rectangle</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param width:</th><td class=\"field-body\">line width of rectangle</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">Image of the selected region</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
      "shortdoc": "Draw a rectangle onto the image around the given region.",
      "tags": [],
      "source": "/home/stamm/Develop/RPA/worker/runtime/.venv/lib/python3.10/site-packages/RPA/Images.py",
      "lineno": 211
    }
  ],
  "dataTypes": {
    "enums": [],
    "typedDicts": []
  },
  "typedocs": []
}